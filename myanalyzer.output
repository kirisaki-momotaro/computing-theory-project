Terminals unused in grammar

    TK_ASSGN


State 9 conflicts: 18 shift/reduce
State 12 conflicts: 36 shift/reduce, 23 reduce/reduce
State 51 conflicts: 19 shift/reduce
State 52 conflicts: 17 shift/reduce
State 54 conflicts: 18 shift/reduce
State 55 conflicts: 18 shift/reduce
State 61 conflicts: 1 shift/reduce, 1 reduce/reduce
State 63 conflicts: 19 shift/reduce
State 64 conflicts: 18 shift/reduce
State 66 conflicts: 18 shift/reduce
State 67 conflicts: 18 shift/reduce
State 69 conflicts: 18 shift/reduce
State 73 conflicts: 1 shift/reduce
State 76 conflicts: 3 shift/reduce
State 77 conflicts: 17 shift/reduce
State 81 conflicts: 17 shift/reduce
State 82 conflicts: 1 shift/reduce
State 83 conflicts: 22 shift/reduce
State 92 conflicts: 18 shift/reduce
State 94 conflicts: 19 shift/reduce
State 95 conflicts: 19 shift/reduce
State 96 conflicts: 19 shift/reduce
State 97 conflicts: 19 shift/reduce
State 98 conflicts: 19 shift/reduce
State 99 conflicts: 19 shift/reduce
State 100 conflicts: 19 shift/reduce
State 101 conflicts: 19 shift/reduce
State 102 conflicts: 19 shift/reduce
State 103 conflicts: 19 shift/reduce
State 104 conflicts: 19 shift/reduce
State 105 conflicts: 19 shift/reduce
State 106 conflicts: 19 shift/reduce
State 107 conflicts: 19 shift/reduce
State 108 conflicts: 19 shift/reduce
State 109 conflicts: 19 shift/reduce
State 110 conflicts: 19 shift/reduce
State 111 conflicts: 19 shift/reduce
State 112 conflicts: 19 shift/reduce
State 113 conflicts: 19 shift/reduce
State 115 conflicts: 19 shift/reduce
State 116 conflicts: 19 shift/reduce
State 117 conflicts: 22 shift/reduce
State 118 conflicts: 18 shift/reduce
State 121 conflicts: 18 shift/reduce
State 147 conflicts: 4 shift/reduce
State 152 conflicts: 36 shift/reduce, 23 reduce/reduce
State 160 conflicts: 18 shift/reduce
State 166 conflicts: 1 reduce/reduce
State 170 conflicts: 22 shift/reduce
State 171 conflicts: 22 shift/reduce
State 172 conflicts: 22 shift/reduce
State 173 conflicts: 22 shift/reduce
State 174 conflicts: 22 shift/reduce
State 175 conflicts: 22 shift/reduce
State 176 conflicts: 22 shift/reduce
State 177 conflicts: 22 shift/reduce
State 178 conflicts: 22 shift/reduce
State 179 conflicts: 22 shift/reduce
State 180 conflicts: 22 shift/reduce
State 181 conflicts: 22 shift/reduce
State 182 conflicts: 22 shift/reduce
State 183 conflicts: 22 shift/reduce
State 184 conflicts: 22 shift/reduce
State 185 conflicts: 22 shift/reduce
State 186 conflicts: 22 shift/reduce
State 187 conflicts: 22 shift/reduce
State 188 conflicts: 22 shift/reduce
State 189 conflicts: 22 shift/reduce
State 190 conflicts: 22 shift/reduce
State 191 conflicts: 22 shift/reduce
State 219 conflicts: 18 shift/reduce
State 221 conflicts: 18 shift/reduce
State 223 conflicts: 17 shift/reduce
State 228 conflicts: 18 shift/reduce
State 230 conflicts: 1 reduce/reduce
State 233 conflicts: 1 shift/reduce
State 239 conflicts: 18 shift/reduce
State 250 conflicts: 18 shift/reduce
State 252 conflicts: 1 shift/reduce
State 260 conflicts: 18 shift/reduce
State 262 conflicts: 35 shift/reduce, 23 reduce/reduce
State 264 conflicts: 35 shift/reduce, 23 reduce/reduce
State 271 conflicts: 1 shift/reduce
State 283 conflicts: 1 shift/reduce
State 296 conflicts: 18 shift/reduce
State 297 conflicts: 44 reduce/reduce
State 298 conflicts: 18 shift/reduce
State 299 conflicts: 17 shift/reduce
State 300 conflicts: 18 shift/reduce
State 301 conflicts: 18 shift/reduce
State 332 conflicts: 18 shift/reduce
State 344 conflicts: 17 shift/reduce
State 345 conflicts: 1 shift/reduce
State 357 conflicts: 35 shift/reduce, 23 reduce/reduce
State 361 conflicts: 1 shift/reduce
State 367 conflicts: 18 shift/reduce
State 368 conflicts: 18 shift/reduce
State 372 conflicts: 18 shift/reduce
State 374 conflicts: 18 shift/reduce


Grammar

    0 $accept: input $end

    1 input: compiler

    2 compiler: final_program

    3 final_program: program main main_program KW_ENDDEF OP_SEMI program
    4              | program main main_program KW_ENDDEF OP_SEMI
    5              | main main_program KW_ENDDEF OP_SEMI program
    6              | main main_program KW_ENDDEF OP_SEMI

    7 main: KW_DEF KW_MAIN OP_PAR_L OP_PAR_R OP_MEAN

    8 program: global_declarations
    9        | program global_declarations

   10 global_declarations: var_declarations
   11                    | func_declaration function_code KW_RETURN OP_SEMI KW_ENDDEF OP_SEMI
   12                    | func_declaration function_code KW_RETURN expr OP_SEMI KW_ENDDEF OP_SEMI
   13                    | func_declaration KW_RETURN expr OP_SEMI KW_ENDDEF OP_SEMI
   14                    | func_declaration function_code KW_ENDDEF OP_SEMI
   15                    | KW_COMP TK_IDENT OP_MEAN comp_code KW_ENDCOMP OP_SEMI

   16 func_declaration: KW_DEF TK_IDENT OP_PAR_L func_parameters OP_PAR_R OP_MINUS OP_MORE types OP_MEAN
   17                 | KW_DEF TK_IDENT OP_PAR_L func_parameters OP_PAR_R OP_MINUS OP_MORE KW_VOID OP_MEAN
   18                 | KW_DEF TK_IDENT OP_PAR_L func_parameters OP_PAR_R OP_MEAN
   19                 | KW_DEF TK_IDENT OP_PAR_L OP_PAR_R OP_MINUS OP_MORE types OP_MEAN
   20                 | KW_DEF TK_IDENT OP_PAR_L OP_PAR_R OP_MEAN

   21 func_parameters: %empty
   22                | TK_IDENT OP_MEAN types
   23                | func_parameters OP_COMA TK_IDENT OP_MEAN types
   24                | TK_IDENT OP_BRA_L OP_BRA_R OP_MEAN types
   25                | func_parameters OP_COMA TK_IDENT OP_BRA_L OP_BRA_R OP_MEAN types

   26 function_code: %empty
   27              | local_declarations
   28              | function_code local_declarations

   29 main_program: local_declarations
   30             | main_program local_declarations

   31 local_declarations: var_declarations
   32                   | expr OP_SEMI
   33                   | conditions KW_ENDIF OP_SEMI
   34                   | while_loop KW_ENDWHILE OP_SEMI
   35                   | for_loop KW_ENDFOR OP_SEMI
   36                   | KW_BREAK OP_SEMI
   37                   | KW_CONTINUE OP_SEMI

   38 var_declarations: variable_types OP_ASSIGN expr OP_SEMI
   39                 | variable_types OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN expr OP_SEMI
   40                 | variable_types OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   41                 | variable_types OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   42                 | variable_types OP_BRA_L legal_array_index OP_BRA_R OP_MEAN types OP_SEMI
   43                 | comp_types_of_declarations OP_MEAN types OP_SEMI
   44                 | KW_CONST comp_types_of_declarations OP_ASSIGN data_types OP_MEAN types OP_SEMI
   45                 | KW_CONST comp_types_of_declarations OP_ASSIGN operators data_types OP_MEAN types OP_SEMI

   46 conditions: KW_IF OP_PAR_L expr OP_PAR_R OP_MEAN main_program
   47           | KW_IF OP_PAR_L expr OP_PAR_R OP_MEAN comp_function_code
   48           | conditions KW_ELSE OP_MEAN main_program

   49 while_loop: KW_WHILE OP_PAR_L expr OP_PAR_R OP_MEAN main_program
   50           | KW_WHILE OP_PAR_L expr OP_PAR_R OP_MEAN comp_function_code

   51 for_loop: KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_BRA_R OP_MEAN main_program
   52         | KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_BRA_R OP_MEAN comp_function_code
   53         | KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_MEAN expr OP_BRA_R OP_MEAN main_program

   54 variable_types: TK_IDENT
   55               | KW_HASH TK_IDENT

   56 comp_types_of_declarations: variable_types
   57                           | comp_types_of_declarations OP_COMA variable_types
   58                           | comp_types_of_declarations OP_COMA variable_types OP_BRA_L legal_array_index OP_BRA_R

   59 expr: %empty
   60     | TK_STRING
   61     | TK_INT
   62     | TK_REAL
   63     | KW_TRUE
   64     | KW_FALSE
   65     | variable_types OP_PAR_L OP_PAR_R
   66     | variable_types OP_PAR_L expr OP_PAR_R
   67     | operators expr
   68     | variable_types
   69     | variable_types OP_BRA_L legal_array_index OP_BRA_R
   70     | variable_types OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | variable_types OP_BRA_L variable_types OP_BRA_R
   72     | OP_POINTER expr
   73     | expr OP_COMA expr
   74     | expr OP_DOT expr
   75     | expr OP_PLUS expr
   76     | expr OP_MINUS expr
   77     | expr OP_MUL expr
   78     | expr OP_DIV expr
   79     | expr OP_MOD expr
   80     | expr OP_EQ expr
   81     | expr OP_INEQ expr
   82     | expr OP_LESS expr
   83     | expr OP_EQLESS expr
   84     | expr OP_MORE expr
   85     | expr OP_EQMORE expr
   86     | expr OP_ASSIGN expr
   87     | expr KW_AND expr
   88     | expr KW_OR expr
   89     | expr KW_NOT expr
   90     | expr OP_PLUSEQ expr
   91     | expr OP_MINUSEQ expr
   92     | expr OP_MULEQ expr
   93     | expr OP_DIVEQ expr
   94     | expr OP_MODEQ expr
   95     | OP_PAR_L expr OP_PAR_R
   96     | OP_BRA_L expr OP_BRA_L
   97     | OP_SEMI

   98 legal_array_index: TK_INT
   99                  | TK_IDENT

  100 data_types: TK_INT
  101           | TK_STRING
  102           | TK_REAL

  103 types: KW_STR
  104      | KW_INTEGER
  105      | KW_SCALAR
  106      | KW_BOOLEAN
  107      | TK_IDENT

  108 operators: OP_PLUS
  109          | OP_MINUS
  110          | OP_MUL
  111          | OP_DIV
  112          | OP_MOD
  113          | OP_POWER
  114          | OP_EQ
  115          | OP_INEQ
  116          | OP_LESS
  117          | OP_EQLESS
  118          | OP_MORE
  119          | OP_EQMORE
  120          | OP_ASSIGN
  121          | OP_PLUSEQ
  122          | OP_MINUSEQ
  123          | OP_MULEQ
  124          | OP_DIVEQ
  125          | OP_MODEQ

  126 comp_code: comp_local_declarations
  127          | comp_code comp_local_declarations

  128 comp_local_declarations: %empty
  129                        | comp_initialise_local_declarations
  130                        | comp_func_declaration comp_function_code KW_RETURN OP_SEMI KW_ENDDEF OP_SEMI
  131                        | comp_func_declaration comp_function_code KW_RETURN expr OP_SEMI KW_ENDDEF OP_SEMI
  132                        | comp_func_declaration KW_RETURN expr OP_SEMI KW_ENDDEF OP_SEMI
  133                        | comp_func_declaration comp_function_code KW_ENDDEF OP_SEMI

  134 comp_initialise_local_declarations: comp_var_declarations

  135 comp_var_declarations: KW_HASH TK_IDENT OP_ASSIGN expr OP_SEMI
  136                      | KW_HASH TK_IDENT OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN expr OP_SEMI
  137                      | KW_HASH TK_IDENT OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN KW_HASH TK_IDENT OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
  138                      | KW_HASH TK_IDENT OP_ASSIGN TK_IDENT OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
  139                      | KW_HASH TK_IDENT OP_BRA_L legal_array_index OP_BRA_R OP_MEAN types OP_SEMI
  140                      | comp_initialise_types_of_declarations OP_MEAN types OP_SEMI
  141                      | KW_CONST comp_initialise_types_of_declarations OP_ASSIGN data_types OP_MEAN types OP_SEMI
  142                      | KW_CONST comp_initialise_types_of_declarations OP_ASSIGN operators data_types OP_MEAN types OP_SEMI

  143 comp_initialise_types_of_declarations: KW_HASH TK_IDENT
  144                                      | comp_initialise_types_of_declarations OP_COMA KW_HASH TK_IDENT
  145                                      | comp_initialise_types_of_declarations OP_COMA KW_HASH TK_IDENT OP_BRA_L legal_array_index OP_BRA_R

  146 comp_function_code: %empty
  147                   | local_declarations
  148                   | comp_function_code local_declarations

  149 comp_func_declaration: KW_DEF TK_IDENT OP_PAR_L func_parameters OP_PAR_R OP_MINUS OP_MORE types OP_MEAN
  150                      | KW_DEF TK_IDENT OP_PAR_L func_parameters OP_PAR_R OP_MEAN
  151                      | KW_DEF TK_IDENT OP_PAR_L OP_PAR_R OP_MINUS OP_MORE types OP_MEAN
  152                      | KW_DEF TK_IDENT OP_PAR_L OP_PAR_R OP_MEAN


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    TK_STRING <str> (258) 60 101
    TK_IDENT <str> (259) 15 16 17 18 19 20 22 23 24 25 51 52 53 54 55 99 107 135 136 137 138 139 143 144 145 149 150 151 152
    TK_INT <str> (260) 61 98 100
    TK_REAL <str> (261) 62 102
    TK_ASSGN <str> (262)
    KW_HASH (263) 55 70 135 136 137 138 139 143 144 145
    KW_IF (264) 46 47
    KW_ELSE (265) 48
    KW_INTEGER (266) 104
    KW_FALSE (267) 64
    KW_FOR (268) 51 52 53
    KW_BREAK (269) 36
    KW_DEF (270) 7 16 17 18 19 20 149 150 151 152
    KW_ENDCOMP (271) 15
    KW_SCALAR (272) 105
    KW_CONST (273) 44 45 141 142
    KW_IN (274) 51 52 53
    KW_CONTINUE (275) 37
    KW_ENDDEF (276) 3 4 5 6 11 12 13 14 130 131 132 133
    KW_STR (277) 103
    KW_ENDFOR (278) 35
    KW_NOT (279) 89
    KW_MAIN (280) 7
    KW_BOOLEAN (281) 106
    KW_WHILE (282) 49 50
    KW_AND (283) 87
    KW_RETURN (284) 11 12 13 130 131 132
    KW_TRUE (285) 63
    KW_ENDIF (286) 33
    KW_ENDWHILE (287) 34
    KW_OR (288) 88
    KW_COMP (289) 15
    KW_VOID <str> (290) 17
    OP_PLUS <str> (291) 75 108
    OP_MINUS <str> (292) 16 17 19 76 109 149 151
    OP_MUL <str> (293) 77 110
    OP_DIV <str> (294) 78 111
    OP_MOD <str> (295) 79 112
    OP_POWER <str> (296) 113
    OP_EQ <str> (297) 80 114
    OP_INEQ <str> (298) 81 115
    OP_LESS <str> (299) 82 116
    OP_EQLESS <str> (300) 83 117
    OP_MORE <str> (301) 16 17 19 84 118 149 151
    OP_EQMORE <str> (302) 85 119
    OP_ASSIGN <str> (303) 38 39 40 41 44 45 86 120 135 136 137 138 141 142
    OP_PLUSEQ <str> (304) 90 121
    OP_MINUSEQ <str> (305) 91 122
    OP_MULEQ <str> (306) 92 123
    OP_DIVEQ <str> (307) 93 124
    OP_MODEQ <str> (308) 94 125
    OP_POINTER <str> (309) 72
    OP_PAR_L <str> (310) 7 16 17 18 19 20 46 47 49 50 65 66 95 149 150 151 152
    OP_PAR_R <str> (311) 7 16 17 18 19 20 46 47 49 50 65 66 95 149 150 151 152
    OP_SEMI <str> (312) 3 4 5 6 11 12 13 14 15 32 33 34 35 36 37 38 39 40 41 42 43 44 45 97 130 131 132 133 135 136 137 138 139 140 141 142
    OP_COMA <str> (313) 23 25 57 58 73 144 145
    OP_BRA_L <str> (314) 24 25 39 40 41 42 51 52 53 58 69 70 71 96 136 137 138 139 145
    OP_BRA_R <str> (315) 24 25 39 40 41 42 51 52 53 58 69 70 71 136 137 138 139 145
    OP_DOT <str> (316) 74
    OP_MEAN <str> (317) 7 15 16 17 18 19 20 22 23 24 25 42 43 44 45 46 47 48 49 50 51 52 53 139 140 141 142 149 150 151 152


Nonterminals, with rules where they appear

    $accept (63)
        on left: 0
    input (64)
        on left: 1
        on right: 0
    compiler <str> (65)
        on left: 2
        on right: 1
    final_program <str> (66)
        on left: 3 4 5 6
        on right: 2
    main <str> (67)
        on left: 7
        on right: 3 4 5 6
    program <str> (68)
        on left: 8 9
        on right: 3 4 5 9
    global_declarations <str> (69)
        on left: 10 11 12 13 14 15
        on right: 8 9
    func_declaration <str> (70)
        on left: 16 17 18 19 20
        on right: 11 12 13 14
    func_parameters <str> (71)
        on left: 21 22 23 24 25
        on right: 16 17 18 23 25 149 150
    function_code <str> (72)
        on left: 26 27 28
        on right: 11 12 14 28
    main_program <str> (73)
        on left: 29 30
        on right: 3 4 5 6 30 46 48 49 51 53
    local_declarations <str> (74)
        on left: 31 32 33 34 35 36 37
        on right: 27 28 29 30 147 148
    var_declarations <str> (75)
        on left: 38 39 40 41 42 43 44 45
        on right: 10 31
    conditions <str> (76)
        on left: 46 47 48
        on right: 33 48
    while_loop <str> (77)
        on left: 49 50
        on right: 34
    for_loop <str> (78)
        on left: 51 52 53
        on right: 35
    variable_types <str> (79)
        on left: 54 55
        on right: 38 39 40 41 42 56 57 58 65 66 68 69 70 71
    comp_types_of_declarations <str> (80)
        on left: 56 57 58
        on right: 43 44 45 57 58
    expr <str> (81)
        on left: 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97
        on right: 12 13 32 38 39 46 47 49 50 51 52 53 66 67 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 131 132 135 136
    legal_array_index <str> (82)
        on left: 98 99
        on right: 39 40 41 42 58 69 70 136 137 138 139 145
    data_types <str> (83)
        on left: 100 101 102
        on right: 44 45 141 142
    types <str> (84)
        on left: 103 104 105 106 107
        on right: 16 19 22 23 24 25 42 43 44 45 139 140 141 142 149 151
    operators <str> (85)
        on left: 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125
        on right: 45 67 142
    comp_code <str> (86)
        on left: 126 127
        on right: 15 127
    comp_local_declarations <str> (87)
        on left: 128 129 130 131 132 133
        on right: 126 127
    comp_initialise_local_declarations <str> (88)
        on left: 134
        on right: 129
    comp_var_declarations <str> (89)
        on left: 135 136 137 138 139 140 141 142
        on right: 134
    comp_initialise_types_of_declarations <str> (90)
        on left: 143 144 145
        on right: 140 141 142 144 145
    comp_function_code <str> (91)
        on left: 146 147 148
        on right: 47 50 52 130 131 133 148
    comp_func_declaration <str> (92)
        on left: 149 150 151 152
        on right: 130 131 132 133


State 0

    0 $accept: . input $end
    1 input: . compiler
    2 compiler: . final_program
    3 final_program: . program main main_program KW_ENDDEF OP_SEMI program
    4              | . program main main_program KW_ENDDEF OP_SEMI
    5              | . main main_program KW_ENDDEF OP_SEMI program
    6              | . main main_program KW_ENDDEF OP_SEMI
    7 main: . KW_DEF KW_MAIN OP_PAR_L OP_PAR_R OP_MEAN
    8 program: . global_declarations
    9        | . program global_declarations
   10 global_declarations: . var_declarations
   11                    | . func_declaration function_code KW_RETURN OP_SEMI KW_ENDDEF OP_SEMI
   12                    | . func_declaration function_code KW_RETURN expr OP_SEMI KW_ENDDEF OP_SEMI
   13                    | . func_declaration KW_RETURN expr OP_SEMI KW_ENDDEF OP_SEMI
   14                    | . func_declaration function_code KW_ENDDEF OP_SEMI
   15                    | . KW_COMP TK_IDENT OP_MEAN comp_code KW_ENDCOMP OP_SEMI
   16 func_declaration: . KW_DEF TK_IDENT OP_PAR_L func_parameters OP_PAR_R OP_MINUS OP_MORE types OP_MEAN
   17                 | . KW_DEF TK_IDENT OP_PAR_L func_parameters OP_PAR_R OP_MINUS OP_MORE KW_VOID OP_MEAN
   18                 | . KW_DEF TK_IDENT OP_PAR_L func_parameters OP_PAR_R OP_MEAN
   19                 | . KW_DEF TK_IDENT OP_PAR_L OP_PAR_R OP_MINUS OP_MORE types OP_MEAN
   20                 | . KW_DEF TK_IDENT OP_PAR_L OP_PAR_R OP_MEAN
   38 var_declarations: . variable_types OP_ASSIGN expr OP_SEMI
   39                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN expr OP_SEMI
   40                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   41                 | . variable_types OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   42                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_MEAN types OP_SEMI
   43                 | . comp_types_of_declarations OP_MEAN types OP_SEMI
   44                 | . KW_CONST comp_types_of_declarations OP_ASSIGN data_types OP_MEAN types OP_SEMI
   45                 | . KW_CONST comp_types_of_declarations OP_ASSIGN operators data_types OP_MEAN types OP_SEMI
   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   56 comp_types_of_declarations: . variable_types
   57                           | . comp_types_of_declarations OP_COMA variable_types
   58                           | . comp_types_of_declarations OP_COMA variable_types OP_BRA_L legal_array_index OP_BRA_R

    TK_IDENT  shift, and go to state 1
    KW_HASH   shift, and go to state 2
    KW_DEF    shift, and go to state 3
    KW_CONST  shift, and go to state 4
    KW_COMP   shift, and go to state 5

    input                       go to state 6
    compiler                    go to state 7
    final_program               go to state 8
    main                        go to state 9
    program                     go to state 10
    global_declarations         go to state 11
    func_declaration            go to state 12
    var_declarations            go to state 13
    variable_types              go to state 14
    comp_types_of_declarations  go to state 15


State 1

   54 variable_types: TK_IDENT .

    $default  reduce using rule 54 (variable_types)


State 2

   55 variable_types: KW_HASH . TK_IDENT

    TK_IDENT  shift, and go to state 16


State 3

    7 main: KW_DEF . KW_MAIN OP_PAR_L OP_PAR_R OP_MEAN
   16 func_declaration: KW_DEF . TK_IDENT OP_PAR_L func_parameters OP_PAR_R OP_MINUS OP_MORE types OP_MEAN
   17                 | KW_DEF . TK_IDENT OP_PAR_L func_parameters OP_PAR_R OP_MINUS OP_MORE KW_VOID OP_MEAN
   18                 | KW_DEF . TK_IDENT OP_PAR_L func_parameters OP_PAR_R OP_MEAN
   19                 | KW_DEF . TK_IDENT OP_PAR_L OP_PAR_R OP_MINUS OP_MORE types OP_MEAN
   20                 | KW_DEF . TK_IDENT OP_PAR_L OP_PAR_R OP_MEAN

    TK_IDENT  shift, and go to state 17
    KW_MAIN   shift, and go to state 18


State 4

   44 var_declarations: KW_CONST . comp_types_of_declarations OP_ASSIGN data_types OP_MEAN types OP_SEMI
   45                 | KW_CONST . comp_types_of_declarations OP_ASSIGN operators data_types OP_MEAN types OP_SEMI
   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   56 comp_types_of_declarations: . variable_types
   57                           | . comp_types_of_declarations OP_COMA variable_types
   58                           | . comp_types_of_declarations OP_COMA variable_types OP_BRA_L legal_array_index OP_BRA_R

    TK_IDENT  shift, and go to state 1
    KW_HASH   shift, and go to state 2

    variable_types              go to state 19
    comp_types_of_declarations  go to state 20


State 5

   15 global_declarations: KW_COMP . TK_IDENT OP_MEAN comp_code KW_ENDCOMP OP_SEMI

    TK_IDENT  shift, and go to state 21


State 6

    0 $accept: input . $end

    $end  shift, and go to state 22


State 7

    1 input: compiler .

    $default  reduce using rule 1 (input)


State 8

    2 compiler: final_program .

    $default  reduce using rule 2 (compiler)


State 9

    5 final_program: main . main_program KW_ENDDEF OP_SEMI program
    6              | main . main_program KW_ENDDEF OP_SEMI
   29 main_program: . local_declarations
   30             | . main_program local_declarations
   31 local_declarations: . var_declarations
   32                   | . expr OP_SEMI
   33                   | . conditions KW_ENDIF OP_SEMI
   34                   | . while_loop KW_ENDWHILE OP_SEMI
   35                   | . for_loop KW_ENDFOR OP_SEMI
   36                   | . KW_BREAK OP_SEMI
   37                   | . KW_CONTINUE OP_SEMI
   38 var_declarations: . variable_types OP_ASSIGN expr OP_SEMI
   39                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN expr OP_SEMI
   40                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   41                 | . variable_types OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   42                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_MEAN types OP_SEMI
   43                 | . comp_types_of_declarations OP_MEAN types OP_SEMI
   44                 | . KW_CONST comp_types_of_declarations OP_ASSIGN data_types OP_MEAN types OP_SEMI
   45                 | . KW_CONST comp_types_of_declarations OP_ASSIGN operators data_types OP_MEAN types OP_SEMI
   46 conditions: . KW_IF OP_PAR_L expr OP_PAR_R OP_MEAN main_program
   47           | . KW_IF OP_PAR_L expr OP_PAR_R OP_MEAN comp_function_code
   48           | . conditions KW_ELSE OP_MEAN main_program
   49 while_loop: . KW_WHILE OP_PAR_L expr OP_PAR_R OP_MEAN main_program
   50           | . KW_WHILE OP_PAR_L expr OP_PAR_R OP_MEAN comp_function_code
   51 for_loop: . KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_BRA_R OP_MEAN main_program
   52         | . KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_BRA_R OP_MEAN comp_function_code
   53         | . KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_MEAN expr OP_BRA_R OP_MEAN main_program
   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   56 comp_types_of_declarations: . variable_types
   57                           | . comp_types_of_declarations OP_COMA variable_types
   58                           | . comp_types_of_declarations OP_COMA variable_types OP_BRA_L legal_array_index OP_BRA_R
   59 expr: . %empty  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_SEMI, OP_COMA, OP_DOT]
   60     | . TK_STRING
   61     | . TK_INT
   62     | . TK_REAL
   63     | . KW_TRUE
   64     | . KW_FALSE
   65     | . variable_types OP_PAR_L OP_PAR_R
   66     | . variable_types OP_PAR_L expr OP_PAR_R
   67     | . operators expr
   68     | . variable_types
   69     | . variable_types OP_BRA_L legal_array_index OP_BRA_R
   70     | . variable_types OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | . variable_types OP_BRA_L variable_types OP_BRA_R
   72     | . OP_POINTER expr
   73     | . expr OP_COMA expr
   74     | . expr OP_DOT expr
   75     | . expr OP_PLUS expr
   76     | . expr OP_MINUS expr
   77     | . expr OP_MUL expr
   78     | . expr OP_DIV expr
   79     | . expr OP_MOD expr
   80     | . expr OP_EQ expr
   81     | . expr OP_INEQ expr
   82     | . expr OP_LESS expr
   83     | . expr OP_EQLESS expr
   84     | . expr OP_MORE expr
   85     | . expr OP_EQMORE expr
   86     | . expr OP_ASSIGN expr
   87     | . expr KW_AND expr
   88     | . expr KW_OR expr
   89     | . expr KW_NOT expr
   90     | . expr OP_PLUSEQ expr
   91     | . expr OP_MINUSEQ expr
   92     | . expr OP_MULEQ expr
   93     | . expr OP_DIVEQ expr
   94     | . expr OP_MODEQ expr
   95     | . OP_PAR_L expr OP_PAR_R
   96     | . OP_BRA_L expr OP_BRA_L
   97     | . OP_SEMI
  108 operators: . OP_PLUS
  109          | . OP_MINUS
  110          | . OP_MUL
  111          | . OP_DIV
  112          | . OP_MOD
  113          | . OP_POWER
  114          | . OP_EQ
  115          | . OP_INEQ
  116          | . OP_LESS
  117          | . OP_EQLESS
  118          | . OP_MORE
  119          | . OP_EQMORE
  120          | . OP_ASSIGN
  121          | . OP_PLUSEQ
  122          | . OP_MINUSEQ
  123          | . OP_MULEQ
  124          | . OP_DIVEQ
  125          | . OP_MODEQ

    TK_STRING    shift, and go to state 23
    TK_IDENT     shift, and go to state 1
    TK_INT       shift, and go to state 24
    TK_REAL      shift, and go to state 25
    KW_HASH      shift, and go to state 2
    KW_IF        shift, and go to state 26
    KW_FALSE     shift, and go to state 27
    KW_FOR       shift, and go to state 28
    KW_BREAK     shift, and go to state 29
    KW_CONST     shift, and go to state 4
    KW_CONTINUE  shift, and go to state 30
    KW_WHILE     shift, and go to state 31
    KW_TRUE      shift, and go to state 32
    OP_PLUS      shift, and go to state 33
    OP_MINUS     shift, and go to state 34
    OP_MUL       shift, and go to state 35
    OP_DIV       shift, and go to state 36
    OP_MOD       shift, and go to state 37
    OP_POWER     shift, and go to state 38
    OP_EQ        shift, and go to state 39
    OP_INEQ      shift, and go to state 40
    OP_LESS      shift, and go to state 41
    OP_EQLESS    shift, and go to state 42
    OP_MORE      shift, and go to state 43
    OP_EQMORE    shift, and go to state 44
    OP_ASSIGN    shift, and go to state 45
    OP_PLUSEQ    shift, and go to state 46
    OP_MINUSEQ   shift, and go to state 47
    OP_MULEQ     shift, and go to state 48
    OP_DIVEQ     shift, and go to state 49
    OP_MODEQ     shift, and go to state 50
    OP_POINTER   shift, and go to state 51
    OP_PAR_L     shift, and go to state 52
    OP_SEMI      shift, and go to state 53
    OP_BRA_L     shift, and go to state 54

    OP_PLUS     [reduce using rule 59 (expr)]
    OP_MINUS    [reduce using rule 59 (expr)]
    OP_MUL      [reduce using rule 59 (expr)]
    OP_DIV      [reduce using rule 59 (expr)]
    OP_MOD      [reduce using rule 59 (expr)]
    OP_EQ       [reduce using rule 59 (expr)]
    OP_INEQ     [reduce using rule 59 (expr)]
    OP_LESS     [reduce using rule 59 (expr)]
    OP_EQLESS   [reduce using rule 59 (expr)]
    OP_MORE     [reduce using rule 59 (expr)]
    OP_EQMORE   [reduce using rule 59 (expr)]
    OP_ASSIGN   [reduce using rule 59 (expr)]
    OP_PLUSEQ   [reduce using rule 59 (expr)]
    OP_MINUSEQ  [reduce using rule 59 (expr)]
    OP_MULEQ    [reduce using rule 59 (expr)]
    OP_DIVEQ    [reduce using rule 59 (expr)]
    OP_MODEQ    [reduce using rule 59 (expr)]
    OP_SEMI     [reduce using rule 59 (expr)]
    $default    reduce using rule 59 (expr)

    main_program                go to state 55
    local_declarations          go to state 56
    var_declarations            go to state 57
    conditions                  go to state 58
    while_loop                  go to state 59
    for_loop                    go to state 60
    variable_types              go to state 61
    comp_types_of_declarations  go to state 15
    expr                        go to state 62
    operators                   go to state 63


State 10

    3 final_program: program . main main_program KW_ENDDEF OP_SEMI program
    4              | program . main main_program KW_ENDDEF OP_SEMI
    7 main: . KW_DEF KW_MAIN OP_PAR_L OP_PAR_R OP_MEAN
    9 program: program . global_declarations
   10 global_declarations: . var_declarations
   11                    | . func_declaration function_code KW_RETURN OP_SEMI KW_ENDDEF OP_SEMI
   12                    | . func_declaration function_code KW_RETURN expr OP_SEMI KW_ENDDEF OP_SEMI
   13                    | . func_declaration KW_RETURN expr OP_SEMI KW_ENDDEF OP_SEMI
   14                    | . func_declaration function_code KW_ENDDEF OP_SEMI
   15                    | . KW_COMP TK_IDENT OP_MEAN comp_code KW_ENDCOMP OP_SEMI
   16 func_declaration: . KW_DEF TK_IDENT OP_PAR_L func_parameters OP_PAR_R OP_MINUS OP_MORE types OP_MEAN
   17                 | . KW_DEF TK_IDENT OP_PAR_L func_parameters OP_PAR_R OP_MINUS OP_MORE KW_VOID OP_MEAN
   18                 | . KW_DEF TK_IDENT OP_PAR_L func_parameters OP_PAR_R OP_MEAN
   19                 | . KW_DEF TK_IDENT OP_PAR_L OP_PAR_R OP_MINUS OP_MORE types OP_MEAN
   20                 | . KW_DEF TK_IDENT OP_PAR_L OP_PAR_R OP_MEAN
   38 var_declarations: . variable_types OP_ASSIGN expr OP_SEMI
   39                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN expr OP_SEMI
   40                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   41                 | . variable_types OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   42                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_MEAN types OP_SEMI
   43                 | . comp_types_of_declarations OP_MEAN types OP_SEMI
   44                 | . KW_CONST comp_types_of_declarations OP_ASSIGN data_types OP_MEAN types OP_SEMI
   45                 | . KW_CONST comp_types_of_declarations OP_ASSIGN operators data_types OP_MEAN types OP_SEMI
   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   56 comp_types_of_declarations: . variable_types
   57                           | . comp_types_of_declarations OP_COMA variable_types
   58                           | . comp_types_of_declarations OP_COMA variable_types OP_BRA_L legal_array_index OP_BRA_R

    TK_IDENT  shift, and go to state 1
    KW_HASH   shift, and go to state 2
    KW_DEF    shift, and go to state 3
    KW_CONST  shift, and go to state 4
    KW_COMP   shift, and go to state 5

    main                        go to state 64
    global_declarations         go to state 65
    func_declaration            go to state 12
    var_declarations            go to state 13
    variable_types              go to state 14
    comp_types_of_declarations  go to state 15


State 11

    8 program: global_declarations .

    $default  reduce using rule 8 (program)


State 12

   11 global_declarations: func_declaration . function_code KW_RETURN OP_SEMI KW_ENDDEF OP_SEMI
   12                    | func_declaration . function_code KW_RETURN expr OP_SEMI KW_ENDDEF OP_SEMI
   13                    | func_declaration . KW_RETURN expr OP_SEMI KW_ENDDEF OP_SEMI
   14                    | func_declaration . function_code KW_ENDDEF OP_SEMI
   26 function_code: . %empty  [TK_STRING, TK_IDENT, TK_INT, TK_REAL, KW_HASH, KW_IF, KW_FALSE, KW_FOR, KW_BREAK, KW_CONST, KW_CONTINUE, KW_ENDDEF, KW_NOT, KW_WHILE, KW_AND, KW_RETURN, KW_TRUE, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_POWER, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_POINTER, OP_PAR_L, OP_SEMI, OP_COMA, OP_BRA_L, OP_DOT]
   27              | . local_declarations
   28              | . function_code local_declarations
   31 local_declarations: . var_declarations
   32                   | . expr OP_SEMI
   33                   | . conditions KW_ENDIF OP_SEMI
   34                   | . while_loop KW_ENDWHILE OP_SEMI
   35                   | . for_loop KW_ENDFOR OP_SEMI
   36                   | . KW_BREAK OP_SEMI
   37                   | . KW_CONTINUE OP_SEMI
   38 var_declarations: . variable_types OP_ASSIGN expr OP_SEMI
   39                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN expr OP_SEMI
   40                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   41                 | . variable_types OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   42                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_MEAN types OP_SEMI
   43                 | . comp_types_of_declarations OP_MEAN types OP_SEMI
   44                 | . KW_CONST comp_types_of_declarations OP_ASSIGN data_types OP_MEAN types OP_SEMI
   45                 | . KW_CONST comp_types_of_declarations OP_ASSIGN operators data_types OP_MEAN types OP_SEMI
   46 conditions: . KW_IF OP_PAR_L expr OP_PAR_R OP_MEAN main_program
   47           | . KW_IF OP_PAR_L expr OP_PAR_R OP_MEAN comp_function_code
   48           | . conditions KW_ELSE OP_MEAN main_program
   49 while_loop: . KW_WHILE OP_PAR_L expr OP_PAR_R OP_MEAN main_program
   50           | . KW_WHILE OP_PAR_L expr OP_PAR_R OP_MEAN comp_function_code
   51 for_loop: . KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_BRA_R OP_MEAN main_program
   52         | . KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_BRA_R OP_MEAN comp_function_code
   53         | . KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_MEAN expr OP_BRA_R OP_MEAN main_program
   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   56 comp_types_of_declarations: . variable_types
   57                           | . comp_types_of_declarations OP_COMA variable_types
   58                           | . comp_types_of_declarations OP_COMA variable_types OP_BRA_L legal_array_index OP_BRA_R
   59 expr: . %empty  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_SEMI, OP_COMA, OP_DOT]
   60     | . TK_STRING
   61     | . TK_INT
   62     | . TK_REAL
   63     | . KW_TRUE
   64     | . KW_FALSE
   65     | . variable_types OP_PAR_L OP_PAR_R
   66     | . variable_types OP_PAR_L expr OP_PAR_R
   67     | . operators expr
   68     | . variable_types
   69     | . variable_types OP_BRA_L legal_array_index OP_BRA_R
   70     | . variable_types OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | . variable_types OP_BRA_L variable_types OP_BRA_R
   72     | . OP_POINTER expr
   73     | . expr OP_COMA expr
   74     | . expr OP_DOT expr
   75     | . expr OP_PLUS expr
   76     | . expr OP_MINUS expr
   77     | . expr OP_MUL expr
   78     | . expr OP_DIV expr
   79     | . expr OP_MOD expr
   80     | . expr OP_EQ expr
   81     | . expr OP_INEQ expr
   82     | . expr OP_LESS expr
   83     | . expr OP_EQLESS expr
   84     | . expr OP_MORE expr
   85     | . expr OP_EQMORE expr
   86     | . expr OP_ASSIGN expr
   87     | . expr KW_AND expr
   88     | . expr KW_OR expr
   89     | . expr KW_NOT expr
   90     | . expr OP_PLUSEQ expr
   91     | . expr OP_MINUSEQ expr
   92     | . expr OP_MULEQ expr
   93     | . expr OP_DIVEQ expr
   94     | . expr OP_MODEQ expr
   95     | . OP_PAR_L expr OP_PAR_R
   96     | . OP_BRA_L expr OP_BRA_L
   97     | . OP_SEMI
  108 operators: . OP_PLUS
  109          | . OP_MINUS
  110          | . OP_MUL
  111          | . OP_DIV
  112          | . OP_MOD
  113          | . OP_POWER
  114          | . OP_EQ
  115          | . OP_INEQ
  116          | . OP_LESS
  117          | . OP_EQLESS
  118          | . OP_MORE
  119          | . OP_EQMORE
  120          | . OP_ASSIGN
  121          | . OP_PLUSEQ
  122          | . OP_MINUSEQ
  123          | . OP_MULEQ
  124          | . OP_DIVEQ
  125          | . OP_MODEQ

    TK_STRING    shift, and go to state 23
    TK_IDENT     shift, and go to state 1
    TK_INT       shift, and go to state 24
    TK_REAL      shift, and go to state 25
    KW_HASH      shift, and go to state 2
    KW_IF        shift, and go to state 26
    KW_FALSE     shift, and go to state 27
    KW_FOR       shift, and go to state 28
    KW_BREAK     shift, and go to state 29
    KW_CONST     shift, and go to state 4
    KW_CONTINUE  shift, and go to state 30
    KW_WHILE     shift, and go to state 31
    KW_RETURN    shift, and go to state 66
    KW_TRUE      shift, and go to state 32
    OP_PLUS      shift, and go to state 33
    OP_MINUS     shift, and go to state 34
    OP_MUL       shift, and go to state 35
    OP_DIV       shift, and go to state 36
    OP_MOD       shift, and go to state 37
    OP_POWER     shift, and go to state 38
    OP_EQ        shift, and go to state 39
    OP_INEQ      shift, and go to state 40
    OP_LESS      shift, and go to state 41
    OP_EQLESS    shift, and go to state 42
    OP_MORE      shift, and go to state 43
    OP_EQMORE    shift, and go to state 44
    OP_ASSIGN    shift, and go to state 45
    OP_PLUSEQ    shift, and go to state 46
    OP_MINUSEQ   shift, and go to state 47
    OP_MULEQ     shift, and go to state 48
    OP_DIVEQ     shift, and go to state 49
    OP_MODEQ     shift, and go to state 50
    OP_POINTER   shift, and go to state 51
    OP_PAR_L     shift, and go to state 52
    OP_SEMI      shift, and go to state 53
    OP_BRA_L     shift, and go to state 54

    TK_STRING    [reduce using rule 26 (function_code)]
    TK_IDENT     [reduce using rule 26 (function_code)]
    TK_INT       [reduce using rule 26 (function_code)]
    TK_REAL      [reduce using rule 26 (function_code)]
    KW_HASH      [reduce using rule 26 (function_code)]
    KW_IF        [reduce using rule 26 (function_code)]
    KW_FALSE     [reduce using rule 26 (function_code)]
    KW_FOR       [reduce using rule 26 (function_code)]
    KW_BREAK     [reduce using rule 26 (function_code)]
    KW_CONST     [reduce using rule 26 (function_code)]
    KW_CONTINUE  [reduce using rule 26 (function_code)]
    KW_NOT       reduce using rule 26 (function_code)
    KW_NOT       [reduce using rule 59 (expr)]
    KW_WHILE     [reduce using rule 26 (function_code)]
    KW_AND       reduce using rule 26 (function_code)
    KW_AND       [reduce using rule 59 (expr)]
    KW_RETURN    [reduce using rule 26 (function_code)]
    KW_TRUE      [reduce using rule 26 (function_code)]
    KW_OR        reduce using rule 26 (function_code)
    KW_OR        [reduce using rule 59 (expr)]
    OP_PLUS      [reduce using rule 26 (function_code)]
    OP_PLUS      [reduce using rule 59 (expr)]
    OP_MINUS     [reduce using rule 26 (function_code)]
    OP_MINUS     [reduce using rule 59 (expr)]
    OP_MUL       [reduce using rule 26 (function_code)]
    OP_MUL       [reduce using rule 59 (expr)]
    OP_DIV       [reduce using rule 26 (function_code)]
    OP_DIV       [reduce using rule 59 (expr)]
    OP_MOD       [reduce using rule 26 (function_code)]
    OP_MOD       [reduce using rule 59 (expr)]
    OP_POWER     [reduce using rule 26 (function_code)]
    OP_EQ        [reduce using rule 26 (function_code)]
    OP_EQ        [reduce using rule 59 (expr)]
    OP_INEQ      [reduce using rule 26 (function_code)]
    OP_INEQ      [reduce using rule 59 (expr)]
    OP_LESS      [reduce using rule 26 (function_code)]
    OP_LESS      [reduce using rule 59 (expr)]
    OP_EQLESS    [reduce using rule 26 (function_code)]
    OP_EQLESS    [reduce using rule 59 (expr)]
    OP_MORE      [reduce using rule 26 (function_code)]
    OP_MORE      [reduce using rule 59 (expr)]
    OP_EQMORE    [reduce using rule 26 (function_code)]
    OP_EQMORE    [reduce using rule 59 (expr)]
    OP_ASSIGN    [reduce using rule 26 (function_code)]
    OP_ASSIGN    [reduce using rule 59 (expr)]
    OP_PLUSEQ    [reduce using rule 26 (function_code)]
    OP_PLUSEQ    [reduce using rule 59 (expr)]
    OP_MINUSEQ   [reduce using rule 26 (function_code)]
    OP_MINUSEQ   [reduce using rule 59 (expr)]
    OP_MULEQ     [reduce using rule 26 (function_code)]
    OP_MULEQ     [reduce using rule 59 (expr)]
    OP_DIVEQ     [reduce using rule 26 (function_code)]
    OP_DIVEQ     [reduce using rule 59 (expr)]
    OP_MODEQ     [reduce using rule 26 (function_code)]
    OP_MODEQ     [reduce using rule 59 (expr)]
    OP_POINTER   [reduce using rule 26 (function_code)]
    OP_PAR_L     [reduce using rule 26 (function_code)]
    OP_SEMI      [reduce using rule 26 (function_code)]
    OP_SEMI      [reduce using rule 59 (expr)]
    OP_COMA      reduce using rule 26 (function_code)
    OP_COMA      [reduce using rule 59 (expr)]
    OP_BRA_L     [reduce using rule 26 (function_code)]
    OP_DOT       reduce using rule 26 (function_code)
    OP_DOT       [reduce using rule 59 (expr)]
    $default     reduce using rule 26 (function_code)

    function_code               go to state 67
    local_declarations          go to state 68
    var_declarations            go to state 57
    conditions                  go to state 58
    while_loop                  go to state 59
    for_loop                    go to state 60
    variable_types              go to state 61
    comp_types_of_declarations  go to state 15
    expr                        go to state 62
    operators                   go to state 63


State 13

   10 global_declarations: var_declarations .

    $default  reduce using rule 10 (global_declarations)


State 14

   38 var_declarations: variable_types . OP_ASSIGN expr OP_SEMI
   39                 | variable_types . OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN expr OP_SEMI
   40                 | variable_types . OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   41                 | variable_types . OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   42                 | variable_types . OP_BRA_L legal_array_index OP_BRA_R OP_MEAN types OP_SEMI
   56 comp_types_of_declarations: variable_types .  [OP_COMA, OP_MEAN]

    OP_ASSIGN  shift, and go to state 69
    OP_BRA_L   shift, and go to state 70

    $default  reduce using rule 56 (comp_types_of_declarations)


State 15

   43 var_declarations: comp_types_of_declarations . OP_MEAN types OP_SEMI
   57 comp_types_of_declarations: comp_types_of_declarations . OP_COMA variable_types
   58                           | comp_types_of_declarations . OP_COMA variable_types OP_BRA_L legal_array_index OP_BRA_R

    OP_COMA  shift, and go to state 71
    OP_MEAN  shift, and go to state 72


State 16

   55 variable_types: KW_HASH TK_IDENT .

    $default  reduce using rule 55 (variable_types)


State 17

   16 func_declaration: KW_DEF TK_IDENT . OP_PAR_L func_parameters OP_PAR_R OP_MINUS OP_MORE types OP_MEAN
   17                 | KW_DEF TK_IDENT . OP_PAR_L func_parameters OP_PAR_R OP_MINUS OP_MORE KW_VOID OP_MEAN
   18                 | KW_DEF TK_IDENT . OP_PAR_L func_parameters OP_PAR_R OP_MEAN
   19                 | KW_DEF TK_IDENT . OP_PAR_L OP_PAR_R OP_MINUS OP_MORE types OP_MEAN
   20                 | KW_DEF TK_IDENT . OP_PAR_L OP_PAR_R OP_MEAN

    OP_PAR_L  shift, and go to state 73


State 18

    7 main: KW_DEF KW_MAIN . OP_PAR_L OP_PAR_R OP_MEAN

    OP_PAR_L  shift, and go to state 74


State 19

   56 comp_types_of_declarations: variable_types .

    $default  reduce using rule 56 (comp_types_of_declarations)


State 20

   44 var_declarations: KW_CONST comp_types_of_declarations . OP_ASSIGN data_types OP_MEAN types OP_SEMI
   45                 | KW_CONST comp_types_of_declarations . OP_ASSIGN operators data_types OP_MEAN types OP_SEMI
   57 comp_types_of_declarations: comp_types_of_declarations . OP_COMA variable_types
   58                           | comp_types_of_declarations . OP_COMA variable_types OP_BRA_L legal_array_index OP_BRA_R

    OP_ASSIGN  shift, and go to state 75
    OP_COMA    shift, and go to state 71


State 21

   15 global_declarations: KW_COMP TK_IDENT . OP_MEAN comp_code KW_ENDCOMP OP_SEMI

    OP_MEAN  shift, and go to state 76


State 22

    0 $accept: input $end .

    $default  accept


State 23

   60 expr: TK_STRING .

    $default  reduce using rule 60 (expr)


State 24

   61 expr: TK_INT .

    $default  reduce using rule 61 (expr)


State 25

   62 expr: TK_REAL .

    $default  reduce using rule 62 (expr)


State 26

   46 conditions: KW_IF . OP_PAR_L expr OP_PAR_R OP_MEAN main_program
   47           | KW_IF . OP_PAR_L expr OP_PAR_R OP_MEAN comp_function_code

    OP_PAR_L  shift, and go to state 77


State 27

   64 expr: KW_FALSE .

    $default  reduce using rule 64 (expr)


State 28

   51 for_loop: KW_FOR . TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_BRA_R OP_MEAN main_program
   52         | KW_FOR . TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_BRA_R OP_MEAN comp_function_code
   53         | KW_FOR . TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_MEAN expr OP_BRA_R OP_MEAN main_program

    TK_IDENT  shift, and go to state 78


State 29

   36 local_declarations: KW_BREAK . OP_SEMI

    OP_SEMI  shift, and go to state 79


State 30

   37 local_declarations: KW_CONTINUE . OP_SEMI

    OP_SEMI  shift, and go to state 80


State 31

   49 while_loop: KW_WHILE . OP_PAR_L expr OP_PAR_R OP_MEAN main_program
   50           | KW_WHILE . OP_PAR_L expr OP_PAR_R OP_MEAN comp_function_code

    OP_PAR_L  shift, and go to state 81


State 32

   63 expr: KW_TRUE .

    $default  reduce using rule 63 (expr)


State 33

  108 operators: OP_PLUS .

    $default  reduce using rule 108 (operators)


State 34

  109 operators: OP_MINUS .

    $default  reduce using rule 109 (operators)


State 35

  110 operators: OP_MUL .

    $default  reduce using rule 110 (operators)


State 36

  111 operators: OP_DIV .

    $default  reduce using rule 111 (operators)


State 37

  112 operators: OP_MOD .

    $default  reduce using rule 112 (operators)


State 38

  113 operators: OP_POWER .

    $default  reduce using rule 113 (operators)


State 39

  114 operators: OP_EQ .

    $default  reduce using rule 114 (operators)


State 40

  115 operators: OP_INEQ .

    $default  reduce using rule 115 (operators)


State 41

  116 operators: OP_LESS .

    $default  reduce using rule 116 (operators)


State 42

  117 operators: OP_EQLESS .

    $default  reduce using rule 117 (operators)


State 43

  118 operators: OP_MORE .

    $default  reduce using rule 118 (operators)


State 44

  119 operators: OP_EQMORE .

    $default  reduce using rule 119 (operators)


State 45

  120 operators: OP_ASSIGN .

    $default  reduce using rule 120 (operators)


State 46

  121 operators: OP_PLUSEQ .

    $default  reduce using rule 121 (operators)


State 47

  122 operators: OP_MINUSEQ .

    $default  reduce using rule 122 (operators)


State 48

  123 operators: OP_MULEQ .

    $default  reduce using rule 123 (operators)


State 49

  124 operators: OP_DIVEQ .

    $default  reduce using rule 124 (operators)


State 50

  125 operators: OP_MODEQ .

    $default  reduce using rule 125 (operators)


State 51

   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   59 expr: . %empty  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_PAR_R, OP_SEMI, OP_COMA, OP_BRA_L, OP_BRA_R, OP_DOT, OP_MEAN]
   60     | . TK_STRING
   61     | . TK_INT
   62     | . TK_REAL
   63     | . KW_TRUE
   64     | . KW_FALSE
   65     | . variable_types OP_PAR_L OP_PAR_R
   66     | . variable_types OP_PAR_L expr OP_PAR_R
   67     | . operators expr
   68     | . variable_types
   69     | . variable_types OP_BRA_L legal_array_index OP_BRA_R
   70     | . variable_types OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | . variable_types OP_BRA_L variable_types OP_BRA_R
   72     | . OP_POINTER expr
   72     | OP_POINTER . expr
   73     | . expr OP_COMA expr
   74     | . expr OP_DOT expr
   75     | . expr OP_PLUS expr
   76     | . expr OP_MINUS expr
   77     | . expr OP_MUL expr
   78     | . expr OP_DIV expr
   79     | . expr OP_MOD expr
   80     | . expr OP_EQ expr
   81     | . expr OP_INEQ expr
   82     | . expr OP_LESS expr
   83     | . expr OP_EQLESS expr
   84     | . expr OP_MORE expr
   85     | . expr OP_EQMORE expr
   86     | . expr OP_ASSIGN expr
   87     | . expr KW_AND expr
   88     | . expr KW_OR expr
   89     | . expr KW_NOT expr
   90     | . expr OP_PLUSEQ expr
   91     | . expr OP_MINUSEQ expr
   92     | . expr OP_MULEQ expr
   93     | . expr OP_DIVEQ expr
   94     | . expr OP_MODEQ expr
   95     | . OP_PAR_L expr OP_PAR_R
   96     | . OP_BRA_L expr OP_BRA_L
   97     | . OP_SEMI
  108 operators: . OP_PLUS
  109          | . OP_MINUS
  110          | . OP_MUL
  111          | . OP_DIV
  112          | . OP_MOD
  113          | . OP_POWER
  114          | . OP_EQ
  115          | . OP_INEQ
  116          | . OP_LESS
  117          | . OP_EQLESS
  118          | . OP_MORE
  119          | . OP_EQMORE
  120          | . OP_ASSIGN
  121          | . OP_PLUSEQ
  122          | . OP_MINUSEQ
  123          | . OP_MULEQ
  124          | . OP_DIVEQ
  125          | . OP_MODEQ

    TK_STRING   shift, and go to state 23
    TK_IDENT    shift, and go to state 1
    TK_INT      shift, and go to state 24
    TK_REAL     shift, and go to state 25
    KW_HASH     shift, and go to state 2
    KW_FALSE    shift, and go to state 27
    KW_TRUE     shift, and go to state 32
    OP_PLUS     shift, and go to state 33
    OP_MINUS    shift, and go to state 34
    OP_MUL      shift, and go to state 35
    OP_DIV      shift, and go to state 36
    OP_MOD      shift, and go to state 37
    OP_POWER    shift, and go to state 38
    OP_EQ       shift, and go to state 39
    OP_INEQ     shift, and go to state 40
    OP_LESS     shift, and go to state 41
    OP_EQLESS   shift, and go to state 42
    OP_MORE     shift, and go to state 43
    OP_EQMORE   shift, and go to state 44
    OP_ASSIGN   shift, and go to state 45
    OP_PLUSEQ   shift, and go to state 46
    OP_MINUSEQ  shift, and go to state 47
    OP_MULEQ    shift, and go to state 48
    OP_DIVEQ    shift, and go to state 49
    OP_MODEQ    shift, and go to state 50
    OP_POINTER  shift, and go to state 51
    OP_PAR_L    shift, and go to state 52
    OP_SEMI     shift, and go to state 53
    OP_BRA_L    shift, and go to state 54

    OP_PLUS     [reduce using rule 59 (expr)]
    OP_MINUS    [reduce using rule 59 (expr)]
    OP_MUL      [reduce using rule 59 (expr)]
    OP_DIV      [reduce using rule 59 (expr)]
    OP_MOD      [reduce using rule 59 (expr)]
    OP_EQ       [reduce using rule 59 (expr)]
    OP_INEQ     [reduce using rule 59 (expr)]
    OP_LESS     [reduce using rule 59 (expr)]
    OP_EQLESS   [reduce using rule 59 (expr)]
    OP_MORE     [reduce using rule 59 (expr)]
    OP_EQMORE   [reduce using rule 59 (expr)]
    OP_ASSIGN   [reduce using rule 59 (expr)]
    OP_PLUSEQ   [reduce using rule 59 (expr)]
    OP_MINUSEQ  [reduce using rule 59 (expr)]
    OP_MULEQ    [reduce using rule 59 (expr)]
    OP_DIVEQ    [reduce using rule 59 (expr)]
    OP_MODEQ    [reduce using rule 59 (expr)]
    OP_SEMI     [reduce using rule 59 (expr)]
    OP_BRA_L    [reduce using rule 59 (expr)]
    $default    reduce using rule 59 (expr)

    variable_types  go to state 82
    expr            go to state 83
    operators       go to state 63


State 52

   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   59 expr: . %empty  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_PAR_R, OP_COMA, OP_DOT]
   60     | . TK_STRING
   61     | . TK_INT
   62     | . TK_REAL
   63     | . KW_TRUE
   64     | . KW_FALSE
   65     | . variable_types OP_PAR_L OP_PAR_R
   66     | . variable_types OP_PAR_L expr OP_PAR_R
   67     | . operators expr
   68     | . variable_types
   69     | . variable_types OP_BRA_L legal_array_index OP_BRA_R
   70     | . variable_types OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | . variable_types OP_BRA_L variable_types OP_BRA_R
   72     | . OP_POINTER expr
   73     | . expr OP_COMA expr
   74     | . expr OP_DOT expr
   75     | . expr OP_PLUS expr
   76     | . expr OP_MINUS expr
   77     | . expr OP_MUL expr
   78     | . expr OP_DIV expr
   79     | . expr OP_MOD expr
   80     | . expr OP_EQ expr
   81     | . expr OP_INEQ expr
   82     | . expr OP_LESS expr
   83     | . expr OP_EQLESS expr
   84     | . expr OP_MORE expr
   85     | . expr OP_EQMORE expr
   86     | . expr OP_ASSIGN expr
   87     | . expr KW_AND expr
   88     | . expr KW_OR expr
   89     | . expr KW_NOT expr
   90     | . expr OP_PLUSEQ expr
   91     | . expr OP_MINUSEQ expr
   92     | . expr OP_MULEQ expr
   93     | . expr OP_DIVEQ expr
   94     | . expr OP_MODEQ expr
   95     | . OP_PAR_L expr OP_PAR_R
   95     | OP_PAR_L . expr OP_PAR_R
   96     | . OP_BRA_L expr OP_BRA_L
   97     | . OP_SEMI
  108 operators: . OP_PLUS
  109          | . OP_MINUS
  110          | . OP_MUL
  111          | . OP_DIV
  112          | . OP_MOD
  113          | . OP_POWER
  114          | . OP_EQ
  115          | . OP_INEQ
  116          | . OP_LESS
  117          | . OP_EQLESS
  118          | . OP_MORE
  119          | . OP_EQMORE
  120          | . OP_ASSIGN
  121          | . OP_PLUSEQ
  122          | . OP_MINUSEQ
  123          | . OP_MULEQ
  124          | . OP_DIVEQ
  125          | . OP_MODEQ

    TK_STRING   shift, and go to state 23
    TK_IDENT    shift, and go to state 1
    TK_INT      shift, and go to state 24
    TK_REAL     shift, and go to state 25
    KW_HASH     shift, and go to state 2
    KW_FALSE    shift, and go to state 27
    KW_TRUE     shift, and go to state 32
    OP_PLUS     shift, and go to state 33
    OP_MINUS    shift, and go to state 34
    OP_MUL      shift, and go to state 35
    OP_DIV      shift, and go to state 36
    OP_MOD      shift, and go to state 37
    OP_POWER    shift, and go to state 38
    OP_EQ       shift, and go to state 39
    OP_INEQ     shift, and go to state 40
    OP_LESS     shift, and go to state 41
    OP_EQLESS   shift, and go to state 42
    OP_MORE     shift, and go to state 43
    OP_EQMORE   shift, and go to state 44
    OP_ASSIGN   shift, and go to state 45
    OP_PLUSEQ   shift, and go to state 46
    OP_MINUSEQ  shift, and go to state 47
    OP_MULEQ    shift, and go to state 48
    OP_DIVEQ    shift, and go to state 49
    OP_MODEQ    shift, and go to state 50
    OP_POINTER  shift, and go to state 51
    OP_PAR_L    shift, and go to state 52
    OP_SEMI     shift, and go to state 53
    OP_BRA_L    shift, and go to state 54

    OP_PLUS     [reduce using rule 59 (expr)]
    OP_MINUS    [reduce using rule 59 (expr)]
    OP_MUL      [reduce using rule 59 (expr)]
    OP_DIV      [reduce using rule 59 (expr)]
    OP_MOD      [reduce using rule 59 (expr)]
    OP_EQ       [reduce using rule 59 (expr)]
    OP_INEQ     [reduce using rule 59 (expr)]
    OP_LESS     [reduce using rule 59 (expr)]
    OP_EQLESS   [reduce using rule 59 (expr)]
    OP_MORE     [reduce using rule 59 (expr)]
    OP_EQMORE   [reduce using rule 59 (expr)]
    OP_ASSIGN   [reduce using rule 59 (expr)]
    OP_PLUSEQ   [reduce using rule 59 (expr)]
    OP_MINUSEQ  [reduce using rule 59 (expr)]
    OP_MULEQ    [reduce using rule 59 (expr)]
    OP_DIVEQ    [reduce using rule 59 (expr)]
    OP_MODEQ    [reduce using rule 59 (expr)]
    $default    reduce using rule 59 (expr)

    variable_types  go to state 82
    expr            go to state 84
    operators       go to state 63


State 53

   97 expr: OP_SEMI .

    $default  reduce using rule 97 (expr)


State 54

   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   59 expr: . %empty  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_COMA, OP_BRA_L, OP_DOT]
   60     | . TK_STRING
   61     | . TK_INT
   62     | . TK_REAL
   63     | . KW_TRUE
   64     | . KW_FALSE
   65     | . variable_types OP_PAR_L OP_PAR_R
   66     | . variable_types OP_PAR_L expr OP_PAR_R
   67     | . operators expr
   68     | . variable_types
   69     | . variable_types OP_BRA_L legal_array_index OP_BRA_R
   70     | . variable_types OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | . variable_types OP_BRA_L variable_types OP_BRA_R
   72     | . OP_POINTER expr
   73     | . expr OP_COMA expr
   74     | . expr OP_DOT expr
   75     | . expr OP_PLUS expr
   76     | . expr OP_MINUS expr
   77     | . expr OP_MUL expr
   78     | . expr OP_DIV expr
   79     | . expr OP_MOD expr
   80     | . expr OP_EQ expr
   81     | . expr OP_INEQ expr
   82     | . expr OP_LESS expr
   83     | . expr OP_EQLESS expr
   84     | . expr OP_MORE expr
   85     | . expr OP_EQMORE expr
   86     | . expr OP_ASSIGN expr
   87     | . expr KW_AND expr
   88     | . expr KW_OR expr
   89     | . expr KW_NOT expr
   90     | . expr OP_PLUSEQ expr
   91     | . expr OP_MINUSEQ expr
   92     | . expr OP_MULEQ expr
   93     | . expr OP_DIVEQ expr
   94     | . expr OP_MODEQ expr
   95     | . OP_PAR_L expr OP_PAR_R
   96     | . OP_BRA_L expr OP_BRA_L
   96     | OP_BRA_L . expr OP_BRA_L
   97     | . OP_SEMI
  108 operators: . OP_PLUS
  109          | . OP_MINUS
  110          | . OP_MUL
  111          | . OP_DIV
  112          | . OP_MOD
  113          | . OP_POWER
  114          | . OP_EQ
  115          | . OP_INEQ
  116          | . OP_LESS
  117          | . OP_EQLESS
  118          | . OP_MORE
  119          | . OP_EQMORE
  120          | . OP_ASSIGN
  121          | . OP_PLUSEQ
  122          | . OP_MINUSEQ
  123          | . OP_MULEQ
  124          | . OP_DIVEQ
  125          | . OP_MODEQ

    TK_STRING   shift, and go to state 23
    TK_IDENT    shift, and go to state 1
    TK_INT      shift, and go to state 24
    TK_REAL     shift, and go to state 25
    KW_HASH     shift, and go to state 2
    KW_FALSE    shift, and go to state 27
    KW_TRUE     shift, and go to state 32
    OP_PLUS     shift, and go to state 33
    OP_MINUS    shift, and go to state 34
    OP_MUL      shift, and go to state 35
    OP_DIV      shift, and go to state 36
    OP_MOD      shift, and go to state 37
    OP_POWER    shift, and go to state 38
    OP_EQ       shift, and go to state 39
    OP_INEQ     shift, and go to state 40
    OP_LESS     shift, and go to state 41
    OP_EQLESS   shift, and go to state 42
    OP_MORE     shift, and go to state 43
    OP_EQMORE   shift, and go to state 44
    OP_ASSIGN   shift, and go to state 45
    OP_PLUSEQ   shift, and go to state 46
    OP_MINUSEQ  shift, and go to state 47
    OP_MULEQ    shift, and go to state 48
    OP_DIVEQ    shift, and go to state 49
    OP_MODEQ    shift, and go to state 50
    OP_POINTER  shift, and go to state 51
    OP_PAR_L    shift, and go to state 52
    OP_SEMI     shift, and go to state 53
    OP_BRA_L    shift, and go to state 54

    OP_PLUS     [reduce using rule 59 (expr)]
    OP_MINUS    [reduce using rule 59 (expr)]
    OP_MUL      [reduce using rule 59 (expr)]
    OP_DIV      [reduce using rule 59 (expr)]
    OP_MOD      [reduce using rule 59 (expr)]
    OP_EQ       [reduce using rule 59 (expr)]
    OP_INEQ     [reduce using rule 59 (expr)]
    OP_LESS     [reduce using rule 59 (expr)]
    OP_EQLESS   [reduce using rule 59 (expr)]
    OP_MORE     [reduce using rule 59 (expr)]
    OP_EQMORE   [reduce using rule 59 (expr)]
    OP_ASSIGN   [reduce using rule 59 (expr)]
    OP_PLUSEQ   [reduce using rule 59 (expr)]
    OP_MINUSEQ  [reduce using rule 59 (expr)]
    OP_MULEQ    [reduce using rule 59 (expr)]
    OP_DIVEQ    [reduce using rule 59 (expr)]
    OP_MODEQ    [reduce using rule 59 (expr)]
    OP_BRA_L    [reduce using rule 59 (expr)]
    $default    reduce using rule 59 (expr)

    variable_types  go to state 82
    expr            go to state 85
    operators       go to state 63


State 55

    5 final_program: main main_program . KW_ENDDEF OP_SEMI program
    6              | main main_program . KW_ENDDEF OP_SEMI
   30 main_program: main_program . local_declarations
   31 local_declarations: . var_declarations
   32                   | . expr OP_SEMI
   33                   | . conditions KW_ENDIF OP_SEMI
   34                   | . while_loop KW_ENDWHILE OP_SEMI
   35                   | . for_loop KW_ENDFOR OP_SEMI
   36                   | . KW_BREAK OP_SEMI
   37                   | . KW_CONTINUE OP_SEMI
   38 var_declarations: . variable_types OP_ASSIGN expr OP_SEMI
   39                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN expr OP_SEMI
   40                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   41                 | . variable_types OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   42                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_MEAN types OP_SEMI
   43                 | . comp_types_of_declarations OP_MEAN types OP_SEMI
   44                 | . KW_CONST comp_types_of_declarations OP_ASSIGN data_types OP_MEAN types OP_SEMI
   45                 | . KW_CONST comp_types_of_declarations OP_ASSIGN operators data_types OP_MEAN types OP_SEMI
   46 conditions: . KW_IF OP_PAR_L expr OP_PAR_R OP_MEAN main_program
   47           | . KW_IF OP_PAR_L expr OP_PAR_R OP_MEAN comp_function_code
   48           | . conditions KW_ELSE OP_MEAN main_program
   49 while_loop: . KW_WHILE OP_PAR_L expr OP_PAR_R OP_MEAN main_program
   50           | . KW_WHILE OP_PAR_L expr OP_PAR_R OP_MEAN comp_function_code
   51 for_loop: . KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_BRA_R OP_MEAN main_program
   52         | . KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_BRA_R OP_MEAN comp_function_code
   53         | . KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_MEAN expr OP_BRA_R OP_MEAN main_program
   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   56 comp_types_of_declarations: . variable_types
   57                           | . comp_types_of_declarations OP_COMA variable_types
   58                           | . comp_types_of_declarations OP_COMA variable_types OP_BRA_L legal_array_index OP_BRA_R
   59 expr: . %empty  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_SEMI, OP_COMA, OP_DOT]
   60     | . TK_STRING
   61     | . TK_INT
   62     | . TK_REAL
   63     | . KW_TRUE
   64     | . KW_FALSE
   65     | . variable_types OP_PAR_L OP_PAR_R
   66     | . variable_types OP_PAR_L expr OP_PAR_R
   67     | . operators expr
   68     | . variable_types
   69     | . variable_types OP_BRA_L legal_array_index OP_BRA_R
   70     | . variable_types OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | . variable_types OP_BRA_L variable_types OP_BRA_R
   72     | . OP_POINTER expr
   73     | . expr OP_COMA expr
   74     | . expr OP_DOT expr
   75     | . expr OP_PLUS expr
   76     | . expr OP_MINUS expr
   77     | . expr OP_MUL expr
   78     | . expr OP_DIV expr
   79     | . expr OP_MOD expr
   80     | . expr OP_EQ expr
   81     | . expr OP_INEQ expr
   82     | . expr OP_LESS expr
   83     | . expr OP_EQLESS expr
   84     | . expr OP_MORE expr
   85     | . expr OP_EQMORE expr
   86     | . expr OP_ASSIGN expr
   87     | . expr KW_AND expr
   88     | . expr KW_OR expr
   89     | . expr KW_NOT expr
   90     | . expr OP_PLUSEQ expr
   91     | . expr OP_MINUSEQ expr
   92     | . expr OP_MULEQ expr
   93     | . expr OP_DIVEQ expr
   94     | . expr OP_MODEQ expr
   95     | . OP_PAR_L expr OP_PAR_R
   96     | . OP_BRA_L expr OP_BRA_L
   97     | . OP_SEMI
  108 operators: . OP_PLUS
  109          | . OP_MINUS
  110          | . OP_MUL
  111          | . OP_DIV
  112          | . OP_MOD
  113          | . OP_POWER
  114          | . OP_EQ
  115          | . OP_INEQ
  116          | . OP_LESS
  117          | . OP_EQLESS
  118          | . OP_MORE
  119          | . OP_EQMORE
  120          | . OP_ASSIGN
  121          | . OP_PLUSEQ
  122          | . OP_MINUSEQ
  123          | . OP_MULEQ
  124          | . OP_DIVEQ
  125          | . OP_MODEQ

    TK_STRING    shift, and go to state 23
    TK_IDENT     shift, and go to state 1
    TK_INT       shift, and go to state 24
    TK_REAL      shift, and go to state 25
    KW_HASH      shift, and go to state 2
    KW_IF        shift, and go to state 26
    KW_FALSE     shift, and go to state 27
    KW_FOR       shift, and go to state 28
    KW_BREAK     shift, and go to state 29
    KW_CONST     shift, and go to state 4
    KW_CONTINUE  shift, and go to state 30
    KW_ENDDEF    shift, and go to state 86
    KW_WHILE     shift, and go to state 31
    KW_TRUE      shift, and go to state 32
    OP_PLUS      shift, and go to state 33
    OP_MINUS     shift, and go to state 34
    OP_MUL       shift, and go to state 35
    OP_DIV       shift, and go to state 36
    OP_MOD       shift, and go to state 37
    OP_POWER     shift, and go to state 38
    OP_EQ        shift, and go to state 39
    OP_INEQ      shift, and go to state 40
    OP_LESS      shift, and go to state 41
    OP_EQLESS    shift, and go to state 42
    OP_MORE      shift, and go to state 43
    OP_EQMORE    shift, and go to state 44
    OP_ASSIGN    shift, and go to state 45
    OP_PLUSEQ    shift, and go to state 46
    OP_MINUSEQ   shift, and go to state 47
    OP_MULEQ     shift, and go to state 48
    OP_DIVEQ     shift, and go to state 49
    OP_MODEQ     shift, and go to state 50
    OP_POINTER   shift, and go to state 51
    OP_PAR_L     shift, and go to state 52
    OP_SEMI      shift, and go to state 53
    OP_BRA_L     shift, and go to state 54

    OP_PLUS     [reduce using rule 59 (expr)]
    OP_MINUS    [reduce using rule 59 (expr)]
    OP_MUL      [reduce using rule 59 (expr)]
    OP_DIV      [reduce using rule 59 (expr)]
    OP_MOD      [reduce using rule 59 (expr)]
    OP_EQ       [reduce using rule 59 (expr)]
    OP_INEQ     [reduce using rule 59 (expr)]
    OP_LESS     [reduce using rule 59 (expr)]
    OP_EQLESS   [reduce using rule 59 (expr)]
    OP_MORE     [reduce using rule 59 (expr)]
    OP_EQMORE   [reduce using rule 59 (expr)]
    OP_ASSIGN   [reduce using rule 59 (expr)]
    OP_PLUSEQ   [reduce using rule 59 (expr)]
    OP_MINUSEQ  [reduce using rule 59 (expr)]
    OP_MULEQ    [reduce using rule 59 (expr)]
    OP_DIVEQ    [reduce using rule 59 (expr)]
    OP_MODEQ    [reduce using rule 59 (expr)]
    OP_SEMI     [reduce using rule 59 (expr)]
    $default    reduce using rule 59 (expr)

    local_declarations          go to state 87
    var_declarations            go to state 57
    conditions                  go to state 58
    while_loop                  go to state 59
    for_loop                    go to state 60
    variable_types              go to state 61
    comp_types_of_declarations  go to state 15
    expr                        go to state 62
    operators                   go to state 63


State 56

   29 main_program: local_declarations .

    $default  reduce using rule 29 (main_program)


State 57

   31 local_declarations: var_declarations .

    $default  reduce using rule 31 (local_declarations)


State 58

   33 local_declarations: conditions . KW_ENDIF OP_SEMI
   48 conditions: conditions . KW_ELSE OP_MEAN main_program

    KW_ELSE   shift, and go to state 88
    KW_ENDIF  shift, and go to state 89


State 59

   34 local_declarations: while_loop . KW_ENDWHILE OP_SEMI

    KW_ENDWHILE  shift, and go to state 90


State 60

   35 local_declarations: for_loop . KW_ENDFOR OP_SEMI

    KW_ENDFOR  shift, and go to state 91


State 61

   38 var_declarations: variable_types . OP_ASSIGN expr OP_SEMI
   39                 | variable_types . OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN expr OP_SEMI
   40                 | variable_types . OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   41                 | variable_types . OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   42                 | variable_types . OP_BRA_L legal_array_index OP_BRA_R OP_MEAN types OP_SEMI
   56 comp_types_of_declarations: variable_types .  [OP_COMA, OP_MEAN]
   65 expr: variable_types . OP_PAR_L OP_PAR_R
   66     | variable_types . OP_PAR_L expr OP_PAR_R
   68     | variable_types .  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_SEMI, OP_COMA, OP_DOT]
   69     | variable_types . OP_BRA_L legal_array_index OP_BRA_R
   70     | variable_types . OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | variable_types . OP_BRA_L variable_types OP_BRA_R

    OP_ASSIGN  shift, and go to state 69
    OP_PAR_L   shift, and go to state 92
    OP_BRA_L   shift, and go to state 93

    OP_ASSIGN  [reduce using rule 68 (expr)]
    OP_COMA    reduce using rule 56 (comp_types_of_declarations)
    OP_COMA    [reduce using rule 68 (expr)]
    OP_MEAN    reduce using rule 56 (comp_types_of_declarations)
    $default   reduce using rule 68 (expr)


State 62

   32 local_declarations: expr . OP_SEMI
   73 expr: expr . OP_COMA expr
   74     | expr . OP_DOT expr
   75     | expr . OP_PLUS expr
   76     | expr . OP_MINUS expr
   77     | expr . OP_MUL expr
   78     | expr . OP_DIV expr
   79     | expr . OP_MOD expr
   80     | expr . OP_EQ expr
   81     | expr . OP_INEQ expr
   82     | expr . OP_LESS expr
   83     | expr . OP_EQLESS expr
   84     | expr . OP_MORE expr
   85     | expr . OP_EQMORE expr
   86     | expr . OP_ASSIGN expr
   87     | expr . KW_AND expr
   88     | expr . KW_OR expr
   89     | expr . KW_NOT expr
   90     | expr . OP_PLUSEQ expr
   91     | expr . OP_MINUSEQ expr
   92     | expr . OP_MULEQ expr
   93     | expr . OP_DIVEQ expr
   94     | expr . OP_MODEQ expr

    KW_NOT      shift, and go to state 94
    KW_AND      shift, and go to state 95
    KW_OR       shift, and go to state 96
    OP_PLUS     shift, and go to state 97
    OP_MINUS    shift, and go to state 98
    OP_MUL      shift, and go to state 99
    OP_DIV      shift, and go to state 100
    OP_MOD      shift, and go to state 101
    OP_EQ       shift, and go to state 102
    OP_INEQ     shift, and go to state 103
    OP_LESS     shift, and go to state 104
    OP_EQLESS   shift, and go to state 105
    OP_MORE     shift, and go to state 106
    OP_EQMORE   shift, and go to state 107
    OP_ASSIGN   shift, and go to state 108
    OP_PLUSEQ   shift, and go to state 109
    OP_MINUSEQ  shift, and go to state 110
    OP_MULEQ    shift, and go to state 111
    OP_DIVEQ    shift, and go to state 112
    OP_MODEQ    shift, and go to state 113
    OP_SEMI     shift, and go to state 114
    OP_COMA     shift, and go to state 115
    OP_DOT      shift, and go to state 116


State 63

   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   59 expr: . %empty  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_PAR_R, OP_SEMI, OP_COMA, OP_BRA_L, OP_BRA_R, OP_DOT, OP_MEAN]
   60     | . TK_STRING
   61     | . TK_INT
   62     | . TK_REAL
   63     | . KW_TRUE
   64     | . KW_FALSE
   65     | . variable_types OP_PAR_L OP_PAR_R
   66     | . variable_types OP_PAR_L expr OP_PAR_R
   67     | . operators expr
   67     | operators . expr
   68     | . variable_types
   69     | . variable_types OP_BRA_L legal_array_index OP_BRA_R
   70     | . variable_types OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | . variable_types OP_BRA_L variable_types OP_BRA_R
   72     | . OP_POINTER expr
   73     | . expr OP_COMA expr
   74     | . expr OP_DOT expr
   75     | . expr OP_PLUS expr
   76     | . expr OP_MINUS expr
   77     | . expr OP_MUL expr
   78     | . expr OP_DIV expr
   79     | . expr OP_MOD expr
   80     | . expr OP_EQ expr
   81     | . expr OP_INEQ expr
   82     | . expr OP_LESS expr
   83     | . expr OP_EQLESS expr
   84     | . expr OP_MORE expr
   85     | . expr OP_EQMORE expr
   86     | . expr OP_ASSIGN expr
   87     | . expr KW_AND expr
   88     | . expr KW_OR expr
   89     | . expr KW_NOT expr
   90     | . expr OP_PLUSEQ expr
   91     | . expr OP_MINUSEQ expr
   92     | . expr OP_MULEQ expr
   93     | . expr OP_DIVEQ expr
   94     | . expr OP_MODEQ expr
   95     | . OP_PAR_L expr OP_PAR_R
   96     | . OP_BRA_L expr OP_BRA_L
   97     | . OP_SEMI
  108 operators: . OP_PLUS
  109          | . OP_MINUS
  110          | . OP_MUL
  111          | . OP_DIV
  112          | . OP_MOD
  113          | . OP_POWER
  114          | . OP_EQ
  115          | . OP_INEQ
  116          | . OP_LESS
  117          | . OP_EQLESS
  118          | . OP_MORE
  119          | . OP_EQMORE
  120          | . OP_ASSIGN
  121          | . OP_PLUSEQ
  122          | . OP_MINUSEQ
  123          | . OP_MULEQ
  124          | . OP_DIVEQ
  125          | . OP_MODEQ

    TK_STRING   shift, and go to state 23
    TK_IDENT    shift, and go to state 1
    TK_INT      shift, and go to state 24
    TK_REAL     shift, and go to state 25
    KW_HASH     shift, and go to state 2
    KW_FALSE    shift, and go to state 27
    KW_TRUE     shift, and go to state 32
    OP_PLUS     shift, and go to state 33
    OP_MINUS    shift, and go to state 34
    OP_MUL      shift, and go to state 35
    OP_DIV      shift, and go to state 36
    OP_MOD      shift, and go to state 37
    OP_POWER    shift, and go to state 38
    OP_EQ       shift, and go to state 39
    OP_INEQ     shift, and go to state 40
    OP_LESS     shift, and go to state 41
    OP_EQLESS   shift, and go to state 42
    OP_MORE     shift, and go to state 43
    OP_EQMORE   shift, and go to state 44
    OP_ASSIGN   shift, and go to state 45
    OP_PLUSEQ   shift, and go to state 46
    OP_MINUSEQ  shift, and go to state 47
    OP_MULEQ    shift, and go to state 48
    OP_DIVEQ    shift, and go to state 49
    OP_MODEQ    shift, and go to state 50
    OP_POINTER  shift, and go to state 51
    OP_PAR_L    shift, and go to state 52
    OP_SEMI     shift, and go to state 53
    OP_BRA_L    shift, and go to state 54

    OP_PLUS     [reduce using rule 59 (expr)]
    OP_MINUS    [reduce using rule 59 (expr)]
    OP_MUL      [reduce using rule 59 (expr)]
    OP_DIV      [reduce using rule 59 (expr)]
    OP_MOD      [reduce using rule 59 (expr)]
    OP_EQ       [reduce using rule 59 (expr)]
    OP_INEQ     [reduce using rule 59 (expr)]
    OP_LESS     [reduce using rule 59 (expr)]
    OP_EQLESS   [reduce using rule 59 (expr)]
    OP_MORE     [reduce using rule 59 (expr)]
    OP_EQMORE   [reduce using rule 59 (expr)]
    OP_ASSIGN   [reduce using rule 59 (expr)]
    OP_PLUSEQ   [reduce using rule 59 (expr)]
    OP_MINUSEQ  [reduce using rule 59 (expr)]
    OP_MULEQ    [reduce using rule 59 (expr)]
    OP_DIVEQ    [reduce using rule 59 (expr)]
    OP_MODEQ    [reduce using rule 59 (expr)]
    OP_SEMI     [reduce using rule 59 (expr)]
    OP_BRA_L    [reduce using rule 59 (expr)]
    $default    reduce using rule 59 (expr)

    variable_types  go to state 82
    expr            go to state 117
    operators       go to state 63


State 64

    3 final_program: program main . main_program KW_ENDDEF OP_SEMI program
    4              | program main . main_program KW_ENDDEF OP_SEMI
   29 main_program: . local_declarations
   30             | . main_program local_declarations
   31 local_declarations: . var_declarations
   32                   | . expr OP_SEMI
   33                   | . conditions KW_ENDIF OP_SEMI
   34                   | . while_loop KW_ENDWHILE OP_SEMI
   35                   | . for_loop KW_ENDFOR OP_SEMI
   36                   | . KW_BREAK OP_SEMI
   37                   | . KW_CONTINUE OP_SEMI
   38 var_declarations: . variable_types OP_ASSIGN expr OP_SEMI
   39                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN expr OP_SEMI
   40                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   41                 | . variable_types OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   42                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_MEAN types OP_SEMI
   43                 | . comp_types_of_declarations OP_MEAN types OP_SEMI
   44                 | . KW_CONST comp_types_of_declarations OP_ASSIGN data_types OP_MEAN types OP_SEMI
   45                 | . KW_CONST comp_types_of_declarations OP_ASSIGN operators data_types OP_MEAN types OP_SEMI
   46 conditions: . KW_IF OP_PAR_L expr OP_PAR_R OP_MEAN main_program
   47           | . KW_IF OP_PAR_L expr OP_PAR_R OP_MEAN comp_function_code
   48           | . conditions KW_ELSE OP_MEAN main_program
   49 while_loop: . KW_WHILE OP_PAR_L expr OP_PAR_R OP_MEAN main_program
   50           | . KW_WHILE OP_PAR_L expr OP_PAR_R OP_MEAN comp_function_code
   51 for_loop: . KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_BRA_R OP_MEAN main_program
   52         | . KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_BRA_R OP_MEAN comp_function_code
   53         | . KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_MEAN expr OP_BRA_R OP_MEAN main_program
   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   56 comp_types_of_declarations: . variable_types
   57                           | . comp_types_of_declarations OP_COMA variable_types
   58                           | . comp_types_of_declarations OP_COMA variable_types OP_BRA_L legal_array_index OP_BRA_R
   59 expr: . %empty  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_SEMI, OP_COMA, OP_DOT]
   60     | . TK_STRING
   61     | . TK_INT
   62     | . TK_REAL
   63     | . KW_TRUE
   64     | . KW_FALSE
   65     | . variable_types OP_PAR_L OP_PAR_R
   66     | . variable_types OP_PAR_L expr OP_PAR_R
   67     | . operators expr
   68     | . variable_types
   69     | . variable_types OP_BRA_L legal_array_index OP_BRA_R
   70     | . variable_types OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | . variable_types OP_BRA_L variable_types OP_BRA_R
   72     | . OP_POINTER expr
   73     | . expr OP_COMA expr
   74     | . expr OP_DOT expr
   75     | . expr OP_PLUS expr
   76     | . expr OP_MINUS expr
   77     | . expr OP_MUL expr
   78     | . expr OP_DIV expr
   79     | . expr OP_MOD expr
   80     | . expr OP_EQ expr
   81     | . expr OP_INEQ expr
   82     | . expr OP_LESS expr
   83     | . expr OP_EQLESS expr
   84     | . expr OP_MORE expr
   85     | . expr OP_EQMORE expr
   86     | . expr OP_ASSIGN expr
   87     | . expr KW_AND expr
   88     | . expr KW_OR expr
   89     | . expr KW_NOT expr
   90     | . expr OP_PLUSEQ expr
   91     | . expr OP_MINUSEQ expr
   92     | . expr OP_MULEQ expr
   93     | . expr OP_DIVEQ expr
   94     | . expr OP_MODEQ expr
   95     | . OP_PAR_L expr OP_PAR_R
   96     | . OP_BRA_L expr OP_BRA_L
   97     | . OP_SEMI
  108 operators: . OP_PLUS
  109          | . OP_MINUS
  110          | . OP_MUL
  111          | . OP_DIV
  112          | . OP_MOD
  113          | . OP_POWER
  114          | . OP_EQ
  115          | . OP_INEQ
  116          | . OP_LESS
  117          | . OP_EQLESS
  118          | . OP_MORE
  119          | . OP_EQMORE
  120          | . OP_ASSIGN
  121          | . OP_PLUSEQ
  122          | . OP_MINUSEQ
  123          | . OP_MULEQ
  124          | . OP_DIVEQ
  125          | . OP_MODEQ

    TK_STRING    shift, and go to state 23
    TK_IDENT     shift, and go to state 1
    TK_INT       shift, and go to state 24
    TK_REAL      shift, and go to state 25
    KW_HASH      shift, and go to state 2
    KW_IF        shift, and go to state 26
    KW_FALSE     shift, and go to state 27
    KW_FOR       shift, and go to state 28
    KW_BREAK     shift, and go to state 29
    KW_CONST     shift, and go to state 4
    KW_CONTINUE  shift, and go to state 30
    KW_WHILE     shift, and go to state 31
    KW_TRUE      shift, and go to state 32
    OP_PLUS      shift, and go to state 33
    OP_MINUS     shift, and go to state 34
    OP_MUL       shift, and go to state 35
    OP_DIV       shift, and go to state 36
    OP_MOD       shift, and go to state 37
    OP_POWER     shift, and go to state 38
    OP_EQ        shift, and go to state 39
    OP_INEQ      shift, and go to state 40
    OP_LESS      shift, and go to state 41
    OP_EQLESS    shift, and go to state 42
    OP_MORE      shift, and go to state 43
    OP_EQMORE    shift, and go to state 44
    OP_ASSIGN    shift, and go to state 45
    OP_PLUSEQ    shift, and go to state 46
    OP_MINUSEQ   shift, and go to state 47
    OP_MULEQ     shift, and go to state 48
    OP_DIVEQ     shift, and go to state 49
    OP_MODEQ     shift, and go to state 50
    OP_POINTER   shift, and go to state 51
    OP_PAR_L     shift, and go to state 52
    OP_SEMI      shift, and go to state 53
    OP_BRA_L     shift, and go to state 54

    OP_PLUS     [reduce using rule 59 (expr)]
    OP_MINUS    [reduce using rule 59 (expr)]
    OP_MUL      [reduce using rule 59 (expr)]
    OP_DIV      [reduce using rule 59 (expr)]
    OP_MOD      [reduce using rule 59 (expr)]
    OP_EQ       [reduce using rule 59 (expr)]
    OP_INEQ     [reduce using rule 59 (expr)]
    OP_LESS     [reduce using rule 59 (expr)]
    OP_EQLESS   [reduce using rule 59 (expr)]
    OP_MORE     [reduce using rule 59 (expr)]
    OP_EQMORE   [reduce using rule 59 (expr)]
    OP_ASSIGN   [reduce using rule 59 (expr)]
    OP_PLUSEQ   [reduce using rule 59 (expr)]
    OP_MINUSEQ  [reduce using rule 59 (expr)]
    OP_MULEQ    [reduce using rule 59 (expr)]
    OP_DIVEQ    [reduce using rule 59 (expr)]
    OP_MODEQ    [reduce using rule 59 (expr)]
    OP_SEMI     [reduce using rule 59 (expr)]
    $default    reduce using rule 59 (expr)

    main_program                go to state 118
    local_declarations          go to state 56
    var_declarations            go to state 57
    conditions                  go to state 58
    while_loop                  go to state 59
    for_loop                    go to state 60
    variable_types              go to state 61
    comp_types_of_declarations  go to state 15
    expr                        go to state 62
    operators                   go to state 63


State 65

    9 program: program global_declarations .

    $default  reduce using rule 9 (program)


State 66

   13 global_declarations: func_declaration KW_RETURN . expr OP_SEMI KW_ENDDEF OP_SEMI
   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   59 expr: . %empty  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_SEMI, OP_COMA, OP_DOT]
   60     | . TK_STRING
   61     | . TK_INT
   62     | . TK_REAL
   63     | . KW_TRUE
   64     | . KW_FALSE
   65     | . variable_types OP_PAR_L OP_PAR_R
   66     | . variable_types OP_PAR_L expr OP_PAR_R
   67     | . operators expr
   68     | . variable_types
   69     | . variable_types OP_BRA_L legal_array_index OP_BRA_R
   70     | . variable_types OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | . variable_types OP_BRA_L variable_types OP_BRA_R
   72     | . OP_POINTER expr
   73     | . expr OP_COMA expr
   74     | . expr OP_DOT expr
   75     | . expr OP_PLUS expr
   76     | . expr OP_MINUS expr
   77     | . expr OP_MUL expr
   78     | . expr OP_DIV expr
   79     | . expr OP_MOD expr
   80     | . expr OP_EQ expr
   81     | . expr OP_INEQ expr
   82     | . expr OP_LESS expr
   83     | . expr OP_EQLESS expr
   84     | . expr OP_MORE expr
   85     | . expr OP_EQMORE expr
   86     | . expr OP_ASSIGN expr
   87     | . expr KW_AND expr
   88     | . expr KW_OR expr
   89     | . expr KW_NOT expr
   90     | . expr OP_PLUSEQ expr
   91     | . expr OP_MINUSEQ expr
   92     | . expr OP_MULEQ expr
   93     | . expr OP_DIVEQ expr
   94     | . expr OP_MODEQ expr
   95     | . OP_PAR_L expr OP_PAR_R
   96     | . OP_BRA_L expr OP_BRA_L
   97     | . OP_SEMI
  108 operators: . OP_PLUS
  109          | . OP_MINUS
  110          | . OP_MUL
  111          | . OP_DIV
  112          | . OP_MOD
  113          | . OP_POWER
  114          | . OP_EQ
  115          | . OP_INEQ
  116          | . OP_LESS
  117          | . OP_EQLESS
  118          | . OP_MORE
  119          | . OP_EQMORE
  120          | . OP_ASSIGN
  121          | . OP_PLUSEQ
  122          | . OP_MINUSEQ
  123          | . OP_MULEQ
  124          | . OP_DIVEQ
  125          | . OP_MODEQ

    TK_STRING   shift, and go to state 23
    TK_IDENT    shift, and go to state 1
    TK_INT      shift, and go to state 24
    TK_REAL     shift, and go to state 25
    KW_HASH     shift, and go to state 2
    KW_FALSE    shift, and go to state 27
    KW_TRUE     shift, and go to state 32
    OP_PLUS     shift, and go to state 33
    OP_MINUS    shift, and go to state 34
    OP_MUL      shift, and go to state 35
    OP_DIV      shift, and go to state 36
    OP_MOD      shift, and go to state 37
    OP_POWER    shift, and go to state 38
    OP_EQ       shift, and go to state 39
    OP_INEQ     shift, and go to state 40
    OP_LESS     shift, and go to state 41
    OP_EQLESS   shift, and go to state 42
    OP_MORE     shift, and go to state 43
    OP_EQMORE   shift, and go to state 44
    OP_ASSIGN   shift, and go to state 45
    OP_PLUSEQ   shift, and go to state 46
    OP_MINUSEQ  shift, and go to state 47
    OP_MULEQ    shift, and go to state 48
    OP_DIVEQ    shift, and go to state 49
    OP_MODEQ    shift, and go to state 50
    OP_POINTER  shift, and go to state 51
    OP_PAR_L    shift, and go to state 52
    OP_SEMI     shift, and go to state 53
    OP_BRA_L    shift, and go to state 54

    OP_PLUS     [reduce using rule 59 (expr)]
    OP_MINUS    [reduce using rule 59 (expr)]
    OP_MUL      [reduce using rule 59 (expr)]
    OP_DIV      [reduce using rule 59 (expr)]
    OP_MOD      [reduce using rule 59 (expr)]
    OP_EQ       [reduce using rule 59 (expr)]
    OP_INEQ     [reduce using rule 59 (expr)]
    OP_LESS     [reduce using rule 59 (expr)]
    OP_EQLESS   [reduce using rule 59 (expr)]
    OP_MORE     [reduce using rule 59 (expr)]
    OP_EQMORE   [reduce using rule 59 (expr)]
    OP_ASSIGN   [reduce using rule 59 (expr)]
    OP_PLUSEQ   [reduce using rule 59 (expr)]
    OP_MINUSEQ  [reduce using rule 59 (expr)]
    OP_MULEQ    [reduce using rule 59 (expr)]
    OP_DIVEQ    [reduce using rule 59 (expr)]
    OP_MODEQ    [reduce using rule 59 (expr)]
    OP_SEMI     [reduce using rule 59 (expr)]
    $default    reduce using rule 59 (expr)

    variable_types  go to state 82
    expr            go to state 119
    operators       go to state 63


State 67

   11 global_declarations: func_declaration function_code . KW_RETURN OP_SEMI KW_ENDDEF OP_SEMI
   12                    | func_declaration function_code . KW_RETURN expr OP_SEMI KW_ENDDEF OP_SEMI
   14                    | func_declaration function_code . KW_ENDDEF OP_SEMI
   28 function_code: function_code . local_declarations
   31 local_declarations: . var_declarations
   32                   | . expr OP_SEMI
   33                   | . conditions KW_ENDIF OP_SEMI
   34                   | . while_loop KW_ENDWHILE OP_SEMI
   35                   | . for_loop KW_ENDFOR OP_SEMI
   36                   | . KW_BREAK OP_SEMI
   37                   | . KW_CONTINUE OP_SEMI
   38 var_declarations: . variable_types OP_ASSIGN expr OP_SEMI
   39                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN expr OP_SEMI
   40                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   41                 | . variable_types OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   42                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_MEAN types OP_SEMI
   43                 | . comp_types_of_declarations OP_MEAN types OP_SEMI
   44                 | . KW_CONST comp_types_of_declarations OP_ASSIGN data_types OP_MEAN types OP_SEMI
   45                 | . KW_CONST comp_types_of_declarations OP_ASSIGN operators data_types OP_MEAN types OP_SEMI
   46 conditions: . KW_IF OP_PAR_L expr OP_PAR_R OP_MEAN main_program
   47           | . KW_IF OP_PAR_L expr OP_PAR_R OP_MEAN comp_function_code
   48           | . conditions KW_ELSE OP_MEAN main_program
   49 while_loop: . KW_WHILE OP_PAR_L expr OP_PAR_R OP_MEAN main_program
   50           | . KW_WHILE OP_PAR_L expr OP_PAR_R OP_MEAN comp_function_code
   51 for_loop: . KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_BRA_R OP_MEAN main_program
   52         | . KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_BRA_R OP_MEAN comp_function_code
   53         | . KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_MEAN expr OP_BRA_R OP_MEAN main_program
   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   56 comp_types_of_declarations: . variable_types
   57                           | . comp_types_of_declarations OP_COMA variable_types
   58                           | . comp_types_of_declarations OP_COMA variable_types OP_BRA_L legal_array_index OP_BRA_R
   59 expr: . %empty  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_SEMI, OP_COMA, OP_DOT]
   60     | . TK_STRING
   61     | . TK_INT
   62     | . TK_REAL
   63     | . KW_TRUE
   64     | . KW_FALSE
   65     | . variable_types OP_PAR_L OP_PAR_R
   66     | . variable_types OP_PAR_L expr OP_PAR_R
   67     | . operators expr
   68     | . variable_types
   69     | . variable_types OP_BRA_L legal_array_index OP_BRA_R
   70     | . variable_types OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | . variable_types OP_BRA_L variable_types OP_BRA_R
   72     | . OP_POINTER expr
   73     | . expr OP_COMA expr
   74     | . expr OP_DOT expr
   75     | . expr OP_PLUS expr
   76     | . expr OP_MINUS expr
   77     | . expr OP_MUL expr
   78     | . expr OP_DIV expr
   79     | . expr OP_MOD expr
   80     | . expr OP_EQ expr
   81     | . expr OP_INEQ expr
   82     | . expr OP_LESS expr
   83     | . expr OP_EQLESS expr
   84     | . expr OP_MORE expr
   85     | . expr OP_EQMORE expr
   86     | . expr OP_ASSIGN expr
   87     | . expr KW_AND expr
   88     | . expr KW_OR expr
   89     | . expr KW_NOT expr
   90     | . expr OP_PLUSEQ expr
   91     | . expr OP_MINUSEQ expr
   92     | . expr OP_MULEQ expr
   93     | . expr OP_DIVEQ expr
   94     | . expr OP_MODEQ expr
   95     | . OP_PAR_L expr OP_PAR_R
   96     | . OP_BRA_L expr OP_BRA_L
   97     | . OP_SEMI
  108 operators: . OP_PLUS
  109          | . OP_MINUS
  110          | . OP_MUL
  111          | . OP_DIV
  112          | . OP_MOD
  113          | . OP_POWER
  114          | . OP_EQ
  115          | . OP_INEQ
  116          | . OP_LESS
  117          | . OP_EQLESS
  118          | . OP_MORE
  119          | . OP_EQMORE
  120          | . OP_ASSIGN
  121          | . OP_PLUSEQ
  122          | . OP_MINUSEQ
  123          | . OP_MULEQ
  124          | . OP_DIVEQ
  125          | . OP_MODEQ

    TK_STRING    shift, and go to state 23
    TK_IDENT     shift, and go to state 1
    TK_INT       shift, and go to state 24
    TK_REAL      shift, and go to state 25
    KW_HASH      shift, and go to state 2
    KW_IF        shift, and go to state 26
    KW_FALSE     shift, and go to state 27
    KW_FOR       shift, and go to state 28
    KW_BREAK     shift, and go to state 29
    KW_CONST     shift, and go to state 4
    KW_CONTINUE  shift, and go to state 30
    KW_ENDDEF    shift, and go to state 120
    KW_WHILE     shift, and go to state 31
    KW_RETURN    shift, and go to state 121
    KW_TRUE      shift, and go to state 32
    OP_PLUS      shift, and go to state 33
    OP_MINUS     shift, and go to state 34
    OP_MUL       shift, and go to state 35
    OP_DIV       shift, and go to state 36
    OP_MOD       shift, and go to state 37
    OP_POWER     shift, and go to state 38
    OP_EQ        shift, and go to state 39
    OP_INEQ      shift, and go to state 40
    OP_LESS      shift, and go to state 41
    OP_EQLESS    shift, and go to state 42
    OP_MORE      shift, and go to state 43
    OP_EQMORE    shift, and go to state 44
    OP_ASSIGN    shift, and go to state 45
    OP_PLUSEQ    shift, and go to state 46
    OP_MINUSEQ   shift, and go to state 47
    OP_MULEQ     shift, and go to state 48
    OP_DIVEQ     shift, and go to state 49
    OP_MODEQ     shift, and go to state 50
    OP_POINTER   shift, and go to state 51
    OP_PAR_L     shift, and go to state 52
    OP_SEMI      shift, and go to state 53
    OP_BRA_L     shift, and go to state 54

    OP_PLUS     [reduce using rule 59 (expr)]
    OP_MINUS    [reduce using rule 59 (expr)]
    OP_MUL      [reduce using rule 59 (expr)]
    OP_DIV      [reduce using rule 59 (expr)]
    OP_MOD      [reduce using rule 59 (expr)]
    OP_EQ       [reduce using rule 59 (expr)]
    OP_INEQ     [reduce using rule 59 (expr)]
    OP_LESS     [reduce using rule 59 (expr)]
    OP_EQLESS   [reduce using rule 59 (expr)]
    OP_MORE     [reduce using rule 59 (expr)]
    OP_EQMORE   [reduce using rule 59 (expr)]
    OP_ASSIGN   [reduce using rule 59 (expr)]
    OP_PLUSEQ   [reduce using rule 59 (expr)]
    OP_MINUSEQ  [reduce using rule 59 (expr)]
    OP_MULEQ    [reduce using rule 59 (expr)]
    OP_DIVEQ    [reduce using rule 59 (expr)]
    OP_MODEQ    [reduce using rule 59 (expr)]
    OP_SEMI     [reduce using rule 59 (expr)]
    $default    reduce using rule 59 (expr)

    local_declarations          go to state 122
    var_declarations            go to state 57
    conditions                  go to state 58
    while_loop                  go to state 59
    for_loop                    go to state 60
    variable_types              go to state 61
    comp_types_of_declarations  go to state 15
    expr                        go to state 62
    operators                   go to state 63


State 68

   27 function_code: local_declarations .

    $default  reduce using rule 27 (function_code)


State 69

   38 var_declarations: variable_types OP_ASSIGN . expr OP_SEMI
   41                 | variable_types OP_ASSIGN . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   59 expr: . %empty  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_SEMI, OP_COMA, OP_DOT]
   60     | . TK_STRING
   61     | . TK_INT
   62     | . TK_REAL
   63     | . KW_TRUE
   64     | . KW_FALSE
   65     | . variable_types OP_PAR_L OP_PAR_R
   66     | . variable_types OP_PAR_L expr OP_PAR_R
   67     | . operators expr
   68     | . variable_types
   69     | . variable_types OP_BRA_L legal_array_index OP_BRA_R
   70     | . variable_types OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | . variable_types OP_BRA_L variable_types OP_BRA_R
   72     | . OP_POINTER expr
   73     | . expr OP_COMA expr
   74     | . expr OP_DOT expr
   75     | . expr OP_PLUS expr
   76     | . expr OP_MINUS expr
   77     | . expr OP_MUL expr
   78     | . expr OP_DIV expr
   79     | . expr OP_MOD expr
   80     | . expr OP_EQ expr
   81     | . expr OP_INEQ expr
   82     | . expr OP_LESS expr
   83     | . expr OP_EQLESS expr
   84     | . expr OP_MORE expr
   85     | . expr OP_EQMORE expr
   86     | . expr OP_ASSIGN expr
   87     | . expr KW_AND expr
   88     | . expr KW_OR expr
   89     | . expr KW_NOT expr
   90     | . expr OP_PLUSEQ expr
   91     | . expr OP_MINUSEQ expr
   92     | . expr OP_MULEQ expr
   93     | . expr OP_DIVEQ expr
   94     | . expr OP_MODEQ expr
   95     | . OP_PAR_L expr OP_PAR_R
   96     | . OP_BRA_L expr OP_BRA_L
   97     | . OP_SEMI
  108 operators: . OP_PLUS
  109          | . OP_MINUS
  110          | . OP_MUL
  111          | . OP_DIV
  112          | . OP_MOD
  113          | . OP_POWER
  114          | . OP_EQ
  115          | . OP_INEQ
  116          | . OP_LESS
  117          | . OP_EQLESS
  118          | . OP_MORE
  119          | . OP_EQMORE
  120          | . OP_ASSIGN
  121          | . OP_PLUSEQ
  122          | . OP_MINUSEQ
  123          | . OP_MULEQ
  124          | . OP_DIVEQ
  125          | . OP_MODEQ

    TK_STRING   shift, and go to state 23
    TK_IDENT    shift, and go to state 1
    TK_INT      shift, and go to state 24
    TK_REAL     shift, and go to state 25
    KW_HASH     shift, and go to state 2
    KW_FALSE    shift, and go to state 27
    KW_TRUE     shift, and go to state 32
    OP_PLUS     shift, and go to state 33
    OP_MINUS    shift, and go to state 34
    OP_MUL      shift, and go to state 35
    OP_DIV      shift, and go to state 36
    OP_MOD      shift, and go to state 37
    OP_POWER    shift, and go to state 38
    OP_EQ       shift, and go to state 39
    OP_INEQ     shift, and go to state 40
    OP_LESS     shift, and go to state 41
    OP_EQLESS   shift, and go to state 42
    OP_MORE     shift, and go to state 43
    OP_EQMORE   shift, and go to state 44
    OP_ASSIGN   shift, and go to state 45
    OP_PLUSEQ   shift, and go to state 46
    OP_MINUSEQ  shift, and go to state 47
    OP_MULEQ    shift, and go to state 48
    OP_DIVEQ    shift, and go to state 49
    OP_MODEQ    shift, and go to state 50
    OP_POINTER  shift, and go to state 51
    OP_PAR_L    shift, and go to state 52
    OP_SEMI     shift, and go to state 53
    OP_BRA_L    shift, and go to state 54

    OP_PLUS     [reduce using rule 59 (expr)]
    OP_MINUS    [reduce using rule 59 (expr)]
    OP_MUL      [reduce using rule 59 (expr)]
    OP_DIV      [reduce using rule 59 (expr)]
    OP_MOD      [reduce using rule 59 (expr)]
    OP_EQ       [reduce using rule 59 (expr)]
    OP_INEQ     [reduce using rule 59 (expr)]
    OP_LESS     [reduce using rule 59 (expr)]
    OP_EQLESS   [reduce using rule 59 (expr)]
    OP_MORE     [reduce using rule 59 (expr)]
    OP_EQMORE   [reduce using rule 59 (expr)]
    OP_ASSIGN   [reduce using rule 59 (expr)]
    OP_PLUSEQ   [reduce using rule 59 (expr)]
    OP_MINUSEQ  [reduce using rule 59 (expr)]
    OP_MULEQ    [reduce using rule 59 (expr)]
    OP_DIVEQ    [reduce using rule 59 (expr)]
    OP_MODEQ    [reduce using rule 59 (expr)]
    OP_SEMI     [reduce using rule 59 (expr)]
    $default    reduce using rule 59 (expr)

    variable_types  go to state 123
    expr            go to state 124
    operators       go to state 63


State 70

   39 var_declarations: variable_types OP_BRA_L . legal_array_index OP_BRA_R OP_ASSIGN expr OP_SEMI
   40                 | variable_types OP_BRA_L . legal_array_index OP_BRA_R OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   42                 | variable_types OP_BRA_L . legal_array_index OP_BRA_R OP_MEAN types OP_SEMI
   98 legal_array_index: . TK_INT
   99                  | . TK_IDENT

    TK_IDENT  shift, and go to state 125
    TK_INT    shift, and go to state 126

    legal_array_index  go to state 127


State 71

   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   57 comp_types_of_declarations: comp_types_of_declarations OP_COMA . variable_types
   58                           | comp_types_of_declarations OP_COMA . variable_types OP_BRA_L legal_array_index OP_BRA_R

    TK_IDENT  shift, and go to state 1
    KW_HASH   shift, and go to state 2

    variable_types  go to state 128


State 72

   43 var_declarations: comp_types_of_declarations OP_MEAN . types OP_SEMI
  103 types: . KW_STR
  104      | . KW_INTEGER
  105      | . KW_SCALAR
  106      | . KW_BOOLEAN
  107      | . TK_IDENT

    TK_IDENT    shift, and go to state 129
    KW_INTEGER  shift, and go to state 130
    KW_SCALAR   shift, and go to state 131
    KW_STR      shift, and go to state 132
    KW_BOOLEAN  shift, and go to state 133

    types  go to state 134


State 73

   16 func_declaration: KW_DEF TK_IDENT OP_PAR_L . func_parameters OP_PAR_R OP_MINUS OP_MORE types OP_MEAN
   17                 | KW_DEF TK_IDENT OP_PAR_L . func_parameters OP_PAR_R OP_MINUS OP_MORE KW_VOID OP_MEAN
   18                 | KW_DEF TK_IDENT OP_PAR_L . func_parameters OP_PAR_R OP_MEAN
   19                 | KW_DEF TK_IDENT OP_PAR_L . OP_PAR_R OP_MINUS OP_MORE types OP_MEAN
   20                 | KW_DEF TK_IDENT OP_PAR_L . OP_PAR_R OP_MEAN
   21 func_parameters: . %empty  [OP_PAR_R, OP_COMA]
   22                | . TK_IDENT OP_MEAN types
   23                | . func_parameters OP_COMA TK_IDENT OP_MEAN types
   24                | . TK_IDENT OP_BRA_L OP_BRA_R OP_MEAN types
   25                | . func_parameters OP_COMA TK_IDENT OP_BRA_L OP_BRA_R OP_MEAN types

    TK_IDENT  shift, and go to state 135
    OP_PAR_R  shift, and go to state 136

    OP_PAR_R  [reduce using rule 21 (func_parameters)]
    $default  reduce using rule 21 (func_parameters)

    func_parameters  go to state 137


State 74

    7 main: KW_DEF KW_MAIN OP_PAR_L . OP_PAR_R OP_MEAN

    OP_PAR_R  shift, and go to state 138


State 75

   44 var_declarations: KW_CONST comp_types_of_declarations OP_ASSIGN . data_types OP_MEAN types OP_SEMI
   45                 | KW_CONST comp_types_of_declarations OP_ASSIGN . operators data_types OP_MEAN types OP_SEMI
  100 data_types: . TK_INT
  101           | . TK_STRING
  102           | . TK_REAL
  108 operators: . OP_PLUS
  109          | . OP_MINUS
  110          | . OP_MUL
  111          | . OP_DIV
  112          | . OP_MOD
  113          | . OP_POWER
  114          | . OP_EQ
  115          | . OP_INEQ
  116          | . OP_LESS
  117          | . OP_EQLESS
  118          | . OP_MORE
  119          | . OP_EQMORE
  120          | . OP_ASSIGN
  121          | . OP_PLUSEQ
  122          | . OP_MINUSEQ
  123          | . OP_MULEQ
  124          | . OP_DIVEQ
  125          | . OP_MODEQ

    TK_STRING   shift, and go to state 139
    TK_INT      shift, and go to state 140
    TK_REAL     shift, and go to state 141
    OP_PLUS     shift, and go to state 33
    OP_MINUS    shift, and go to state 34
    OP_MUL      shift, and go to state 35
    OP_DIV      shift, and go to state 36
    OP_MOD      shift, and go to state 37
    OP_POWER    shift, and go to state 38
    OP_EQ       shift, and go to state 39
    OP_INEQ     shift, and go to state 40
    OP_LESS     shift, and go to state 41
    OP_EQLESS   shift, and go to state 42
    OP_MORE     shift, and go to state 43
    OP_EQMORE   shift, and go to state 44
    OP_ASSIGN   shift, and go to state 45
    OP_PLUSEQ   shift, and go to state 46
    OP_MINUSEQ  shift, and go to state 47
    OP_MULEQ    shift, and go to state 48
    OP_DIVEQ    shift, and go to state 49
    OP_MODEQ    shift, and go to state 50

    data_types  go to state 142
    operators   go to state 143


State 76

   15 global_declarations: KW_COMP TK_IDENT OP_MEAN . comp_code KW_ENDCOMP OP_SEMI
  126 comp_code: . comp_local_declarations
  127          | . comp_code comp_local_declarations
  128 comp_local_declarations: . %empty  [KW_HASH, KW_DEF, KW_ENDCOMP, KW_CONST]
  129                        | . comp_initialise_local_declarations
  130                        | . comp_func_declaration comp_function_code KW_RETURN OP_SEMI KW_ENDDEF OP_SEMI
  131                        | . comp_func_declaration comp_function_code KW_RETURN expr OP_SEMI KW_ENDDEF OP_SEMI
  132                        | . comp_func_declaration KW_RETURN expr OP_SEMI KW_ENDDEF OP_SEMI
  133                        | . comp_func_declaration comp_function_code KW_ENDDEF OP_SEMI
  134 comp_initialise_local_declarations: . comp_var_declarations
  135 comp_var_declarations: . KW_HASH TK_IDENT OP_ASSIGN expr OP_SEMI
  136                      | . KW_HASH TK_IDENT OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN expr OP_SEMI
  137                      | . KW_HASH TK_IDENT OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN KW_HASH TK_IDENT OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
  138                      | . KW_HASH TK_IDENT OP_ASSIGN TK_IDENT OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
  139                      | . KW_HASH TK_IDENT OP_BRA_L legal_array_index OP_BRA_R OP_MEAN types OP_SEMI
  140                      | . comp_initialise_types_of_declarations OP_MEAN types OP_SEMI
  141                      | . KW_CONST comp_initialise_types_of_declarations OP_ASSIGN data_types OP_MEAN types OP_SEMI
  142                      | . KW_CONST comp_initialise_types_of_declarations OP_ASSIGN operators data_types OP_MEAN types OP_SEMI
  143 comp_initialise_types_of_declarations: . KW_HASH TK_IDENT
  144                                      | . comp_initialise_types_of_declarations OP_COMA KW_HASH TK_IDENT
  145                                      | . comp_initialise_types_of_declarations OP_COMA KW_HASH TK_IDENT OP_BRA_L legal_array_index OP_BRA_R
  149 comp_func_declaration: . KW_DEF TK_IDENT OP_PAR_L func_parameters OP_PAR_R OP_MINUS OP_MORE types OP_MEAN
  150                      | . KW_DEF TK_IDENT OP_PAR_L func_parameters OP_PAR_R OP_MEAN
  151                      | . KW_DEF TK_IDENT OP_PAR_L OP_PAR_R OP_MINUS OP_MORE types OP_MEAN
  152                      | . KW_DEF TK_IDENT OP_PAR_L OP_PAR_R OP_MEAN

    KW_HASH   shift, and go to state 144
    KW_DEF    shift, and go to state 145
    KW_CONST  shift, and go to state 146

    KW_HASH   [reduce using rule 128 (comp_local_declarations)]
    KW_DEF    [reduce using rule 128 (comp_local_declarations)]
    KW_CONST  [reduce using rule 128 (comp_local_declarations)]
    $default  reduce using rule 128 (comp_local_declarations)

    comp_code                              go to state 147
    comp_local_declarations                go to state 148
    comp_initialise_local_declarations     go to state 149
    comp_var_declarations                  go to state 150
    comp_initialise_types_of_declarations  go to state 151
    comp_func_declaration                  go to state 152


State 77

   46 conditions: KW_IF OP_PAR_L . expr OP_PAR_R OP_MEAN main_program
   47           | KW_IF OP_PAR_L . expr OP_PAR_R OP_MEAN comp_function_code
   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   59 expr: . %empty  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_PAR_R, OP_COMA, OP_DOT]
   60     | . TK_STRING
   61     | . TK_INT
   62     | . TK_REAL
   63     | . KW_TRUE
   64     | . KW_FALSE
   65     | . variable_types OP_PAR_L OP_PAR_R
   66     | . variable_types OP_PAR_L expr OP_PAR_R
   67     | . operators expr
   68     | . variable_types
   69     | . variable_types OP_BRA_L legal_array_index OP_BRA_R
   70     | . variable_types OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | . variable_types OP_BRA_L variable_types OP_BRA_R
   72     | . OP_POINTER expr
   73     | . expr OP_COMA expr
   74     | . expr OP_DOT expr
   75     | . expr OP_PLUS expr
   76     | . expr OP_MINUS expr
   77     | . expr OP_MUL expr
   78     | . expr OP_DIV expr
   79     | . expr OP_MOD expr
   80     | . expr OP_EQ expr
   81     | . expr OP_INEQ expr
   82     | . expr OP_LESS expr
   83     | . expr OP_EQLESS expr
   84     | . expr OP_MORE expr
   85     | . expr OP_EQMORE expr
   86     | . expr OP_ASSIGN expr
   87     | . expr KW_AND expr
   88     | . expr KW_OR expr
   89     | . expr KW_NOT expr
   90     | . expr OP_PLUSEQ expr
   91     | . expr OP_MINUSEQ expr
   92     | . expr OP_MULEQ expr
   93     | . expr OP_DIVEQ expr
   94     | . expr OP_MODEQ expr
   95     | . OP_PAR_L expr OP_PAR_R
   96     | . OP_BRA_L expr OP_BRA_L
   97     | . OP_SEMI
  108 operators: . OP_PLUS
  109          | . OP_MINUS
  110          | . OP_MUL
  111          | . OP_DIV
  112          | . OP_MOD
  113          | . OP_POWER
  114          | . OP_EQ
  115          | . OP_INEQ
  116          | . OP_LESS
  117          | . OP_EQLESS
  118          | . OP_MORE
  119          | . OP_EQMORE
  120          | . OP_ASSIGN
  121          | . OP_PLUSEQ
  122          | . OP_MINUSEQ
  123          | . OP_MULEQ
  124          | . OP_DIVEQ
  125          | . OP_MODEQ

    TK_STRING   shift, and go to state 23
    TK_IDENT    shift, and go to state 1
    TK_INT      shift, and go to state 24
    TK_REAL     shift, and go to state 25
    KW_HASH     shift, and go to state 2
    KW_FALSE    shift, and go to state 27
    KW_TRUE     shift, and go to state 32
    OP_PLUS     shift, and go to state 33
    OP_MINUS    shift, and go to state 34
    OP_MUL      shift, and go to state 35
    OP_DIV      shift, and go to state 36
    OP_MOD      shift, and go to state 37
    OP_POWER    shift, and go to state 38
    OP_EQ       shift, and go to state 39
    OP_INEQ     shift, and go to state 40
    OP_LESS     shift, and go to state 41
    OP_EQLESS   shift, and go to state 42
    OP_MORE     shift, and go to state 43
    OP_EQMORE   shift, and go to state 44
    OP_ASSIGN   shift, and go to state 45
    OP_PLUSEQ   shift, and go to state 46
    OP_MINUSEQ  shift, and go to state 47
    OP_MULEQ    shift, and go to state 48
    OP_DIVEQ    shift, and go to state 49
    OP_MODEQ    shift, and go to state 50
    OP_POINTER  shift, and go to state 51
    OP_PAR_L    shift, and go to state 52
    OP_SEMI     shift, and go to state 53
    OP_BRA_L    shift, and go to state 54

    OP_PLUS     [reduce using rule 59 (expr)]
    OP_MINUS    [reduce using rule 59 (expr)]
    OP_MUL      [reduce using rule 59 (expr)]
    OP_DIV      [reduce using rule 59 (expr)]
    OP_MOD      [reduce using rule 59 (expr)]
    OP_EQ       [reduce using rule 59 (expr)]
    OP_INEQ     [reduce using rule 59 (expr)]
    OP_LESS     [reduce using rule 59 (expr)]
    OP_EQLESS   [reduce using rule 59 (expr)]
    OP_MORE     [reduce using rule 59 (expr)]
    OP_EQMORE   [reduce using rule 59 (expr)]
    OP_ASSIGN   [reduce using rule 59 (expr)]
    OP_PLUSEQ   [reduce using rule 59 (expr)]
    OP_MINUSEQ  [reduce using rule 59 (expr)]
    OP_MULEQ    [reduce using rule 59 (expr)]
    OP_DIVEQ    [reduce using rule 59 (expr)]
    OP_MODEQ    [reduce using rule 59 (expr)]
    $default    reduce using rule 59 (expr)

    variable_types  go to state 82
    expr            go to state 153
    operators       go to state 63


State 78

   51 for_loop: KW_FOR TK_IDENT . KW_IN OP_BRA_L expr OP_MEAN expr OP_BRA_R OP_MEAN main_program
   52         | KW_FOR TK_IDENT . KW_IN OP_BRA_L expr OP_MEAN expr OP_BRA_R OP_MEAN comp_function_code
   53         | KW_FOR TK_IDENT . KW_IN OP_BRA_L expr OP_MEAN expr OP_MEAN expr OP_BRA_R OP_MEAN main_program

    KW_IN  shift, and go to state 154


State 79

   36 local_declarations: KW_BREAK OP_SEMI .

    $default  reduce using rule 36 (local_declarations)


State 80

   37 local_declarations: KW_CONTINUE OP_SEMI .

    $default  reduce using rule 37 (local_declarations)


State 81

   49 while_loop: KW_WHILE OP_PAR_L . expr OP_PAR_R OP_MEAN main_program
   50           | KW_WHILE OP_PAR_L . expr OP_PAR_R OP_MEAN comp_function_code
   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   59 expr: . %empty  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_PAR_R, OP_COMA, OP_DOT]
   60     | . TK_STRING
   61     | . TK_INT
   62     | . TK_REAL
   63     | . KW_TRUE
   64     | . KW_FALSE
   65     | . variable_types OP_PAR_L OP_PAR_R
   66     | . variable_types OP_PAR_L expr OP_PAR_R
   67     | . operators expr
   68     | . variable_types
   69     | . variable_types OP_BRA_L legal_array_index OP_BRA_R
   70     | . variable_types OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | . variable_types OP_BRA_L variable_types OP_BRA_R
   72     | . OP_POINTER expr
   73     | . expr OP_COMA expr
   74     | . expr OP_DOT expr
   75     | . expr OP_PLUS expr
   76     | . expr OP_MINUS expr
   77     | . expr OP_MUL expr
   78     | . expr OP_DIV expr
   79     | . expr OP_MOD expr
   80     | . expr OP_EQ expr
   81     | . expr OP_INEQ expr
   82     | . expr OP_LESS expr
   83     | . expr OP_EQLESS expr
   84     | . expr OP_MORE expr
   85     | . expr OP_EQMORE expr
   86     | . expr OP_ASSIGN expr
   87     | . expr KW_AND expr
   88     | . expr KW_OR expr
   89     | . expr KW_NOT expr
   90     | . expr OP_PLUSEQ expr
   91     | . expr OP_MINUSEQ expr
   92     | . expr OP_MULEQ expr
   93     | . expr OP_DIVEQ expr
   94     | . expr OP_MODEQ expr
   95     | . OP_PAR_L expr OP_PAR_R
   96     | . OP_BRA_L expr OP_BRA_L
   97     | . OP_SEMI
  108 operators: . OP_PLUS
  109          | . OP_MINUS
  110          | . OP_MUL
  111          | . OP_DIV
  112          | . OP_MOD
  113          | . OP_POWER
  114          | . OP_EQ
  115          | . OP_INEQ
  116          | . OP_LESS
  117          | . OP_EQLESS
  118          | . OP_MORE
  119          | . OP_EQMORE
  120          | . OP_ASSIGN
  121          | . OP_PLUSEQ
  122          | . OP_MINUSEQ
  123          | . OP_MULEQ
  124          | . OP_DIVEQ
  125          | . OP_MODEQ

    TK_STRING   shift, and go to state 23
    TK_IDENT    shift, and go to state 1
    TK_INT      shift, and go to state 24
    TK_REAL     shift, and go to state 25
    KW_HASH     shift, and go to state 2
    KW_FALSE    shift, and go to state 27
    KW_TRUE     shift, and go to state 32
    OP_PLUS     shift, and go to state 33
    OP_MINUS    shift, and go to state 34
    OP_MUL      shift, and go to state 35
    OP_DIV      shift, and go to state 36
    OP_MOD      shift, and go to state 37
    OP_POWER    shift, and go to state 38
    OP_EQ       shift, and go to state 39
    OP_INEQ     shift, and go to state 40
    OP_LESS     shift, and go to state 41
    OP_EQLESS   shift, and go to state 42
    OP_MORE     shift, and go to state 43
    OP_EQMORE   shift, and go to state 44
    OP_ASSIGN   shift, and go to state 45
    OP_PLUSEQ   shift, and go to state 46
    OP_MINUSEQ  shift, and go to state 47
    OP_MULEQ    shift, and go to state 48
    OP_DIVEQ    shift, and go to state 49
    OP_MODEQ    shift, and go to state 50
    OP_POINTER  shift, and go to state 51
    OP_PAR_L    shift, and go to state 52
    OP_SEMI     shift, and go to state 53
    OP_BRA_L    shift, and go to state 54

    OP_PLUS     [reduce using rule 59 (expr)]
    OP_MINUS    [reduce using rule 59 (expr)]
    OP_MUL      [reduce using rule 59 (expr)]
    OP_DIV      [reduce using rule 59 (expr)]
    OP_MOD      [reduce using rule 59 (expr)]
    OP_EQ       [reduce using rule 59 (expr)]
    OP_INEQ     [reduce using rule 59 (expr)]
    OP_LESS     [reduce using rule 59 (expr)]
    OP_EQLESS   [reduce using rule 59 (expr)]
    OP_MORE     [reduce using rule 59 (expr)]
    OP_EQMORE   [reduce using rule 59 (expr)]
    OP_ASSIGN   [reduce using rule 59 (expr)]
    OP_PLUSEQ   [reduce using rule 59 (expr)]
    OP_MINUSEQ  [reduce using rule 59 (expr)]
    OP_MULEQ    [reduce using rule 59 (expr)]
    OP_DIVEQ    [reduce using rule 59 (expr)]
    OP_MODEQ    [reduce using rule 59 (expr)]
    $default    reduce using rule 59 (expr)

    variable_types  go to state 82
    expr            go to state 155
    operators       go to state 63


State 82

   65 expr: variable_types . OP_PAR_L OP_PAR_R
   66     | variable_types . OP_PAR_L expr OP_PAR_R
   68     | variable_types .  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_PAR_R, OP_SEMI, OP_COMA, OP_BRA_L, OP_BRA_R, OP_DOT, OP_MEAN]
   69     | variable_types . OP_BRA_L legal_array_index OP_BRA_R
   70     | variable_types . OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | variable_types . OP_BRA_L variable_types OP_BRA_R

    OP_PAR_L  shift, and go to state 92
    OP_BRA_L  shift, and go to state 156

    OP_BRA_L  [reduce using rule 68 (expr)]
    $default  reduce using rule 68 (expr)


State 83

   72 expr: OP_POINTER expr .  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_PAR_R, OP_SEMI, OP_COMA, OP_BRA_L, OP_BRA_R, OP_DOT, OP_MEAN]
   73     | expr . OP_COMA expr
   74     | expr . OP_DOT expr
   75     | expr . OP_PLUS expr
   76     | expr . OP_MINUS expr
   77     | expr . OP_MUL expr
   78     | expr . OP_DIV expr
   79     | expr . OP_MOD expr
   80     | expr . OP_EQ expr
   81     | expr . OP_INEQ expr
   82     | expr . OP_LESS expr
   83     | expr . OP_EQLESS expr
   84     | expr . OP_MORE expr
   85     | expr . OP_EQMORE expr
   86     | expr . OP_ASSIGN expr
   87     | expr . KW_AND expr
   88     | expr . KW_OR expr
   89     | expr . KW_NOT expr
   90     | expr . OP_PLUSEQ expr
   91     | expr . OP_MINUSEQ expr
   92     | expr . OP_MULEQ expr
   93     | expr . OP_DIVEQ expr
   94     | expr . OP_MODEQ expr

    KW_NOT      shift, and go to state 94
    KW_AND      shift, and go to state 95
    KW_OR       shift, and go to state 96
    OP_PLUS     shift, and go to state 97
    OP_MINUS    shift, and go to state 98
    OP_MUL      shift, and go to state 99
    OP_DIV      shift, and go to state 100
    OP_MOD      shift, and go to state 101
    OP_EQ       shift, and go to state 102
    OP_INEQ     shift, and go to state 103
    OP_LESS     shift, and go to state 104
    OP_EQLESS   shift, and go to state 105
    OP_MORE     shift, and go to state 106
    OP_EQMORE   shift, and go to state 107
    OP_ASSIGN   shift, and go to state 108
    OP_PLUSEQ   shift, and go to state 109
    OP_MINUSEQ  shift, and go to state 110
    OP_MULEQ    shift, and go to state 111
    OP_DIVEQ    shift, and go to state 112
    OP_MODEQ    shift, and go to state 113
    OP_COMA     shift, and go to state 115
    OP_DOT      shift, and go to state 116

    KW_NOT      [reduce using rule 72 (expr)]
    KW_AND      [reduce using rule 72 (expr)]
    KW_OR       [reduce using rule 72 (expr)]
    OP_PLUS     [reduce using rule 72 (expr)]
    OP_MINUS    [reduce using rule 72 (expr)]
    OP_MUL      [reduce using rule 72 (expr)]
    OP_DIV      [reduce using rule 72 (expr)]
    OP_MOD      [reduce using rule 72 (expr)]
    OP_EQ       [reduce using rule 72 (expr)]
    OP_INEQ     [reduce using rule 72 (expr)]
    OP_LESS     [reduce using rule 72 (expr)]
    OP_EQLESS   [reduce using rule 72 (expr)]
    OP_MORE     [reduce using rule 72 (expr)]
    OP_EQMORE   [reduce using rule 72 (expr)]
    OP_ASSIGN   [reduce using rule 72 (expr)]
    OP_PLUSEQ   [reduce using rule 72 (expr)]
    OP_MINUSEQ  [reduce using rule 72 (expr)]
    OP_MULEQ    [reduce using rule 72 (expr)]
    OP_DIVEQ    [reduce using rule 72 (expr)]
    OP_MODEQ    [reduce using rule 72 (expr)]
    OP_COMA     [reduce using rule 72 (expr)]
    OP_DOT      [reduce using rule 72 (expr)]
    $default    reduce using rule 72 (expr)


State 84

   73 expr: expr . OP_COMA expr
   74     | expr . OP_DOT expr
   75     | expr . OP_PLUS expr
   76     | expr . OP_MINUS expr
   77     | expr . OP_MUL expr
   78     | expr . OP_DIV expr
   79     | expr . OP_MOD expr
   80     | expr . OP_EQ expr
   81     | expr . OP_INEQ expr
   82     | expr . OP_LESS expr
   83     | expr . OP_EQLESS expr
   84     | expr . OP_MORE expr
   85     | expr . OP_EQMORE expr
   86     | expr . OP_ASSIGN expr
   87     | expr . KW_AND expr
   88     | expr . KW_OR expr
   89     | expr . KW_NOT expr
   90     | expr . OP_PLUSEQ expr
   91     | expr . OP_MINUSEQ expr
   92     | expr . OP_MULEQ expr
   93     | expr . OP_DIVEQ expr
   94     | expr . OP_MODEQ expr
   95     | OP_PAR_L expr . OP_PAR_R

    KW_NOT      shift, and go to state 94
    KW_AND      shift, and go to state 95
    KW_OR       shift, and go to state 96
    OP_PLUS     shift, and go to state 97
    OP_MINUS    shift, and go to state 98
    OP_MUL      shift, and go to state 99
    OP_DIV      shift, and go to state 100
    OP_MOD      shift, and go to state 101
    OP_EQ       shift, and go to state 102
    OP_INEQ     shift, and go to state 103
    OP_LESS     shift, and go to state 104
    OP_EQLESS   shift, and go to state 105
    OP_MORE     shift, and go to state 106
    OP_EQMORE   shift, and go to state 107
    OP_ASSIGN   shift, and go to state 108
    OP_PLUSEQ   shift, and go to state 109
    OP_MINUSEQ  shift, and go to state 110
    OP_MULEQ    shift, and go to state 111
    OP_DIVEQ    shift, and go to state 112
    OP_MODEQ    shift, and go to state 113
    OP_PAR_R    shift, and go to state 157
    OP_COMA     shift, and go to state 115
    OP_DOT      shift, and go to state 116


State 85

   73 expr: expr . OP_COMA expr
   74     | expr . OP_DOT expr
   75     | expr . OP_PLUS expr
   76     | expr . OP_MINUS expr
   77     | expr . OP_MUL expr
   78     | expr . OP_DIV expr
   79     | expr . OP_MOD expr
   80     | expr . OP_EQ expr
   81     | expr . OP_INEQ expr
   82     | expr . OP_LESS expr
   83     | expr . OP_EQLESS expr
   84     | expr . OP_MORE expr
   85     | expr . OP_EQMORE expr
   86     | expr . OP_ASSIGN expr
   87     | expr . KW_AND expr
   88     | expr . KW_OR expr
   89     | expr . KW_NOT expr
   90     | expr . OP_PLUSEQ expr
   91     | expr . OP_MINUSEQ expr
   92     | expr . OP_MULEQ expr
   93     | expr . OP_DIVEQ expr
   94     | expr . OP_MODEQ expr
   96     | OP_BRA_L expr . OP_BRA_L

    KW_NOT      shift, and go to state 94
    KW_AND      shift, and go to state 95
    KW_OR       shift, and go to state 96
    OP_PLUS     shift, and go to state 97
    OP_MINUS    shift, and go to state 98
    OP_MUL      shift, and go to state 99
    OP_DIV      shift, and go to state 100
    OP_MOD      shift, and go to state 101
    OP_EQ       shift, and go to state 102
    OP_INEQ     shift, and go to state 103
    OP_LESS     shift, and go to state 104
    OP_EQLESS   shift, and go to state 105
    OP_MORE     shift, and go to state 106
    OP_EQMORE   shift, and go to state 107
    OP_ASSIGN   shift, and go to state 108
    OP_PLUSEQ   shift, and go to state 109
    OP_MINUSEQ  shift, and go to state 110
    OP_MULEQ    shift, and go to state 111
    OP_DIVEQ    shift, and go to state 112
    OP_MODEQ    shift, and go to state 113
    OP_COMA     shift, and go to state 115
    OP_BRA_L    shift, and go to state 158
    OP_DOT      shift, and go to state 116


State 86

    5 final_program: main main_program KW_ENDDEF . OP_SEMI program
    6              | main main_program KW_ENDDEF . OP_SEMI

    OP_SEMI  shift, and go to state 159


State 87

   30 main_program: main_program local_declarations .

    $default  reduce using rule 30 (main_program)


State 88

   48 conditions: conditions KW_ELSE . OP_MEAN main_program

    OP_MEAN  shift, and go to state 160


State 89

   33 local_declarations: conditions KW_ENDIF . OP_SEMI

    OP_SEMI  shift, and go to state 161


State 90

   34 local_declarations: while_loop KW_ENDWHILE . OP_SEMI

    OP_SEMI  shift, and go to state 162


State 91

   35 local_declarations: for_loop KW_ENDFOR . OP_SEMI

    OP_SEMI  shift, and go to state 163


State 92

   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   59 expr: . %empty  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_PAR_R, OP_COMA, OP_DOT]
   60     | . TK_STRING
   61     | . TK_INT
   62     | . TK_REAL
   63     | . KW_TRUE
   64     | . KW_FALSE
   65     | . variable_types OP_PAR_L OP_PAR_R
   65     | variable_types OP_PAR_L . OP_PAR_R
   66     | . variable_types OP_PAR_L expr OP_PAR_R
   66     | variable_types OP_PAR_L . expr OP_PAR_R
   67     | . operators expr
   68     | . variable_types
   69     | . variable_types OP_BRA_L legal_array_index OP_BRA_R
   70     | . variable_types OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | . variable_types OP_BRA_L variable_types OP_BRA_R
   72     | . OP_POINTER expr
   73     | . expr OP_COMA expr
   74     | . expr OP_DOT expr
   75     | . expr OP_PLUS expr
   76     | . expr OP_MINUS expr
   77     | . expr OP_MUL expr
   78     | . expr OP_DIV expr
   79     | . expr OP_MOD expr
   80     | . expr OP_EQ expr
   81     | . expr OP_INEQ expr
   82     | . expr OP_LESS expr
   83     | . expr OP_EQLESS expr
   84     | . expr OP_MORE expr
   85     | . expr OP_EQMORE expr
   86     | . expr OP_ASSIGN expr
   87     | . expr KW_AND expr
   88     | . expr KW_OR expr
   89     | . expr KW_NOT expr
   90     | . expr OP_PLUSEQ expr
   91     | . expr OP_MINUSEQ expr
   92     | . expr OP_MULEQ expr
   93     | . expr OP_DIVEQ expr
   94     | . expr OP_MODEQ expr
   95     | . OP_PAR_L expr OP_PAR_R
   96     | . OP_BRA_L expr OP_BRA_L
   97     | . OP_SEMI
  108 operators: . OP_PLUS
  109          | . OP_MINUS
  110          | . OP_MUL
  111          | . OP_DIV
  112          | . OP_MOD
  113          | . OP_POWER
  114          | . OP_EQ
  115          | . OP_INEQ
  116          | . OP_LESS
  117          | . OP_EQLESS
  118          | . OP_MORE
  119          | . OP_EQMORE
  120          | . OP_ASSIGN
  121          | . OP_PLUSEQ
  122          | . OP_MINUSEQ
  123          | . OP_MULEQ
  124          | . OP_DIVEQ
  125          | . OP_MODEQ

    TK_STRING   shift, and go to state 23
    TK_IDENT    shift, and go to state 1
    TK_INT      shift, and go to state 24
    TK_REAL     shift, and go to state 25
    KW_HASH     shift, and go to state 2
    KW_FALSE    shift, and go to state 27
    KW_TRUE     shift, and go to state 32
    OP_PLUS     shift, and go to state 33
    OP_MINUS    shift, and go to state 34
    OP_MUL      shift, and go to state 35
    OP_DIV      shift, and go to state 36
    OP_MOD      shift, and go to state 37
    OP_POWER    shift, and go to state 38
    OP_EQ       shift, and go to state 39
    OP_INEQ     shift, and go to state 40
    OP_LESS     shift, and go to state 41
    OP_EQLESS   shift, and go to state 42
    OP_MORE     shift, and go to state 43
    OP_EQMORE   shift, and go to state 44
    OP_ASSIGN   shift, and go to state 45
    OP_PLUSEQ   shift, and go to state 46
    OP_MINUSEQ  shift, and go to state 47
    OP_MULEQ    shift, and go to state 48
    OP_DIVEQ    shift, and go to state 49
    OP_MODEQ    shift, and go to state 50
    OP_POINTER  shift, and go to state 51
    OP_PAR_L    shift, and go to state 52
    OP_PAR_R    shift, and go to state 164
    OP_SEMI     shift, and go to state 53
    OP_BRA_L    shift, and go to state 54

    OP_PLUS     [reduce using rule 59 (expr)]
    OP_MINUS    [reduce using rule 59 (expr)]
    OP_MUL      [reduce using rule 59 (expr)]
    OP_DIV      [reduce using rule 59 (expr)]
    OP_MOD      [reduce using rule 59 (expr)]
    OP_EQ       [reduce using rule 59 (expr)]
    OP_INEQ     [reduce using rule 59 (expr)]
    OP_LESS     [reduce using rule 59 (expr)]
    OP_EQLESS   [reduce using rule 59 (expr)]
    OP_MORE     [reduce using rule 59 (expr)]
    OP_EQMORE   [reduce using rule 59 (expr)]
    OP_ASSIGN   [reduce using rule 59 (expr)]
    OP_PLUSEQ   [reduce using rule 59 (expr)]
    OP_MINUSEQ  [reduce using rule 59 (expr)]
    OP_MULEQ    [reduce using rule 59 (expr)]
    OP_DIVEQ    [reduce using rule 59 (expr)]
    OP_MODEQ    [reduce using rule 59 (expr)]
    OP_PAR_R    [reduce using rule 59 (expr)]
    $default    reduce using rule 59 (expr)

    variable_types  go to state 82
    expr            go to state 165
    operators       go to state 63


State 93

   39 var_declarations: variable_types OP_BRA_L . legal_array_index OP_BRA_R OP_ASSIGN expr OP_SEMI
   40                 | variable_types OP_BRA_L . legal_array_index OP_BRA_R OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   42                 | variable_types OP_BRA_L . legal_array_index OP_BRA_R OP_MEAN types OP_SEMI
   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   69 expr: variable_types OP_BRA_L . legal_array_index OP_BRA_R
   70     | variable_types OP_BRA_L . KW_HASH legal_array_index OP_BRA_R
   71     | variable_types OP_BRA_L . variable_types OP_BRA_R
   98 legal_array_index: . TK_INT
   99                  | . TK_IDENT

    TK_IDENT  shift, and go to state 166
    TK_INT    shift, and go to state 126
    KW_HASH   shift, and go to state 167

    variable_types     go to state 168
    legal_array_index  go to state 169


State 94

   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   59 expr: . %empty  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_PAR_R, OP_SEMI, OP_COMA, OP_BRA_L, OP_BRA_R, OP_DOT, OP_MEAN]
   60     | . TK_STRING
   61     | . TK_INT
   62     | . TK_REAL
   63     | . KW_TRUE
   64     | . KW_FALSE
   65     | . variable_types OP_PAR_L OP_PAR_R
   66     | . variable_types OP_PAR_L expr OP_PAR_R
   67     | . operators expr
   68     | . variable_types
   69     | . variable_types OP_BRA_L legal_array_index OP_BRA_R
   70     | . variable_types OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | . variable_types OP_BRA_L variable_types OP_BRA_R
   72     | . OP_POINTER expr
   73     | . expr OP_COMA expr
   74     | . expr OP_DOT expr
   75     | . expr OP_PLUS expr
   76     | . expr OP_MINUS expr
   77     | . expr OP_MUL expr
   78     | . expr OP_DIV expr
   79     | . expr OP_MOD expr
   80     | . expr OP_EQ expr
   81     | . expr OP_INEQ expr
   82     | . expr OP_LESS expr
   83     | . expr OP_EQLESS expr
   84     | . expr OP_MORE expr
   85     | . expr OP_EQMORE expr
   86     | . expr OP_ASSIGN expr
   87     | . expr KW_AND expr
   88     | . expr KW_OR expr
   89     | . expr KW_NOT expr
   89     | expr KW_NOT . expr
   90     | . expr OP_PLUSEQ expr
   91     | . expr OP_MINUSEQ expr
   92     | . expr OP_MULEQ expr
   93     | . expr OP_DIVEQ expr
   94     | . expr OP_MODEQ expr
   95     | . OP_PAR_L expr OP_PAR_R
   96     | . OP_BRA_L expr OP_BRA_L
   97     | . OP_SEMI
  108 operators: . OP_PLUS
  109          | . OP_MINUS
  110          | . OP_MUL
  111          | . OP_DIV
  112          | . OP_MOD
  113          | . OP_POWER
  114          | . OP_EQ
  115          | . OP_INEQ
  116          | . OP_LESS
  117          | . OP_EQLESS
  118          | . OP_MORE
  119          | . OP_EQMORE
  120          | . OP_ASSIGN
  121          | . OP_PLUSEQ
  122          | . OP_MINUSEQ
  123          | . OP_MULEQ
  124          | . OP_DIVEQ
  125          | . OP_MODEQ

    TK_STRING   shift, and go to state 23
    TK_IDENT    shift, and go to state 1
    TK_INT      shift, and go to state 24
    TK_REAL     shift, and go to state 25
    KW_HASH     shift, and go to state 2
    KW_FALSE    shift, and go to state 27
    KW_TRUE     shift, and go to state 32
    OP_PLUS     shift, and go to state 33
    OP_MINUS    shift, and go to state 34
    OP_MUL      shift, and go to state 35
    OP_DIV      shift, and go to state 36
    OP_MOD      shift, and go to state 37
    OP_POWER    shift, and go to state 38
    OP_EQ       shift, and go to state 39
    OP_INEQ     shift, and go to state 40
    OP_LESS     shift, and go to state 41
    OP_EQLESS   shift, and go to state 42
    OP_MORE     shift, and go to state 43
    OP_EQMORE   shift, and go to state 44
    OP_ASSIGN   shift, and go to state 45
    OP_PLUSEQ   shift, and go to state 46
    OP_MINUSEQ  shift, and go to state 47
    OP_MULEQ    shift, and go to state 48
    OP_DIVEQ    shift, and go to state 49
    OP_MODEQ    shift, and go to state 50
    OP_POINTER  shift, and go to state 51
    OP_PAR_L    shift, and go to state 52
    OP_SEMI     shift, and go to state 53
    OP_BRA_L    shift, and go to state 54

    OP_PLUS     [reduce using rule 59 (expr)]
    OP_MINUS    [reduce using rule 59 (expr)]
    OP_MUL      [reduce using rule 59 (expr)]
    OP_DIV      [reduce using rule 59 (expr)]
    OP_MOD      [reduce using rule 59 (expr)]
    OP_EQ       [reduce using rule 59 (expr)]
    OP_INEQ     [reduce using rule 59 (expr)]
    OP_LESS     [reduce using rule 59 (expr)]
    OP_EQLESS   [reduce using rule 59 (expr)]
    OP_MORE     [reduce using rule 59 (expr)]
    OP_EQMORE   [reduce using rule 59 (expr)]
    OP_ASSIGN   [reduce using rule 59 (expr)]
    OP_PLUSEQ   [reduce using rule 59 (expr)]
    OP_MINUSEQ  [reduce using rule 59 (expr)]
    OP_MULEQ    [reduce using rule 59 (expr)]
    OP_DIVEQ    [reduce using rule 59 (expr)]
    OP_MODEQ    [reduce using rule 59 (expr)]
    OP_SEMI     [reduce using rule 59 (expr)]
    OP_BRA_L    [reduce using rule 59 (expr)]
    $default    reduce using rule 59 (expr)

    variable_types  go to state 82
    expr            go to state 170
    operators       go to state 63


State 95

   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   59 expr: . %empty  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_PAR_R, OP_SEMI, OP_COMA, OP_BRA_L, OP_BRA_R, OP_DOT, OP_MEAN]
   60     | . TK_STRING
   61     | . TK_INT
   62     | . TK_REAL
   63     | . KW_TRUE
   64     | . KW_FALSE
   65     | . variable_types OP_PAR_L OP_PAR_R
   66     | . variable_types OP_PAR_L expr OP_PAR_R
   67     | . operators expr
   68     | . variable_types
   69     | . variable_types OP_BRA_L legal_array_index OP_BRA_R
   70     | . variable_types OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | . variable_types OP_BRA_L variable_types OP_BRA_R
   72     | . OP_POINTER expr
   73     | . expr OP_COMA expr
   74     | . expr OP_DOT expr
   75     | . expr OP_PLUS expr
   76     | . expr OP_MINUS expr
   77     | . expr OP_MUL expr
   78     | . expr OP_DIV expr
   79     | . expr OP_MOD expr
   80     | . expr OP_EQ expr
   81     | . expr OP_INEQ expr
   82     | . expr OP_LESS expr
   83     | . expr OP_EQLESS expr
   84     | . expr OP_MORE expr
   85     | . expr OP_EQMORE expr
   86     | . expr OP_ASSIGN expr
   87     | . expr KW_AND expr
   87     | expr KW_AND . expr
   88     | . expr KW_OR expr
   89     | . expr KW_NOT expr
   90     | . expr OP_PLUSEQ expr
   91     | . expr OP_MINUSEQ expr
   92     | . expr OP_MULEQ expr
   93     | . expr OP_DIVEQ expr
   94     | . expr OP_MODEQ expr
   95     | . OP_PAR_L expr OP_PAR_R
   96     | . OP_BRA_L expr OP_BRA_L
   97     | . OP_SEMI
  108 operators: . OP_PLUS
  109          | . OP_MINUS
  110          | . OP_MUL
  111          | . OP_DIV
  112          | . OP_MOD
  113          | . OP_POWER
  114          | . OP_EQ
  115          | . OP_INEQ
  116          | . OP_LESS
  117          | . OP_EQLESS
  118          | . OP_MORE
  119          | . OP_EQMORE
  120          | . OP_ASSIGN
  121          | . OP_PLUSEQ
  122          | . OP_MINUSEQ
  123          | . OP_MULEQ
  124          | . OP_DIVEQ
  125          | . OP_MODEQ

    TK_STRING   shift, and go to state 23
    TK_IDENT    shift, and go to state 1
    TK_INT      shift, and go to state 24
    TK_REAL     shift, and go to state 25
    KW_HASH     shift, and go to state 2
    KW_FALSE    shift, and go to state 27
    KW_TRUE     shift, and go to state 32
    OP_PLUS     shift, and go to state 33
    OP_MINUS    shift, and go to state 34
    OP_MUL      shift, and go to state 35
    OP_DIV      shift, and go to state 36
    OP_MOD      shift, and go to state 37
    OP_POWER    shift, and go to state 38
    OP_EQ       shift, and go to state 39
    OP_INEQ     shift, and go to state 40
    OP_LESS     shift, and go to state 41
    OP_EQLESS   shift, and go to state 42
    OP_MORE     shift, and go to state 43
    OP_EQMORE   shift, and go to state 44
    OP_ASSIGN   shift, and go to state 45
    OP_PLUSEQ   shift, and go to state 46
    OP_MINUSEQ  shift, and go to state 47
    OP_MULEQ    shift, and go to state 48
    OP_DIVEQ    shift, and go to state 49
    OP_MODEQ    shift, and go to state 50
    OP_POINTER  shift, and go to state 51
    OP_PAR_L    shift, and go to state 52
    OP_SEMI     shift, and go to state 53
    OP_BRA_L    shift, and go to state 54

    OP_PLUS     [reduce using rule 59 (expr)]
    OP_MINUS    [reduce using rule 59 (expr)]
    OP_MUL      [reduce using rule 59 (expr)]
    OP_DIV      [reduce using rule 59 (expr)]
    OP_MOD      [reduce using rule 59 (expr)]
    OP_EQ       [reduce using rule 59 (expr)]
    OP_INEQ     [reduce using rule 59 (expr)]
    OP_LESS     [reduce using rule 59 (expr)]
    OP_EQLESS   [reduce using rule 59 (expr)]
    OP_MORE     [reduce using rule 59 (expr)]
    OP_EQMORE   [reduce using rule 59 (expr)]
    OP_ASSIGN   [reduce using rule 59 (expr)]
    OP_PLUSEQ   [reduce using rule 59 (expr)]
    OP_MINUSEQ  [reduce using rule 59 (expr)]
    OP_MULEQ    [reduce using rule 59 (expr)]
    OP_DIVEQ    [reduce using rule 59 (expr)]
    OP_MODEQ    [reduce using rule 59 (expr)]
    OP_SEMI     [reduce using rule 59 (expr)]
    OP_BRA_L    [reduce using rule 59 (expr)]
    $default    reduce using rule 59 (expr)

    variable_types  go to state 82
    expr            go to state 171
    operators       go to state 63


State 96

   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   59 expr: . %empty  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_PAR_R, OP_SEMI, OP_COMA, OP_BRA_L, OP_BRA_R, OP_DOT, OP_MEAN]
   60     | . TK_STRING
   61     | . TK_INT
   62     | . TK_REAL
   63     | . KW_TRUE
   64     | . KW_FALSE
   65     | . variable_types OP_PAR_L OP_PAR_R
   66     | . variable_types OP_PAR_L expr OP_PAR_R
   67     | . operators expr
   68     | . variable_types
   69     | . variable_types OP_BRA_L legal_array_index OP_BRA_R
   70     | . variable_types OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | . variable_types OP_BRA_L variable_types OP_BRA_R
   72     | . OP_POINTER expr
   73     | . expr OP_COMA expr
   74     | . expr OP_DOT expr
   75     | . expr OP_PLUS expr
   76     | . expr OP_MINUS expr
   77     | . expr OP_MUL expr
   78     | . expr OP_DIV expr
   79     | . expr OP_MOD expr
   80     | . expr OP_EQ expr
   81     | . expr OP_INEQ expr
   82     | . expr OP_LESS expr
   83     | . expr OP_EQLESS expr
   84     | . expr OP_MORE expr
   85     | . expr OP_EQMORE expr
   86     | . expr OP_ASSIGN expr
   87     | . expr KW_AND expr
   88     | . expr KW_OR expr
   88     | expr KW_OR . expr
   89     | . expr KW_NOT expr
   90     | . expr OP_PLUSEQ expr
   91     | . expr OP_MINUSEQ expr
   92     | . expr OP_MULEQ expr
   93     | . expr OP_DIVEQ expr
   94     | . expr OP_MODEQ expr
   95     | . OP_PAR_L expr OP_PAR_R
   96     | . OP_BRA_L expr OP_BRA_L
   97     | . OP_SEMI
  108 operators: . OP_PLUS
  109          | . OP_MINUS
  110          | . OP_MUL
  111          | . OP_DIV
  112          | . OP_MOD
  113          | . OP_POWER
  114          | . OP_EQ
  115          | . OP_INEQ
  116          | . OP_LESS
  117          | . OP_EQLESS
  118          | . OP_MORE
  119          | . OP_EQMORE
  120          | . OP_ASSIGN
  121          | . OP_PLUSEQ
  122          | . OP_MINUSEQ
  123          | . OP_MULEQ
  124          | . OP_DIVEQ
  125          | . OP_MODEQ

    TK_STRING   shift, and go to state 23
    TK_IDENT    shift, and go to state 1
    TK_INT      shift, and go to state 24
    TK_REAL     shift, and go to state 25
    KW_HASH     shift, and go to state 2
    KW_FALSE    shift, and go to state 27
    KW_TRUE     shift, and go to state 32
    OP_PLUS     shift, and go to state 33
    OP_MINUS    shift, and go to state 34
    OP_MUL      shift, and go to state 35
    OP_DIV      shift, and go to state 36
    OP_MOD      shift, and go to state 37
    OP_POWER    shift, and go to state 38
    OP_EQ       shift, and go to state 39
    OP_INEQ     shift, and go to state 40
    OP_LESS     shift, and go to state 41
    OP_EQLESS   shift, and go to state 42
    OP_MORE     shift, and go to state 43
    OP_EQMORE   shift, and go to state 44
    OP_ASSIGN   shift, and go to state 45
    OP_PLUSEQ   shift, and go to state 46
    OP_MINUSEQ  shift, and go to state 47
    OP_MULEQ    shift, and go to state 48
    OP_DIVEQ    shift, and go to state 49
    OP_MODEQ    shift, and go to state 50
    OP_POINTER  shift, and go to state 51
    OP_PAR_L    shift, and go to state 52
    OP_SEMI     shift, and go to state 53
    OP_BRA_L    shift, and go to state 54

    OP_PLUS     [reduce using rule 59 (expr)]
    OP_MINUS    [reduce using rule 59 (expr)]
    OP_MUL      [reduce using rule 59 (expr)]
    OP_DIV      [reduce using rule 59 (expr)]
    OP_MOD      [reduce using rule 59 (expr)]
    OP_EQ       [reduce using rule 59 (expr)]
    OP_INEQ     [reduce using rule 59 (expr)]
    OP_LESS     [reduce using rule 59 (expr)]
    OP_EQLESS   [reduce using rule 59 (expr)]
    OP_MORE     [reduce using rule 59 (expr)]
    OP_EQMORE   [reduce using rule 59 (expr)]
    OP_ASSIGN   [reduce using rule 59 (expr)]
    OP_PLUSEQ   [reduce using rule 59 (expr)]
    OP_MINUSEQ  [reduce using rule 59 (expr)]
    OP_MULEQ    [reduce using rule 59 (expr)]
    OP_DIVEQ    [reduce using rule 59 (expr)]
    OP_MODEQ    [reduce using rule 59 (expr)]
    OP_SEMI     [reduce using rule 59 (expr)]
    OP_BRA_L    [reduce using rule 59 (expr)]
    $default    reduce using rule 59 (expr)

    variable_types  go to state 82
    expr            go to state 172
    operators       go to state 63


State 97

   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   59 expr: . %empty  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_PAR_R, OP_SEMI, OP_COMA, OP_BRA_L, OP_BRA_R, OP_DOT, OP_MEAN]
   60     | . TK_STRING
   61     | . TK_INT
   62     | . TK_REAL
   63     | . KW_TRUE
   64     | . KW_FALSE
   65     | . variable_types OP_PAR_L OP_PAR_R
   66     | . variable_types OP_PAR_L expr OP_PAR_R
   67     | . operators expr
   68     | . variable_types
   69     | . variable_types OP_BRA_L legal_array_index OP_BRA_R
   70     | . variable_types OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | . variable_types OP_BRA_L variable_types OP_BRA_R
   72     | . OP_POINTER expr
   73     | . expr OP_COMA expr
   74     | . expr OP_DOT expr
   75     | . expr OP_PLUS expr
   75     | expr OP_PLUS . expr
   76     | . expr OP_MINUS expr
   77     | . expr OP_MUL expr
   78     | . expr OP_DIV expr
   79     | . expr OP_MOD expr
   80     | . expr OP_EQ expr
   81     | . expr OP_INEQ expr
   82     | . expr OP_LESS expr
   83     | . expr OP_EQLESS expr
   84     | . expr OP_MORE expr
   85     | . expr OP_EQMORE expr
   86     | . expr OP_ASSIGN expr
   87     | . expr KW_AND expr
   88     | . expr KW_OR expr
   89     | . expr KW_NOT expr
   90     | . expr OP_PLUSEQ expr
   91     | . expr OP_MINUSEQ expr
   92     | . expr OP_MULEQ expr
   93     | . expr OP_DIVEQ expr
   94     | . expr OP_MODEQ expr
   95     | . OP_PAR_L expr OP_PAR_R
   96     | . OP_BRA_L expr OP_BRA_L
   97     | . OP_SEMI
  108 operators: . OP_PLUS
  109          | . OP_MINUS
  110          | . OP_MUL
  111          | . OP_DIV
  112          | . OP_MOD
  113          | . OP_POWER
  114          | . OP_EQ
  115          | . OP_INEQ
  116          | . OP_LESS
  117          | . OP_EQLESS
  118          | . OP_MORE
  119          | . OP_EQMORE
  120          | . OP_ASSIGN
  121          | . OP_PLUSEQ
  122          | . OP_MINUSEQ
  123          | . OP_MULEQ
  124          | . OP_DIVEQ
  125          | . OP_MODEQ

    TK_STRING   shift, and go to state 23
    TK_IDENT    shift, and go to state 1
    TK_INT      shift, and go to state 24
    TK_REAL     shift, and go to state 25
    KW_HASH     shift, and go to state 2
    KW_FALSE    shift, and go to state 27
    KW_TRUE     shift, and go to state 32
    OP_PLUS     shift, and go to state 33
    OP_MINUS    shift, and go to state 34
    OP_MUL      shift, and go to state 35
    OP_DIV      shift, and go to state 36
    OP_MOD      shift, and go to state 37
    OP_POWER    shift, and go to state 38
    OP_EQ       shift, and go to state 39
    OP_INEQ     shift, and go to state 40
    OP_LESS     shift, and go to state 41
    OP_EQLESS   shift, and go to state 42
    OP_MORE     shift, and go to state 43
    OP_EQMORE   shift, and go to state 44
    OP_ASSIGN   shift, and go to state 45
    OP_PLUSEQ   shift, and go to state 46
    OP_MINUSEQ  shift, and go to state 47
    OP_MULEQ    shift, and go to state 48
    OP_DIVEQ    shift, and go to state 49
    OP_MODEQ    shift, and go to state 50
    OP_POINTER  shift, and go to state 51
    OP_PAR_L    shift, and go to state 52
    OP_SEMI     shift, and go to state 53
    OP_BRA_L    shift, and go to state 54

    OP_PLUS     [reduce using rule 59 (expr)]
    OP_MINUS    [reduce using rule 59 (expr)]
    OP_MUL      [reduce using rule 59 (expr)]
    OP_DIV      [reduce using rule 59 (expr)]
    OP_MOD      [reduce using rule 59 (expr)]
    OP_EQ       [reduce using rule 59 (expr)]
    OP_INEQ     [reduce using rule 59 (expr)]
    OP_LESS     [reduce using rule 59 (expr)]
    OP_EQLESS   [reduce using rule 59 (expr)]
    OP_MORE     [reduce using rule 59 (expr)]
    OP_EQMORE   [reduce using rule 59 (expr)]
    OP_ASSIGN   [reduce using rule 59 (expr)]
    OP_PLUSEQ   [reduce using rule 59 (expr)]
    OP_MINUSEQ  [reduce using rule 59 (expr)]
    OP_MULEQ    [reduce using rule 59 (expr)]
    OP_DIVEQ    [reduce using rule 59 (expr)]
    OP_MODEQ    [reduce using rule 59 (expr)]
    OP_SEMI     [reduce using rule 59 (expr)]
    OP_BRA_L    [reduce using rule 59 (expr)]
    $default    reduce using rule 59 (expr)

    variable_types  go to state 82
    expr            go to state 173
    operators       go to state 63


State 98

   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   59 expr: . %empty  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_PAR_R, OP_SEMI, OP_COMA, OP_BRA_L, OP_BRA_R, OP_DOT, OP_MEAN]
   60     | . TK_STRING
   61     | . TK_INT
   62     | . TK_REAL
   63     | . KW_TRUE
   64     | . KW_FALSE
   65     | . variable_types OP_PAR_L OP_PAR_R
   66     | . variable_types OP_PAR_L expr OP_PAR_R
   67     | . operators expr
   68     | . variable_types
   69     | . variable_types OP_BRA_L legal_array_index OP_BRA_R
   70     | . variable_types OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | . variable_types OP_BRA_L variable_types OP_BRA_R
   72     | . OP_POINTER expr
   73     | . expr OP_COMA expr
   74     | . expr OP_DOT expr
   75     | . expr OP_PLUS expr
   76     | . expr OP_MINUS expr
   76     | expr OP_MINUS . expr
   77     | . expr OP_MUL expr
   78     | . expr OP_DIV expr
   79     | . expr OP_MOD expr
   80     | . expr OP_EQ expr
   81     | . expr OP_INEQ expr
   82     | . expr OP_LESS expr
   83     | . expr OP_EQLESS expr
   84     | . expr OP_MORE expr
   85     | . expr OP_EQMORE expr
   86     | . expr OP_ASSIGN expr
   87     | . expr KW_AND expr
   88     | . expr KW_OR expr
   89     | . expr KW_NOT expr
   90     | . expr OP_PLUSEQ expr
   91     | . expr OP_MINUSEQ expr
   92     | . expr OP_MULEQ expr
   93     | . expr OP_DIVEQ expr
   94     | . expr OP_MODEQ expr
   95     | . OP_PAR_L expr OP_PAR_R
   96     | . OP_BRA_L expr OP_BRA_L
   97     | . OP_SEMI
  108 operators: . OP_PLUS
  109          | . OP_MINUS
  110          | . OP_MUL
  111          | . OP_DIV
  112          | . OP_MOD
  113          | . OP_POWER
  114          | . OP_EQ
  115          | . OP_INEQ
  116          | . OP_LESS
  117          | . OP_EQLESS
  118          | . OP_MORE
  119          | . OP_EQMORE
  120          | . OP_ASSIGN
  121          | . OP_PLUSEQ
  122          | . OP_MINUSEQ
  123          | . OP_MULEQ
  124          | . OP_DIVEQ
  125          | . OP_MODEQ

    TK_STRING   shift, and go to state 23
    TK_IDENT    shift, and go to state 1
    TK_INT      shift, and go to state 24
    TK_REAL     shift, and go to state 25
    KW_HASH     shift, and go to state 2
    KW_FALSE    shift, and go to state 27
    KW_TRUE     shift, and go to state 32
    OP_PLUS     shift, and go to state 33
    OP_MINUS    shift, and go to state 34
    OP_MUL      shift, and go to state 35
    OP_DIV      shift, and go to state 36
    OP_MOD      shift, and go to state 37
    OP_POWER    shift, and go to state 38
    OP_EQ       shift, and go to state 39
    OP_INEQ     shift, and go to state 40
    OP_LESS     shift, and go to state 41
    OP_EQLESS   shift, and go to state 42
    OP_MORE     shift, and go to state 43
    OP_EQMORE   shift, and go to state 44
    OP_ASSIGN   shift, and go to state 45
    OP_PLUSEQ   shift, and go to state 46
    OP_MINUSEQ  shift, and go to state 47
    OP_MULEQ    shift, and go to state 48
    OP_DIVEQ    shift, and go to state 49
    OP_MODEQ    shift, and go to state 50
    OP_POINTER  shift, and go to state 51
    OP_PAR_L    shift, and go to state 52
    OP_SEMI     shift, and go to state 53
    OP_BRA_L    shift, and go to state 54

    OP_PLUS     [reduce using rule 59 (expr)]
    OP_MINUS    [reduce using rule 59 (expr)]
    OP_MUL      [reduce using rule 59 (expr)]
    OP_DIV      [reduce using rule 59 (expr)]
    OP_MOD      [reduce using rule 59 (expr)]
    OP_EQ       [reduce using rule 59 (expr)]
    OP_INEQ     [reduce using rule 59 (expr)]
    OP_LESS     [reduce using rule 59 (expr)]
    OP_EQLESS   [reduce using rule 59 (expr)]
    OP_MORE     [reduce using rule 59 (expr)]
    OP_EQMORE   [reduce using rule 59 (expr)]
    OP_ASSIGN   [reduce using rule 59 (expr)]
    OP_PLUSEQ   [reduce using rule 59 (expr)]
    OP_MINUSEQ  [reduce using rule 59 (expr)]
    OP_MULEQ    [reduce using rule 59 (expr)]
    OP_DIVEQ    [reduce using rule 59 (expr)]
    OP_MODEQ    [reduce using rule 59 (expr)]
    OP_SEMI     [reduce using rule 59 (expr)]
    OP_BRA_L    [reduce using rule 59 (expr)]
    $default    reduce using rule 59 (expr)

    variable_types  go to state 82
    expr            go to state 174
    operators       go to state 63


State 99

   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   59 expr: . %empty  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_PAR_R, OP_SEMI, OP_COMA, OP_BRA_L, OP_BRA_R, OP_DOT, OP_MEAN]
   60     | . TK_STRING
   61     | . TK_INT
   62     | . TK_REAL
   63     | . KW_TRUE
   64     | . KW_FALSE
   65     | . variable_types OP_PAR_L OP_PAR_R
   66     | . variable_types OP_PAR_L expr OP_PAR_R
   67     | . operators expr
   68     | . variable_types
   69     | . variable_types OP_BRA_L legal_array_index OP_BRA_R
   70     | . variable_types OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | . variable_types OP_BRA_L variable_types OP_BRA_R
   72     | . OP_POINTER expr
   73     | . expr OP_COMA expr
   74     | . expr OP_DOT expr
   75     | . expr OP_PLUS expr
   76     | . expr OP_MINUS expr
   77     | . expr OP_MUL expr
   77     | expr OP_MUL . expr
   78     | . expr OP_DIV expr
   79     | . expr OP_MOD expr
   80     | . expr OP_EQ expr
   81     | . expr OP_INEQ expr
   82     | . expr OP_LESS expr
   83     | . expr OP_EQLESS expr
   84     | . expr OP_MORE expr
   85     | . expr OP_EQMORE expr
   86     | . expr OP_ASSIGN expr
   87     | . expr KW_AND expr
   88     | . expr KW_OR expr
   89     | . expr KW_NOT expr
   90     | . expr OP_PLUSEQ expr
   91     | . expr OP_MINUSEQ expr
   92     | . expr OP_MULEQ expr
   93     | . expr OP_DIVEQ expr
   94     | . expr OP_MODEQ expr
   95     | . OP_PAR_L expr OP_PAR_R
   96     | . OP_BRA_L expr OP_BRA_L
   97     | . OP_SEMI
  108 operators: . OP_PLUS
  109          | . OP_MINUS
  110          | . OP_MUL
  111          | . OP_DIV
  112          | . OP_MOD
  113          | . OP_POWER
  114          | . OP_EQ
  115          | . OP_INEQ
  116          | . OP_LESS
  117          | . OP_EQLESS
  118          | . OP_MORE
  119          | . OP_EQMORE
  120          | . OP_ASSIGN
  121          | . OP_PLUSEQ
  122          | . OP_MINUSEQ
  123          | . OP_MULEQ
  124          | . OP_DIVEQ
  125          | . OP_MODEQ

    TK_STRING   shift, and go to state 23
    TK_IDENT    shift, and go to state 1
    TK_INT      shift, and go to state 24
    TK_REAL     shift, and go to state 25
    KW_HASH     shift, and go to state 2
    KW_FALSE    shift, and go to state 27
    KW_TRUE     shift, and go to state 32
    OP_PLUS     shift, and go to state 33
    OP_MINUS    shift, and go to state 34
    OP_MUL      shift, and go to state 35
    OP_DIV      shift, and go to state 36
    OP_MOD      shift, and go to state 37
    OP_POWER    shift, and go to state 38
    OP_EQ       shift, and go to state 39
    OP_INEQ     shift, and go to state 40
    OP_LESS     shift, and go to state 41
    OP_EQLESS   shift, and go to state 42
    OP_MORE     shift, and go to state 43
    OP_EQMORE   shift, and go to state 44
    OP_ASSIGN   shift, and go to state 45
    OP_PLUSEQ   shift, and go to state 46
    OP_MINUSEQ  shift, and go to state 47
    OP_MULEQ    shift, and go to state 48
    OP_DIVEQ    shift, and go to state 49
    OP_MODEQ    shift, and go to state 50
    OP_POINTER  shift, and go to state 51
    OP_PAR_L    shift, and go to state 52
    OP_SEMI     shift, and go to state 53
    OP_BRA_L    shift, and go to state 54

    OP_PLUS     [reduce using rule 59 (expr)]
    OP_MINUS    [reduce using rule 59 (expr)]
    OP_MUL      [reduce using rule 59 (expr)]
    OP_DIV      [reduce using rule 59 (expr)]
    OP_MOD      [reduce using rule 59 (expr)]
    OP_EQ       [reduce using rule 59 (expr)]
    OP_INEQ     [reduce using rule 59 (expr)]
    OP_LESS     [reduce using rule 59 (expr)]
    OP_EQLESS   [reduce using rule 59 (expr)]
    OP_MORE     [reduce using rule 59 (expr)]
    OP_EQMORE   [reduce using rule 59 (expr)]
    OP_ASSIGN   [reduce using rule 59 (expr)]
    OP_PLUSEQ   [reduce using rule 59 (expr)]
    OP_MINUSEQ  [reduce using rule 59 (expr)]
    OP_MULEQ    [reduce using rule 59 (expr)]
    OP_DIVEQ    [reduce using rule 59 (expr)]
    OP_MODEQ    [reduce using rule 59 (expr)]
    OP_SEMI     [reduce using rule 59 (expr)]
    OP_BRA_L    [reduce using rule 59 (expr)]
    $default    reduce using rule 59 (expr)

    variable_types  go to state 82
    expr            go to state 175
    operators       go to state 63


State 100

   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   59 expr: . %empty  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_PAR_R, OP_SEMI, OP_COMA, OP_BRA_L, OP_BRA_R, OP_DOT, OP_MEAN]
   60     | . TK_STRING
   61     | . TK_INT
   62     | . TK_REAL
   63     | . KW_TRUE
   64     | . KW_FALSE
   65     | . variable_types OP_PAR_L OP_PAR_R
   66     | . variable_types OP_PAR_L expr OP_PAR_R
   67     | . operators expr
   68     | . variable_types
   69     | . variable_types OP_BRA_L legal_array_index OP_BRA_R
   70     | . variable_types OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | . variable_types OP_BRA_L variable_types OP_BRA_R
   72     | . OP_POINTER expr
   73     | . expr OP_COMA expr
   74     | . expr OP_DOT expr
   75     | . expr OP_PLUS expr
   76     | . expr OP_MINUS expr
   77     | . expr OP_MUL expr
   78     | . expr OP_DIV expr
   78     | expr OP_DIV . expr
   79     | . expr OP_MOD expr
   80     | . expr OP_EQ expr
   81     | . expr OP_INEQ expr
   82     | . expr OP_LESS expr
   83     | . expr OP_EQLESS expr
   84     | . expr OP_MORE expr
   85     | . expr OP_EQMORE expr
   86     | . expr OP_ASSIGN expr
   87     | . expr KW_AND expr
   88     | . expr KW_OR expr
   89     | . expr KW_NOT expr
   90     | . expr OP_PLUSEQ expr
   91     | . expr OP_MINUSEQ expr
   92     | . expr OP_MULEQ expr
   93     | . expr OP_DIVEQ expr
   94     | . expr OP_MODEQ expr
   95     | . OP_PAR_L expr OP_PAR_R
   96     | . OP_BRA_L expr OP_BRA_L
   97     | . OP_SEMI
  108 operators: . OP_PLUS
  109          | . OP_MINUS
  110          | . OP_MUL
  111          | . OP_DIV
  112          | . OP_MOD
  113          | . OP_POWER
  114          | . OP_EQ
  115          | . OP_INEQ
  116          | . OP_LESS
  117          | . OP_EQLESS
  118          | . OP_MORE
  119          | . OP_EQMORE
  120          | . OP_ASSIGN
  121          | . OP_PLUSEQ
  122          | . OP_MINUSEQ
  123          | . OP_MULEQ
  124          | . OP_DIVEQ
  125          | . OP_MODEQ

    TK_STRING   shift, and go to state 23
    TK_IDENT    shift, and go to state 1
    TK_INT      shift, and go to state 24
    TK_REAL     shift, and go to state 25
    KW_HASH     shift, and go to state 2
    KW_FALSE    shift, and go to state 27
    KW_TRUE     shift, and go to state 32
    OP_PLUS     shift, and go to state 33
    OP_MINUS    shift, and go to state 34
    OP_MUL      shift, and go to state 35
    OP_DIV      shift, and go to state 36
    OP_MOD      shift, and go to state 37
    OP_POWER    shift, and go to state 38
    OP_EQ       shift, and go to state 39
    OP_INEQ     shift, and go to state 40
    OP_LESS     shift, and go to state 41
    OP_EQLESS   shift, and go to state 42
    OP_MORE     shift, and go to state 43
    OP_EQMORE   shift, and go to state 44
    OP_ASSIGN   shift, and go to state 45
    OP_PLUSEQ   shift, and go to state 46
    OP_MINUSEQ  shift, and go to state 47
    OP_MULEQ    shift, and go to state 48
    OP_DIVEQ    shift, and go to state 49
    OP_MODEQ    shift, and go to state 50
    OP_POINTER  shift, and go to state 51
    OP_PAR_L    shift, and go to state 52
    OP_SEMI     shift, and go to state 53
    OP_BRA_L    shift, and go to state 54

    OP_PLUS     [reduce using rule 59 (expr)]
    OP_MINUS    [reduce using rule 59 (expr)]
    OP_MUL      [reduce using rule 59 (expr)]
    OP_DIV      [reduce using rule 59 (expr)]
    OP_MOD      [reduce using rule 59 (expr)]
    OP_EQ       [reduce using rule 59 (expr)]
    OP_INEQ     [reduce using rule 59 (expr)]
    OP_LESS     [reduce using rule 59 (expr)]
    OP_EQLESS   [reduce using rule 59 (expr)]
    OP_MORE     [reduce using rule 59 (expr)]
    OP_EQMORE   [reduce using rule 59 (expr)]
    OP_ASSIGN   [reduce using rule 59 (expr)]
    OP_PLUSEQ   [reduce using rule 59 (expr)]
    OP_MINUSEQ  [reduce using rule 59 (expr)]
    OP_MULEQ    [reduce using rule 59 (expr)]
    OP_DIVEQ    [reduce using rule 59 (expr)]
    OP_MODEQ    [reduce using rule 59 (expr)]
    OP_SEMI     [reduce using rule 59 (expr)]
    OP_BRA_L    [reduce using rule 59 (expr)]
    $default    reduce using rule 59 (expr)

    variable_types  go to state 82
    expr            go to state 176
    operators       go to state 63


State 101

   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   59 expr: . %empty  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_PAR_R, OP_SEMI, OP_COMA, OP_BRA_L, OP_BRA_R, OP_DOT, OP_MEAN]
   60     | . TK_STRING
   61     | . TK_INT
   62     | . TK_REAL
   63     | . KW_TRUE
   64     | . KW_FALSE
   65     | . variable_types OP_PAR_L OP_PAR_R
   66     | . variable_types OP_PAR_L expr OP_PAR_R
   67     | . operators expr
   68     | . variable_types
   69     | . variable_types OP_BRA_L legal_array_index OP_BRA_R
   70     | . variable_types OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | . variable_types OP_BRA_L variable_types OP_BRA_R
   72     | . OP_POINTER expr
   73     | . expr OP_COMA expr
   74     | . expr OP_DOT expr
   75     | . expr OP_PLUS expr
   76     | . expr OP_MINUS expr
   77     | . expr OP_MUL expr
   78     | . expr OP_DIV expr
   79     | . expr OP_MOD expr
   79     | expr OP_MOD . expr
   80     | . expr OP_EQ expr
   81     | . expr OP_INEQ expr
   82     | . expr OP_LESS expr
   83     | . expr OP_EQLESS expr
   84     | . expr OP_MORE expr
   85     | . expr OP_EQMORE expr
   86     | . expr OP_ASSIGN expr
   87     | . expr KW_AND expr
   88     | . expr KW_OR expr
   89     | . expr KW_NOT expr
   90     | . expr OP_PLUSEQ expr
   91     | . expr OP_MINUSEQ expr
   92     | . expr OP_MULEQ expr
   93     | . expr OP_DIVEQ expr
   94     | . expr OP_MODEQ expr
   95     | . OP_PAR_L expr OP_PAR_R
   96     | . OP_BRA_L expr OP_BRA_L
   97     | . OP_SEMI
  108 operators: . OP_PLUS
  109          | . OP_MINUS
  110          | . OP_MUL
  111          | . OP_DIV
  112          | . OP_MOD
  113          | . OP_POWER
  114          | . OP_EQ
  115          | . OP_INEQ
  116          | . OP_LESS
  117          | . OP_EQLESS
  118          | . OP_MORE
  119          | . OP_EQMORE
  120          | . OP_ASSIGN
  121          | . OP_PLUSEQ
  122          | . OP_MINUSEQ
  123          | . OP_MULEQ
  124          | . OP_DIVEQ
  125          | . OP_MODEQ

    TK_STRING   shift, and go to state 23
    TK_IDENT    shift, and go to state 1
    TK_INT      shift, and go to state 24
    TK_REAL     shift, and go to state 25
    KW_HASH     shift, and go to state 2
    KW_FALSE    shift, and go to state 27
    KW_TRUE     shift, and go to state 32
    OP_PLUS     shift, and go to state 33
    OP_MINUS    shift, and go to state 34
    OP_MUL      shift, and go to state 35
    OP_DIV      shift, and go to state 36
    OP_MOD      shift, and go to state 37
    OP_POWER    shift, and go to state 38
    OP_EQ       shift, and go to state 39
    OP_INEQ     shift, and go to state 40
    OP_LESS     shift, and go to state 41
    OP_EQLESS   shift, and go to state 42
    OP_MORE     shift, and go to state 43
    OP_EQMORE   shift, and go to state 44
    OP_ASSIGN   shift, and go to state 45
    OP_PLUSEQ   shift, and go to state 46
    OP_MINUSEQ  shift, and go to state 47
    OP_MULEQ    shift, and go to state 48
    OP_DIVEQ    shift, and go to state 49
    OP_MODEQ    shift, and go to state 50
    OP_POINTER  shift, and go to state 51
    OP_PAR_L    shift, and go to state 52
    OP_SEMI     shift, and go to state 53
    OP_BRA_L    shift, and go to state 54

    OP_PLUS     [reduce using rule 59 (expr)]
    OP_MINUS    [reduce using rule 59 (expr)]
    OP_MUL      [reduce using rule 59 (expr)]
    OP_DIV      [reduce using rule 59 (expr)]
    OP_MOD      [reduce using rule 59 (expr)]
    OP_EQ       [reduce using rule 59 (expr)]
    OP_INEQ     [reduce using rule 59 (expr)]
    OP_LESS     [reduce using rule 59 (expr)]
    OP_EQLESS   [reduce using rule 59 (expr)]
    OP_MORE     [reduce using rule 59 (expr)]
    OP_EQMORE   [reduce using rule 59 (expr)]
    OP_ASSIGN   [reduce using rule 59 (expr)]
    OP_PLUSEQ   [reduce using rule 59 (expr)]
    OP_MINUSEQ  [reduce using rule 59 (expr)]
    OP_MULEQ    [reduce using rule 59 (expr)]
    OP_DIVEQ    [reduce using rule 59 (expr)]
    OP_MODEQ    [reduce using rule 59 (expr)]
    OP_SEMI     [reduce using rule 59 (expr)]
    OP_BRA_L    [reduce using rule 59 (expr)]
    $default    reduce using rule 59 (expr)

    variable_types  go to state 82
    expr            go to state 177
    operators       go to state 63


State 102

   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   59 expr: . %empty  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_PAR_R, OP_SEMI, OP_COMA, OP_BRA_L, OP_BRA_R, OP_DOT, OP_MEAN]
   60     | . TK_STRING
   61     | . TK_INT
   62     | . TK_REAL
   63     | . KW_TRUE
   64     | . KW_FALSE
   65     | . variable_types OP_PAR_L OP_PAR_R
   66     | . variable_types OP_PAR_L expr OP_PAR_R
   67     | . operators expr
   68     | . variable_types
   69     | . variable_types OP_BRA_L legal_array_index OP_BRA_R
   70     | . variable_types OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | . variable_types OP_BRA_L variable_types OP_BRA_R
   72     | . OP_POINTER expr
   73     | . expr OP_COMA expr
   74     | . expr OP_DOT expr
   75     | . expr OP_PLUS expr
   76     | . expr OP_MINUS expr
   77     | . expr OP_MUL expr
   78     | . expr OP_DIV expr
   79     | . expr OP_MOD expr
   80     | . expr OP_EQ expr
   80     | expr OP_EQ . expr
   81     | . expr OP_INEQ expr
   82     | . expr OP_LESS expr
   83     | . expr OP_EQLESS expr
   84     | . expr OP_MORE expr
   85     | . expr OP_EQMORE expr
   86     | . expr OP_ASSIGN expr
   87     | . expr KW_AND expr
   88     | . expr KW_OR expr
   89     | . expr KW_NOT expr
   90     | . expr OP_PLUSEQ expr
   91     | . expr OP_MINUSEQ expr
   92     | . expr OP_MULEQ expr
   93     | . expr OP_DIVEQ expr
   94     | . expr OP_MODEQ expr
   95     | . OP_PAR_L expr OP_PAR_R
   96     | . OP_BRA_L expr OP_BRA_L
   97     | . OP_SEMI
  108 operators: . OP_PLUS
  109          | . OP_MINUS
  110          | . OP_MUL
  111          | . OP_DIV
  112          | . OP_MOD
  113          | . OP_POWER
  114          | . OP_EQ
  115          | . OP_INEQ
  116          | . OP_LESS
  117          | . OP_EQLESS
  118          | . OP_MORE
  119          | . OP_EQMORE
  120          | . OP_ASSIGN
  121          | . OP_PLUSEQ
  122          | . OP_MINUSEQ
  123          | . OP_MULEQ
  124          | . OP_DIVEQ
  125          | . OP_MODEQ

    TK_STRING   shift, and go to state 23
    TK_IDENT    shift, and go to state 1
    TK_INT      shift, and go to state 24
    TK_REAL     shift, and go to state 25
    KW_HASH     shift, and go to state 2
    KW_FALSE    shift, and go to state 27
    KW_TRUE     shift, and go to state 32
    OP_PLUS     shift, and go to state 33
    OP_MINUS    shift, and go to state 34
    OP_MUL      shift, and go to state 35
    OP_DIV      shift, and go to state 36
    OP_MOD      shift, and go to state 37
    OP_POWER    shift, and go to state 38
    OP_EQ       shift, and go to state 39
    OP_INEQ     shift, and go to state 40
    OP_LESS     shift, and go to state 41
    OP_EQLESS   shift, and go to state 42
    OP_MORE     shift, and go to state 43
    OP_EQMORE   shift, and go to state 44
    OP_ASSIGN   shift, and go to state 45
    OP_PLUSEQ   shift, and go to state 46
    OP_MINUSEQ  shift, and go to state 47
    OP_MULEQ    shift, and go to state 48
    OP_DIVEQ    shift, and go to state 49
    OP_MODEQ    shift, and go to state 50
    OP_POINTER  shift, and go to state 51
    OP_PAR_L    shift, and go to state 52
    OP_SEMI     shift, and go to state 53
    OP_BRA_L    shift, and go to state 54

    OP_PLUS     [reduce using rule 59 (expr)]
    OP_MINUS    [reduce using rule 59 (expr)]
    OP_MUL      [reduce using rule 59 (expr)]
    OP_DIV      [reduce using rule 59 (expr)]
    OP_MOD      [reduce using rule 59 (expr)]
    OP_EQ       [reduce using rule 59 (expr)]
    OP_INEQ     [reduce using rule 59 (expr)]
    OP_LESS     [reduce using rule 59 (expr)]
    OP_EQLESS   [reduce using rule 59 (expr)]
    OP_MORE     [reduce using rule 59 (expr)]
    OP_EQMORE   [reduce using rule 59 (expr)]
    OP_ASSIGN   [reduce using rule 59 (expr)]
    OP_PLUSEQ   [reduce using rule 59 (expr)]
    OP_MINUSEQ  [reduce using rule 59 (expr)]
    OP_MULEQ    [reduce using rule 59 (expr)]
    OP_DIVEQ    [reduce using rule 59 (expr)]
    OP_MODEQ    [reduce using rule 59 (expr)]
    OP_SEMI     [reduce using rule 59 (expr)]
    OP_BRA_L    [reduce using rule 59 (expr)]
    $default    reduce using rule 59 (expr)

    variable_types  go to state 82
    expr            go to state 178
    operators       go to state 63


State 103

   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   59 expr: . %empty  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_PAR_R, OP_SEMI, OP_COMA, OP_BRA_L, OP_BRA_R, OP_DOT, OP_MEAN]
   60     | . TK_STRING
   61     | . TK_INT
   62     | . TK_REAL
   63     | . KW_TRUE
   64     | . KW_FALSE
   65     | . variable_types OP_PAR_L OP_PAR_R
   66     | . variable_types OP_PAR_L expr OP_PAR_R
   67     | . operators expr
   68     | . variable_types
   69     | . variable_types OP_BRA_L legal_array_index OP_BRA_R
   70     | . variable_types OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | . variable_types OP_BRA_L variable_types OP_BRA_R
   72     | . OP_POINTER expr
   73     | . expr OP_COMA expr
   74     | . expr OP_DOT expr
   75     | . expr OP_PLUS expr
   76     | . expr OP_MINUS expr
   77     | . expr OP_MUL expr
   78     | . expr OP_DIV expr
   79     | . expr OP_MOD expr
   80     | . expr OP_EQ expr
   81     | . expr OP_INEQ expr
   81     | expr OP_INEQ . expr
   82     | . expr OP_LESS expr
   83     | . expr OP_EQLESS expr
   84     | . expr OP_MORE expr
   85     | . expr OP_EQMORE expr
   86     | . expr OP_ASSIGN expr
   87     | . expr KW_AND expr
   88     | . expr KW_OR expr
   89     | . expr KW_NOT expr
   90     | . expr OP_PLUSEQ expr
   91     | . expr OP_MINUSEQ expr
   92     | . expr OP_MULEQ expr
   93     | . expr OP_DIVEQ expr
   94     | . expr OP_MODEQ expr
   95     | . OP_PAR_L expr OP_PAR_R
   96     | . OP_BRA_L expr OP_BRA_L
   97     | . OP_SEMI
  108 operators: . OP_PLUS
  109          | . OP_MINUS
  110          | . OP_MUL
  111          | . OP_DIV
  112          | . OP_MOD
  113          | . OP_POWER
  114          | . OP_EQ
  115          | . OP_INEQ
  116          | . OP_LESS
  117          | . OP_EQLESS
  118          | . OP_MORE
  119          | . OP_EQMORE
  120          | . OP_ASSIGN
  121          | . OP_PLUSEQ
  122          | . OP_MINUSEQ
  123          | . OP_MULEQ
  124          | . OP_DIVEQ
  125          | . OP_MODEQ

    TK_STRING   shift, and go to state 23
    TK_IDENT    shift, and go to state 1
    TK_INT      shift, and go to state 24
    TK_REAL     shift, and go to state 25
    KW_HASH     shift, and go to state 2
    KW_FALSE    shift, and go to state 27
    KW_TRUE     shift, and go to state 32
    OP_PLUS     shift, and go to state 33
    OP_MINUS    shift, and go to state 34
    OP_MUL      shift, and go to state 35
    OP_DIV      shift, and go to state 36
    OP_MOD      shift, and go to state 37
    OP_POWER    shift, and go to state 38
    OP_EQ       shift, and go to state 39
    OP_INEQ     shift, and go to state 40
    OP_LESS     shift, and go to state 41
    OP_EQLESS   shift, and go to state 42
    OP_MORE     shift, and go to state 43
    OP_EQMORE   shift, and go to state 44
    OP_ASSIGN   shift, and go to state 45
    OP_PLUSEQ   shift, and go to state 46
    OP_MINUSEQ  shift, and go to state 47
    OP_MULEQ    shift, and go to state 48
    OP_DIVEQ    shift, and go to state 49
    OP_MODEQ    shift, and go to state 50
    OP_POINTER  shift, and go to state 51
    OP_PAR_L    shift, and go to state 52
    OP_SEMI     shift, and go to state 53
    OP_BRA_L    shift, and go to state 54

    OP_PLUS     [reduce using rule 59 (expr)]
    OP_MINUS    [reduce using rule 59 (expr)]
    OP_MUL      [reduce using rule 59 (expr)]
    OP_DIV      [reduce using rule 59 (expr)]
    OP_MOD      [reduce using rule 59 (expr)]
    OP_EQ       [reduce using rule 59 (expr)]
    OP_INEQ     [reduce using rule 59 (expr)]
    OP_LESS     [reduce using rule 59 (expr)]
    OP_EQLESS   [reduce using rule 59 (expr)]
    OP_MORE     [reduce using rule 59 (expr)]
    OP_EQMORE   [reduce using rule 59 (expr)]
    OP_ASSIGN   [reduce using rule 59 (expr)]
    OP_PLUSEQ   [reduce using rule 59 (expr)]
    OP_MINUSEQ  [reduce using rule 59 (expr)]
    OP_MULEQ    [reduce using rule 59 (expr)]
    OP_DIVEQ    [reduce using rule 59 (expr)]
    OP_MODEQ    [reduce using rule 59 (expr)]
    OP_SEMI     [reduce using rule 59 (expr)]
    OP_BRA_L    [reduce using rule 59 (expr)]
    $default    reduce using rule 59 (expr)

    variable_types  go to state 82
    expr            go to state 179
    operators       go to state 63


State 104

   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   59 expr: . %empty  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_PAR_R, OP_SEMI, OP_COMA, OP_BRA_L, OP_BRA_R, OP_DOT, OP_MEAN]
   60     | . TK_STRING
   61     | . TK_INT
   62     | . TK_REAL
   63     | . KW_TRUE
   64     | . KW_FALSE
   65     | . variable_types OP_PAR_L OP_PAR_R
   66     | . variable_types OP_PAR_L expr OP_PAR_R
   67     | . operators expr
   68     | . variable_types
   69     | . variable_types OP_BRA_L legal_array_index OP_BRA_R
   70     | . variable_types OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | . variable_types OP_BRA_L variable_types OP_BRA_R
   72     | . OP_POINTER expr
   73     | . expr OP_COMA expr
   74     | . expr OP_DOT expr
   75     | . expr OP_PLUS expr
   76     | . expr OP_MINUS expr
   77     | . expr OP_MUL expr
   78     | . expr OP_DIV expr
   79     | . expr OP_MOD expr
   80     | . expr OP_EQ expr
   81     | . expr OP_INEQ expr
   82     | . expr OP_LESS expr
   82     | expr OP_LESS . expr
   83     | . expr OP_EQLESS expr
   84     | . expr OP_MORE expr
   85     | . expr OP_EQMORE expr
   86     | . expr OP_ASSIGN expr
   87     | . expr KW_AND expr
   88     | . expr KW_OR expr
   89     | . expr KW_NOT expr
   90     | . expr OP_PLUSEQ expr
   91     | . expr OP_MINUSEQ expr
   92     | . expr OP_MULEQ expr
   93     | . expr OP_DIVEQ expr
   94     | . expr OP_MODEQ expr
   95     | . OP_PAR_L expr OP_PAR_R
   96     | . OP_BRA_L expr OP_BRA_L
   97     | . OP_SEMI
  108 operators: . OP_PLUS
  109          | . OP_MINUS
  110          | . OP_MUL
  111          | . OP_DIV
  112          | . OP_MOD
  113          | . OP_POWER
  114          | . OP_EQ
  115          | . OP_INEQ
  116          | . OP_LESS
  117          | . OP_EQLESS
  118          | . OP_MORE
  119          | . OP_EQMORE
  120          | . OP_ASSIGN
  121          | . OP_PLUSEQ
  122          | . OP_MINUSEQ
  123          | . OP_MULEQ
  124          | . OP_DIVEQ
  125          | . OP_MODEQ

    TK_STRING   shift, and go to state 23
    TK_IDENT    shift, and go to state 1
    TK_INT      shift, and go to state 24
    TK_REAL     shift, and go to state 25
    KW_HASH     shift, and go to state 2
    KW_FALSE    shift, and go to state 27
    KW_TRUE     shift, and go to state 32
    OP_PLUS     shift, and go to state 33
    OP_MINUS    shift, and go to state 34
    OP_MUL      shift, and go to state 35
    OP_DIV      shift, and go to state 36
    OP_MOD      shift, and go to state 37
    OP_POWER    shift, and go to state 38
    OP_EQ       shift, and go to state 39
    OP_INEQ     shift, and go to state 40
    OP_LESS     shift, and go to state 41
    OP_EQLESS   shift, and go to state 42
    OP_MORE     shift, and go to state 43
    OP_EQMORE   shift, and go to state 44
    OP_ASSIGN   shift, and go to state 45
    OP_PLUSEQ   shift, and go to state 46
    OP_MINUSEQ  shift, and go to state 47
    OP_MULEQ    shift, and go to state 48
    OP_DIVEQ    shift, and go to state 49
    OP_MODEQ    shift, and go to state 50
    OP_POINTER  shift, and go to state 51
    OP_PAR_L    shift, and go to state 52
    OP_SEMI     shift, and go to state 53
    OP_BRA_L    shift, and go to state 54

    OP_PLUS     [reduce using rule 59 (expr)]
    OP_MINUS    [reduce using rule 59 (expr)]
    OP_MUL      [reduce using rule 59 (expr)]
    OP_DIV      [reduce using rule 59 (expr)]
    OP_MOD      [reduce using rule 59 (expr)]
    OP_EQ       [reduce using rule 59 (expr)]
    OP_INEQ     [reduce using rule 59 (expr)]
    OP_LESS     [reduce using rule 59 (expr)]
    OP_EQLESS   [reduce using rule 59 (expr)]
    OP_MORE     [reduce using rule 59 (expr)]
    OP_EQMORE   [reduce using rule 59 (expr)]
    OP_ASSIGN   [reduce using rule 59 (expr)]
    OP_PLUSEQ   [reduce using rule 59 (expr)]
    OP_MINUSEQ  [reduce using rule 59 (expr)]
    OP_MULEQ    [reduce using rule 59 (expr)]
    OP_DIVEQ    [reduce using rule 59 (expr)]
    OP_MODEQ    [reduce using rule 59 (expr)]
    OP_SEMI     [reduce using rule 59 (expr)]
    OP_BRA_L    [reduce using rule 59 (expr)]
    $default    reduce using rule 59 (expr)

    variable_types  go to state 82
    expr            go to state 180
    operators       go to state 63


State 105

   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   59 expr: . %empty  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_PAR_R, OP_SEMI, OP_COMA, OP_BRA_L, OP_BRA_R, OP_DOT, OP_MEAN]
   60     | . TK_STRING
   61     | . TK_INT
   62     | . TK_REAL
   63     | . KW_TRUE
   64     | . KW_FALSE
   65     | . variable_types OP_PAR_L OP_PAR_R
   66     | . variable_types OP_PAR_L expr OP_PAR_R
   67     | . operators expr
   68     | . variable_types
   69     | . variable_types OP_BRA_L legal_array_index OP_BRA_R
   70     | . variable_types OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | . variable_types OP_BRA_L variable_types OP_BRA_R
   72     | . OP_POINTER expr
   73     | . expr OP_COMA expr
   74     | . expr OP_DOT expr
   75     | . expr OP_PLUS expr
   76     | . expr OP_MINUS expr
   77     | . expr OP_MUL expr
   78     | . expr OP_DIV expr
   79     | . expr OP_MOD expr
   80     | . expr OP_EQ expr
   81     | . expr OP_INEQ expr
   82     | . expr OP_LESS expr
   83     | . expr OP_EQLESS expr
   83     | expr OP_EQLESS . expr
   84     | . expr OP_MORE expr
   85     | . expr OP_EQMORE expr
   86     | . expr OP_ASSIGN expr
   87     | . expr KW_AND expr
   88     | . expr KW_OR expr
   89     | . expr KW_NOT expr
   90     | . expr OP_PLUSEQ expr
   91     | . expr OP_MINUSEQ expr
   92     | . expr OP_MULEQ expr
   93     | . expr OP_DIVEQ expr
   94     | . expr OP_MODEQ expr
   95     | . OP_PAR_L expr OP_PAR_R
   96     | . OP_BRA_L expr OP_BRA_L
   97     | . OP_SEMI
  108 operators: . OP_PLUS
  109          | . OP_MINUS
  110          | . OP_MUL
  111          | . OP_DIV
  112          | . OP_MOD
  113          | . OP_POWER
  114          | . OP_EQ
  115          | . OP_INEQ
  116          | . OP_LESS
  117          | . OP_EQLESS
  118          | . OP_MORE
  119          | . OP_EQMORE
  120          | . OP_ASSIGN
  121          | . OP_PLUSEQ
  122          | . OP_MINUSEQ
  123          | . OP_MULEQ
  124          | . OP_DIVEQ
  125          | . OP_MODEQ

    TK_STRING   shift, and go to state 23
    TK_IDENT    shift, and go to state 1
    TK_INT      shift, and go to state 24
    TK_REAL     shift, and go to state 25
    KW_HASH     shift, and go to state 2
    KW_FALSE    shift, and go to state 27
    KW_TRUE     shift, and go to state 32
    OP_PLUS     shift, and go to state 33
    OP_MINUS    shift, and go to state 34
    OP_MUL      shift, and go to state 35
    OP_DIV      shift, and go to state 36
    OP_MOD      shift, and go to state 37
    OP_POWER    shift, and go to state 38
    OP_EQ       shift, and go to state 39
    OP_INEQ     shift, and go to state 40
    OP_LESS     shift, and go to state 41
    OP_EQLESS   shift, and go to state 42
    OP_MORE     shift, and go to state 43
    OP_EQMORE   shift, and go to state 44
    OP_ASSIGN   shift, and go to state 45
    OP_PLUSEQ   shift, and go to state 46
    OP_MINUSEQ  shift, and go to state 47
    OP_MULEQ    shift, and go to state 48
    OP_DIVEQ    shift, and go to state 49
    OP_MODEQ    shift, and go to state 50
    OP_POINTER  shift, and go to state 51
    OP_PAR_L    shift, and go to state 52
    OP_SEMI     shift, and go to state 53
    OP_BRA_L    shift, and go to state 54

    OP_PLUS     [reduce using rule 59 (expr)]
    OP_MINUS    [reduce using rule 59 (expr)]
    OP_MUL      [reduce using rule 59 (expr)]
    OP_DIV      [reduce using rule 59 (expr)]
    OP_MOD      [reduce using rule 59 (expr)]
    OP_EQ       [reduce using rule 59 (expr)]
    OP_INEQ     [reduce using rule 59 (expr)]
    OP_LESS     [reduce using rule 59 (expr)]
    OP_EQLESS   [reduce using rule 59 (expr)]
    OP_MORE     [reduce using rule 59 (expr)]
    OP_EQMORE   [reduce using rule 59 (expr)]
    OP_ASSIGN   [reduce using rule 59 (expr)]
    OP_PLUSEQ   [reduce using rule 59 (expr)]
    OP_MINUSEQ  [reduce using rule 59 (expr)]
    OP_MULEQ    [reduce using rule 59 (expr)]
    OP_DIVEQ    [reduce using rule 59 (expr)]
    OP_MODEQ    [reduce using rule 59 (expr)]
    OP_SEMI     [reduce using rule 59 (expr)]
    OP_BRA_L    [reduce using rule 59 (expr)]
    $default    reduce using rule 59 (expr)

    variable_types  go to state 82
    expr            go to state 181
    operators       go to state 63


State 106

   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   59 expr: . %empty  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_PAR_R, OP_SEMI, OP_COMA, OP_BRA_L, OP_BRA_R, OP_DOT, OP_MEAN]
   60     | . TK_STRING
   61     | . TK_INT
   62     | . TK_REAL
   63     | . KW_TRUE
   64     | . KW_FALSE
   65     | . variable_types OP_PAR_L OP_PAR_R
   66     | . variable_types OP_PAR_L expr OP_PAR_R
   67     | . operators expr
   68     | . variable_types
   69     | . variable_types OP_BRA_L legal_array_index OP_BRA_R
   70     | . variable_types OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | . variable_types OP_BRA_L variable_types OP_BRA_R
   72     | . OP_POINTER expr
   73     | . expr OP_COMA expr
   74     | . expr OP_DOT expr
   75     | . expr OP_PLUS expr
   76     | . expr OP_MINUS expr
   77     | . expr OP_MUL expr
   78     | . expr OP_DIV expr
   79     | . expr OP_MOD expr
   80     | . expr OP_EQ expr
   81     | . expr OP_INEQ expr
   82     | . expr OP_LESS expr
   83     | . expr OP_EQLESS expr
   84     | . expr OP_MORE expr
   84     | expr OP_MORE . expr
   85     | . expr OP_EQMORE expr
   86     | . expr OP_ASSIGN expr
   87     | . expr KW_AND expr
   88     | . expr KW_OR expr
   89     | . expr KW_NOT expr
   90     | . expr OP_PLUSEQ expr
   91     | . expr OP_MINUSEQ expr
   92     | . expr OP_MULEQ expr
   93     | . expr OP_DIVEQ expr
   94     | . expr OP_MODEQ expr
   95     | . OP_PAR_L expr OP_PAR_R
   96     | . OP_BRA_L expr OP_BRA_L
   97     | . OP_SEMI
  108 operators: . OP_PLUS
  109          | . OP_MINUS
  110          | . OP_MUL
  111          | . OP_DIV
  112          | . OP_MOD
  113          | . OP_POWER
  114          | . OP_EQ
  115          | . OP_INEQ
  116          | . OP_LESS
  117          | . OP_EQLESS
  118          | . OP_MORE
  119          | . OP_EQMORE
  120          | . OP_ASSIGN
  121          | . OP_PLUSEQ
  122          | . OP_MINUSEQ
  123          | . OP_MULEQ
  124          | . OP_DIVEQ
  125          | . OP_MODEQ

    TK_STRING   shift, and go to state 23
    TK_IDENT    shift, and go to state 1
    TK_INT      shift, and go to state 24
    TK_REAL     shift, and go to state 25
    KW_HASH     shift, and go to state 2
    KW_FALSE    shift, and go to state 27
    KW_TRUE     shift, and go to state 32
    OP_PLUS     shift, and go to state 33
    OP_MINUS    shift, and go to state 34
    OP_MUL      shift, and go to state 35
    OP_DIV      shift, and go to state 36
    OP_MOD      shift, and go to state 37
    OP_POWER    shift, and go to state 38
    OP_EQ       shift, and go to state 39
    OP_INEQ     shift, and go to state 40
    OP_LESS     shift, and go to state 41
    OP_EQLESS   shift, and go to state 42
    OP_MORE     shift, and go to state 43
    OP_EQMORE   shift, and go to state 44
    OP_ASSIGN   shift, and go to state 45
    OP_PLUSEQ   shift, and go to state 46
    OP_MINUSEQ  shift, and go to state 47
    OP_MULEQ    shift, and go to state 48
    OP_DIVEQ    shift, and go to state 49
    OP_MODEQ    shift, and go to state 50
    OP_POINTER  shift, and go to state 51
    OP_PAR_L    shift, and go to state 52
    OP_SEMI     shift, and go to state 53
    OP_BRA_L    shift, and go to state 54

    OP_PLUS     [reduce using rule 59 (expr)]
    OP_MINUS    [reduce using rule 59 (expr)]
    OP_MUL      [reduce using rule 59 (expr)]
    OP_DIV      [reduce using rule 59 (expr)]
    OP_MOD      [reduce using rule 59 (expr)]
    OP_EQ       [reduce using rule 59 (expr)]
    OP_INEQ     [reduce using rule 59 (expr)]
    OP_LESS     [reduce using rule 59 (expr)]
    OP_EQLESS   [reduce using rule 59 (expr)]
    OP_MORE     [reduce using rule 59 (expr)]
    OP_EQMORE   [reduce using rule 59 (expr)]
    OP_ASSIGN   [reduce using rule 59 (expr)]
    OP_PLUSEQ   [reduce using rule 59 (expr)]
    OP_MINUSEQ  [reduce using rule 59 (expr)]
    OP_MULEQ    [reduce using rule 59 (expr)]
    OP_DIVEQ    [reduce using rule 59 (expr)]
    OP_MODEQ    [reduce using rule 59 (expr)]
    OP_SEMI     [reduce using rule 59 (expr)]
    OP_BRA_L    [reduce using rule 59 (expr)]
    $default    reduce using rule 59 (expr)

    variable_types  go to state 82
    expr            go to state 182
    operators       go to state 63


State 107

   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   59 expr: . %empty  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_PAR_R, OP_SEMI, OP_COMA, OP_BRA_L, OP_BRA_R, OP_DOT, OP_MEAN]
   60     | . TK_STRING
   61     | . TK_INT
   62     | . TK_REAL
   63     | . KW_TRUE
   64     | . KW_FALSE
   65     | . variable_types OP_PAR_L OP_PAR_R
   66     | . variable_types OP_PAR_L expr OP_PAR_R
   67     | . operators expr
   68     | . variable_types
   69     | . variable_types OP_BRA_L legal_array_index OP_BRA_R
   70     | . variable_types OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | . variable_types OP_BRA_L variable_types OP_BRA_R
   72     | . OP_POINTER expr
   73     | . expr OP_COMA expr
   74     | . expr OP_DOT expr
   75     | . expr OP_PLUS expr
   76     | . expr OP_MINUS expr
   77     | . expr OP_MUL expr
   78     | . expr OP_DIV expr
   79     | . expr OP_MOD expr
   80     | . expr OP_EQ expr
   81     | . expr OP_INEQ expr
   82     | . expr OP_LESS expr
   83     | . expr OP_EQLESS expr
   84     | . expr OP_MORE expr
   85     | . expr OP_EQMORE expr
   85     | expr OP_EQMORE . expr
   86     | . expr OP_ASSIGN expr
   87     | . expr KW_AND expr
   88     | . expr KW_OR expr
   89     | . expr KW_NOT expr
   90     | . expr OP_PLUSEQ expr
   91     | . expr OP_MINUSEQ expr
   92     | . expr OP_MULEQ expr
   93     | . expr OP_DIVEQ expr
   94     | . expr OP_MODEQ expr
   95     | . OP_PAR_L expr OP_PAR_R
   96     | . OP_BRA_L expr OP_BRA_L
   97     | . OP_SEMI
  108 operators: . OP_PLUS
  109          | . OP_MINUS
  110          | . OP_MUL
  111          | . OP_DIV
  112          | . OP_MOD
  113          | . OP_POWER
  114          | . OP_EQ
  115          | . OP_INEQ
  116          | . OP_LESS
  117          | . OP_EQLESS
  118          | . OP_MORE
  119          | . OP_EQMORE
  120          | . OP_ASSIGN
  121          | . OP_PLUSEQ
  122          | . OP_MINUSEQ
  123          | . OP_MULEQ
  124          | . OP_DIVEQ
  125          | . OP_MODEQ

    TK_STRING   shift, and go to state 23
    TK_IDENT    shift, and go to state 1
    TK_INT      shift, and go to state 24
    TK_REAL     shift, and go to state 25
    KW_HASH     shift, and go to state 2
    KW_FALSE    shift, and go to state 27
    KW_TRUE     shift, and go to state 32
    OP_PLUS     shift, and go to state 33
    OP_MINUS    shift, and go to state 34
    OP_MUL      shift, and go to state 35
    OP_DIV      shift, and go to state 36
    OP_MOD      shift, and go to state 37
    OP_POWER    shift, and go to state 38
    OP_EQ       shift, and go to state 39
    OP_INEQ     shift, and go to state 40
    OP_LESS     shift, and go to state 41
    OP_EQLESS   shift, and go to state 42
    OP_MORE     shift, and go to state 43
    OP_EQMORE   shift, and go to state 44
    OP_ASSIGN   shift, and go to state 45
    OP_PLUSEQ   shift, and go to state 46
    OP_MINUSEQ  shift, and go to state 47
    OP_MULEQ    shift, and go to state 48
    OP_DIVEQ    shift, and go to state 49
    OP_MODEQ    shift, and go to state 50
    OP_POINTER  shift, and go to state 51
    OP_PAR_L    shift, and go to state 52
    OP_SEMI     shift, and go to state 53
    OP_BRA_L    shift, and go to state 54

    OP_PLUS     [reduce using rule 59 (expr)]
    OP_MINUS    [reduce using rule 59 (expr)]
    OP_MUL      [reduce using rule 59 (expr)]
    OP_DIV      [reduce using rule 59 (expr)]
    OP_MOD      [reduce using rule 59 (expr)]
    OP_EQ       [reduce using rule 59 (expr)]
    OP_INEQ     [reduce using rule 59 (expr)]
    OP_LESS     [reduce using rule 59 (expr)]
    OP_EQLESS   [reduce using rule 59 (expr)]
    OP_MORE     [reduce using rule 59 (expr)]
    OP_EQMORE   [reduce using rule 59 (expr)]
    OP_ASSIGN   [reduce using rule 59 (expr)]
    OP_PLUSEQ   [reduce using rule 59 (expr)]
    OP_MINUSEQ  [reduce using rule 59 (expr)]
    OP_MULEQ    [reduce using rule 59 (expr)]
    OP_DIVEQ    [reduce using rule 59 (expr)]
    OP_MODEQ    [reduce using rule 59 (expr)]
    OP_SEMI     [reduce using rule 59 (expr)]
    OP_BRA_L    [reduce using rule 59 (expr)]
    $default    reduce using rule 59 (expr)

    variable_types  go to state 82
    expr            go to state 183
    operators       go to state 63


State 108

   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   59 expr: . %empty  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_PAR_R, OP_SEMI, OP_COMA, OP_BRA_L, OP_BRA_R, OP_DOT, OP_MEAN]
   60     | . TK_STRING
   61     | . TK_INT
   62     | . TK_REAL
   63     | . KW_TRUE
   64     | . KW_FALSE
   65     | . variable_types OP_PAR_L OP_PAR_R
   66     | . variable_types OP_PAR_L expr OP_PAR_R
   67     | . operators expr
   68     | . variable_types
   69     | . variable_types OP_BRA_L legal_array_index OP_BRA_R
   70     | . variable_types OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | . variable_types OP_BRA_L variable_types OP_BRA_R
   72     | . OP_POINTER expr
   73     | . expr OP_COMA expr
   74     | . expr OP_DOT expr
   75     | . expr OP_PLUS expr
   76     | . expr OP_MINUS expr
   77     | . expr OP_MUL expr
   78     | . expr OP_DIV expr
   79     | . expr OP_MOD expr
   80     | . expr OP_EQ expr
   81     | . expr OP_INEQ expr
   82     | . expr OP_LESS expr
   83     | . expr OP_EQLESS expr
   84     | . expr OP_MORE expr
   85     | . expr OP_EQMORE expr
   86     | . expr OP_ASSIGN expr
   86     | expr OP_ASSIGN . expr
   87     | . expr KW_AND expr
   88     | . expr KW_OR expr
   89     | . expr KW_NOT expr
   90     | . expr OP_PLUSEQ expr
   91     | . expr OP_MINUSEQ expr
   92     | . expr OP_MULEQ expr
   93     | . expr OP_DIVEQ expr
   94     | . expr OP_MODEQ expr
   95     | . OP_PAR_L expr OP_PAR_R
   96     | . OP_BRA_L expr OP_BRA_L
   97     | . OP_SEMI
  108 operators: . OP_PLUS
  109          | . OP_MINUS
  110          | . OP_MUL
  111          | . OP_DIV
  112          | . OP_MOD
  113          | . OP_POWER
  114          | . OP_EQ
  115          | . OP_INEQ
  116          | . OP_LESS
  117          | . OP_EQLESS
  118          | . OP_MORE
  119          | . OP_EQMORE
  120          | . OP_ASSIGN
  121          | . OP_PLUSEQ
  122          | . OP_MINUSEQ
  123          | . OP_MULEQ
  124          | . OP_DIVEQ
  125          | . OP_MODEQ

    TK_STRING   shift, and go to state 23
    TK_IDENT    shift, and go to state 1
    TK_INT      shift, and go to state 24
    TK_REAL     shift, and go to state 25
    KW_HASH     shift, and go to state 2
    KW_FALSE    shift, and go to state 27
    KW_TRUE     shift, and go to state 32
    OP_PLUS     shift, and go to state 33
    OP_MINUS    shift, and go to state 34
    OP_MUL      shift, and go to state 35
    OP_DIV      shift, and go to state 36
    OP_MOD      shift, and go to state 37
    OP_POWER    shift, and go to state 38
    OP_EQ       shift, and go to state 39
    OP_INEQ     shift, and go to state 40
    OP_LESS     shift, and go to state 41
    OP_EQLESS   shift, and go to state 42
    OP_MORE     shift, and go to state 43
    OP_EQMORE   shift, and go to state 44
    OP_ASSIGN   shift, and go to state 45
    OP_PLUSEQ   shift, and go to state 46
    OP_MINUSEQ  shift, and go to state 47
    OP_MULEQ    shift, and go to state 48
    OP_DIVEQ    shift, and go to state 49
    OP_MODEQ    shift, and go to state 50
    OP_POINTER  shift, and go to state 51
    OP_PAR_L    shift, and go to state 52
    OP_SEMI     shift, and go to state 53
    OP_BRA_L    shift, and go to state 54

    OP_PLUS     [reduce using rule 59 (expr)]
    OP_MINUS    [reduce using rule 59 (expr)]
    OP_MUL      [reduce using rule 59 (expr)]
    OP_DIV      [reduce using rule 59 (expr)]
    OP_MOD      [reduce using rule 59 (expr)]
    OP_EQ       [reduce using rule 59 (expr)]
    OP_INEQ     [reduce using rule 59 (expr)]
    OP_LESS     [reduce using rule 59 (expr)]
    OP_EQLESS   [reduce using rule 59 (expr)]
    OP_MORE     [reduce using rule 59 (expr)]
    OP_EQMORE   [reduce using rule 59 (expr)]
    OP_ASSIGN   [reduce using rule 59 (expr)]
    OP_PLUSEQ   [reduce using rule 59 (expr)]
    OP_MINUSEQ  [reduce using rule 59 (expr)]
    OP_MULEQ    [reduce using rule 59 (expr)]
    OP_DIVEQ    [reduce using rule 59 (expr)]
    OP_MODEQ    [reduce using rule 59 (expr)]
    OP_SEMI     [reduce using rule 59 (expr)]
    OP_BRA_L    [reduce using rule 59 (expr)]
    $default    reduce using rule 59 (expr)

    variable_types  go to state 82
    expr            go to state 184
    operators       go to state 63


State 109

   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   59 expr: . %empty  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_PAR_R, OP_SEMI, OP_COMA, OP_BRA_L, OP_BRA_R, OP_DOT, OP_MEAN]
   60     | . TK_STRING
   61     | . TK_INT
   62     | . TK_REAL
   63     | . KW_TRUE
   64     | . KW_FALSE
   65     | . variable_types OP_PAR_L OP_PAR_R
   66     | . variable_types OP_PAR_L expr OP_PAR_R
   67     | . operators expr
   68     | . variable_types
   69     | . variable_types OP_BRA_L legal_array_index OP_BRA_R
   70     | . variable_types OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | . variable_types OP_BRA_L variable_types OP_BRA_R
   72     | . OP_POINTER expr
   73     | . expr OP_COMA expr
   74     | . expr OP_DOT expr
   75     | . expr OP_PLUS expr
   76     | . expr OP_MINUS expr
   77     | . expr OP_MUL expr
   78     | . expr OP_DIV expr
   79     | . expr OP_MOD expr
   80     | . expr OP_EQ expr
   81     | . expr OP_INEQ expr
   82     | . expr OP_LESS expr
   83     | . expr OP_EQLESS expr
   84     | . expr OP_MORE expr
   85     | . expr OP_EQMORE expr
   86     | . expr OP_ASSIGN expr
   87     | . expr KW_AND expr
   88     | . expr KW_OR expr
   89     | . expr KW_NOT expr
   90     | . expr OP_PLUSEQ expr
   90     | expr OP_PLUSEQ . expr
   91     | . expr OP_MINUSEQ expr
   92     | . expr OP_MULEQ expr
   93     | . expr OP_DIVEQ expr
   94     | . expr OP_MODEQ expr
   95     | . OP_PAR_L expr OP_PAR_R
   96     | . OP_BRA_L expr OP_BRA_L
   97     | . OP_SEMI
  108 operators: . OP_PLUS
  109          | . OP_MINUS
  110          | . OP_MUL
  111          | . OP_DIV
  112          | . OP_MOD
  113          | . OP_POWER
  114          | . OP_EQ
  115          | . OP_INEQ
  116          | . OP_LESS
  117          | . OP_EQLESS
  118          | . OP_MORE
  119          | . OP_EQMORE
  120          | . OP_ASSIGN
  121          | . OP_PLUSEQ
  122          | . OP_MINUSEQ
  123          | . OP_MULEQ
  124          | . OP_DIVEQ
  125          | . OP_MODEQ

    TK_STRING   shift, and go to state 23
    TK_IDENT    shift, and go to state 1
    TK_INT      shift, and go to state 24
    TK_REAL     shift, and go to state 25
    KW_HASH     shift, and go to state 2
    KW_FALSE    shift, and go to state 27
    KW_TRUE     shift, and go to state 32
    OP_PLUS     shift, and go to state 33
    OP_MINUS    shift, and go to state 34
    OP_MUL      shift, and go to state 35
    OP_DIV      shift, and go to state 36
    OP_MOD      shift, and go to state 37
    OP_POWER    shift, and go to state 38
    OP_EQ       shift, and go to state 39
    OP_INEQ     shift, and go to state 40
    OP_LESS     shift, and go to state 41
    OP_EQLESS   shift, and go to state 42
    OP_MORE     shift, and go to state 43
    OP_EQMORE   shift, and go to state 44
    OP_ASSIGN   shift, and go to state 45
    OP_PLUSEQ   shift, and go to state 46
    OP_MINUSEQ  shift, and go to state 47
    OP_MULEQ    shift, and go to state 48
    OP_DIVEQ    shift, and go to state 49
    OP_MODEQ    shift, and go to state 50
    OP_POINTER  shift, and go to state 51
    OP_PAR_L    shift, and go to state 52
    OP_SEMI     shift, and go to state 53
    OP_BRA_L    shift, and go to state 54

    OP_PLUS     [reduce using rule 59 (expr)]
    OP_MINUS    [reduce using rule 59 (expr)]
    OP_MUL      [reduce using rule 59 (expr)]
    OP_DIV      [reduce using rule 59 (expr)]
    OP_MOD      [reduce using rule 59 (expr)]
    OP_EQ       [reduce using rule 59 (expr)]
    OP_INEQ     [reduce using rule 59 (expr)]
    OP_LESS     [reduce using rule 59 (expr)]
    OP_EQLESS   [reduce using rule 59 (expr)]
    OP_MORE     [reduce using rule 59 (expr)]
    OP_EQMORE   [reduce using rule 59 (expr)]
    OP_ASSIGN   [reduce using rule 59 (expr)]
    OP_PLUSEQ   [reduce using rule 59 (expr)]
    OP_MINUSEQ  [reduce using rule 59 (expr)]
    OP_MULEQ    [reduce using rule 59 (expr)]
    OP_DIVEQ    [reduce using rule 59 (expr)]
    OP_MODEQ    [reduce using rule 59 (expr)]
    OP_SEMI     [reduce using rule 59 (expr)]
    OP_BRA_L    [reduce using rule 59 (expr)]
    $default    reduce using rule 59 (expr)

    variable_types  go to state 82
    expr            go to state 185
    operators       go to state 63


State 110

   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   59 expr: . %empty  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_PAR_R, OP_SEMI, OP_COMA, OP_BRA_L, OP_BRA_R, OP_DOT, OP_MEAN]
   60     | . TK_STRING
   61     | . TK_INT
   62     | . TK_REAL
   63     | . KW_TRUE
   64     | . KW_FALSE
   65     | . variable_types OP_PAR_L OP_PAR_R
   66     | . variable_types OP_PAR_L expr OP_PAR_R
   67     | . operators expr
   68     | . variable_types
   69     | . variable_types OP_BRA_L legal_array_index OP_BRA_R
   70     | . variable_types OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | . variable_types OP_BRA_L variable_types OP_BRA_R
   72     | . OP_POINTER expr
   73     | . expr OP_COMA expr
   74     | . expr OP_DOT expr
   75     | . expr OP_PLUS expr
   76     | . expr OP_MINUS expr
   77     | . expr OP_MUL expr
   78     | . expr OP_DIV expr
   79     | . expr OP_MOD expr
   80     | . expr OP_EQ expr
   81     | . expr OP_INEQ expr
   82     | . expr OP_LESS expr
   83     | . expr OP_EQLESS expr
   84     | . expr OP_MORE expr
   85     | . expr OP_EQMORE expr
   86     | . expr OP_ASSIGN expr
   87     | . expr KW_AND expr
   88     | . expr KW_OR expr
   89     | . expr KW_NOT expr
   90     | . expr OP_PLUSEQ expr
   91     | . expr OP_MINUSEQ expr
   91     | expr OP_MINUSEQ . expr
   92     | . expr OP_MULEQ expr
   93     | . expr OP_DIVEQ expr
   94     | . expr OP_MODEQ expr
   95     | . OP_PAR_L expr OP_PAR_R
   96     | . OP_BRA_L expr OP_BRA_L
   97     | . OP_SEMI
  108 operators: . OP_PLUS
  109          | . OP_MINUS
  110          | . OP_MUL
  111          | . OP_DIV
  112          | . OP_MOD
  113          | . OP_POWER
  114          | . OP_EQ
  115          | . OP_INEQ
  116          | . OP_LESS
  117          | . OP_EQLESS
  118          | . OP_MORE
  119          | . OP_EQMORE
  120          | . OP_ASSIGN
  121          | . OP_PLUSEQ
  122          | . OP_MINUSEQ
  123          | . OP_MULEQ
  124          | . OP_DIVEQ
  125          | . OP_MODEQ

    TK_STRING   shift, and go to state 23
    TK_IDENT    shift, and go to state 1
    TK_INT      shift, and go to state 24
    TK_REAL     shift, and go to state 25
    KW_HASH     shift, and go to state 2
    KW_FALSE    shift, and go to state 27
    KW_TRUE     shift, and go to state 32
    OP_PLUS     shift, and go to state 33
    OP_MINUS    shift, and go to state 34
    OP_MUL      shift, and go to state 35
    OP_DIV      shift, and go to state 36
    OP_MOD      shift, and go to state 37
    OP_POWER    shift, and go to state 38
    OP_EQ       shift, and go to state 39
    OP_INEQ     shift, and go to state 40
    OP_LESS     shift, and go to state 41
    OP_EQLESS   shift, and go to state 42
    OP_MORE     shift, and go to state 43
    OP_EQMORE   shift, and go to state 44
    OP_ASSIGN   shift, and go to state 45
    OP_PLUSEQ   shift, and go to state 46
    OP_MINUSEQ  shift, and go to state 47
    OP_MULEQ    shift, and go to state 48
    OP_DIVEQ    shift, and go to state 49
    OP_MODEQ    shift, and go to state 50
    OP_POINTER  shift, and go to state 51
    OP_PAR_L    shift, and go to state 52
    OP_SEMI     shift, and go to state 53
    OP_BRA_L    shift, and go to state 54

    OP_PLUS     [reduce using rule 59 (expr)]
    OP_MINUS    [reduce using rule 59 (expr)]
    OP_MUL      [reduce using rule 59 (expr)]
    OP_DIV      [reduce using rule 59 (expr)]
    OP_MOD      [reduce using rule 59 (expr)]
    OP_EQ       [reduce using rule 59 (expr)]
    OP_INEQ     [reduce using rule 59 (expr)]
    OP_LESS     [reduce using rule 59 (expr)]
    OP_EQLESS   [reduce using rule 59 (expr)]
    OP_MORE     [reduce using rule 59 (expr)]
    OP_EQMORE   [reduce using rule 59 (expr)]
    OP_ASSIGN   [reduce using rule 59 (expr)]
    OP_PLUSEQ   [reduce using rule 59 (expr)]
    OP_MINUSEQ  [reduce using rule 59 (expr)]
    OP_MULEQ    [reduce using rule 59 (expr)]
    OP_DIVEQ    [reduce using rule 59 (expr)]
    OP_MODEQ    [reduce using rule 59 (expr)]
    OP_SEMI     [reduce using rule 59 (expr)]
    OP_BRA_L    [reduce using rule 59 (expr)]
    $default    reduce using rule 59 (expr)

    variable_types  go to state 82
    expr            go to state 186
    operators       go to state 63


State 111

   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   59 expr: . %empty  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_PAR_R, OP_SEMI, OP_COMA, OP_BRA_L, OP_BRA_R, OP_DOT, OP_MEAN]
   60     | . TK_STRING
   61     | . TK_INT
   62     | . TK_REAL
   63     | . KW_TRUE
   64     | . KW_FALSE
   65     | . variable_types OP_PAR_L OP_PAR_R
   66     | . variable_types OP_PAR_L expr OP_PAR_R
   67     | . operators expr
   68     | . variable_types
   69     | . variable_types OP_BRA_L legal_array_index OP_BRA_R
   70     | . variable_types OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | . variable_types OP_BRA_L variable_types OP_BRA_R
   72     | . OP_POINTER expr
   73     | . expr OP_COMA expr
   74     | . expr OP_DOT expr
   75     | . expr OP_PLUS expr
   76     | . expr OP_MINUS expr
   77     | . expr OP_MUL expr
   78     | . expr OP_DIV expr
   79     | . expr OP_MOD expr
   80     | . expr OP_EQ expr
   81     | . expr OP_INEQ expr
   82     | . expr OP_LESS expr
   83     | . expr OP_EQLESS expr
   84     | . expr OP_MORE expr
   85     | . expr OP_EQMORE expr
   86     | . expr OP_ASSIGN expr
   87     | . expr KW_AND expr
   88     | . expr KW_OR expr
   89     | . expr KW_NOT expr
   90     | . expr OP_PLUSEQ expr
   91     | . expr OP_MINUSEQ expr
   92     | . expr OP_MULEQ expr
   92     | expr OP_MULEQ . expr
   93     | . expr OP_DIVEQ expr
   94     | . expr OP_MODEQ expr
   95     | . OP_PAR_L expr OP_PAR_R
   96     | . OP_BRA_L expr OP_BRA_L
   97     | . OP_SEMI
  108 operators: . OP_PLUS
  109          | . OP_MINUS
  110          | . OP_MUL
  111          | . OP_DIV
  112          | . OP_MOD
  113          | . OP_POWER
  114          | . OP_EQ
  115          | . OP_INEQ
  116          | . OP_LESS
  117          | . OP_EQLESS
  118          | . OP_MORE
  119          | . OP_EQMORE
  120          | . OP_ASSIGN
  121          | . OP_PLUSEQ
  122          | . OP_MINUSEQ
  123          | . OP_MULEQ
  124          | . OP_DIVEQ
  125          | . OP_MODEQ

    TK_STRING   shift, and go to state 23
    TK_IDENT    shift, and go to state 1
    TK_INT      shift, and go to state 24
    TK_REAL     shift, and go to state 25
    KW_HASH     shift, and go to state 2
    KW_FALSE    shift, and go to state 27
    KW_TRUE     shift, and go to state 32
    OP_PLUS     shift, and go to state 33
    OP_MINUS    shift, and go to state 34
    OP_MUL      shift, and go to state 35
    OP_DIV      shift, and go to state 36
    OP_MOD      shift, and go to state 37
    OP_POWER    shift, and go to state 38
    OP_EQ       shift, and go to state 39
    OP_INEQ     shift, and go to state 40
    OP_LESS     shift, and go to state 41
    OP_EQLESS   shift, and go to state 42
    OP_MORE     shift, and go to state 43
    OP_EQMORE   shift, and go to state 44
    OP_ASSIGN   shift, and go to state 45
    OP_PLUSEQ   shift, and go to state 46
    OP_MINUSEQ  shift, and go to state 47
    OP_MULEQ    shift, and go to state 48
    OP_DIVEQ    shift, and go to state 49
    OP_MODEQ    shift, and go to state 50
    OP_POINTER  shift, and go to state 51
    OP_PAR_L    shift, and go to state 52
    OP_SEMI     shift, and go to state 53
    OP_BRA_L    shift, and go to state 54

    OP_PLUS     [reduce using rule 59 (expr)]
    OP_MINUS    [reduce using rule 59 (expr)]
    OP_MUL      [reduce using rule 59 (expr)]
    OP_DIV      [reduce using rule 59 (expr)]
    OP_MOD      [reduce using rule 59 (expr)]
    OP_EQ       [reduce using rule 59 (expr)]
    OP_INEQ     [reduce using rule 59 (expr)]
    OP_LESS     [reduce using rule 59 (expr)]
    OP_EQLESS   [reduce using rule 59 (expr)]
    OP_MORE     [reduce using rule 59 (expr)]
    OP_EQMORE   [reduce using rule 59 (expr)]
    OP_ASSIGN   [reduce using rule 59 (expr)]
    OP_PLUSEQ   [reduce using rule 59 (expr)]
    OP_MINUSEQ  [reduce using rule 59 (expr)]
    OP_MULEQ    [reduce using rule 59 (expr)]
    OP_DIVEQ    [reduce using rule 59 (expr)]
    OP_MODEQ    [reduce using rule 59 (expr)]
    OP_SEMI     [reduce using rule 59 (expr)]
    OP_BRA_L    [reduce using rule 59 (expr)]
    $default    reduce using rule 59 (expr)

    variable_types  go to state 82
    expr            go to state 187
    operators       go to state 63


State 112

   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   59 expr: . %empty  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_PAR_R, OP_SEMI, OP_COMA, OP_BRA_L, OP_BRA_R, OP_DOT, OP_MEAN]
   60     | . TK_STRING
   61     | . TK_INT
   62     | . TK_REAL
   63     | . KW_TRUE
   64     | . KW_FALSE
   65     | . variable_types OP_PAR_L OP_PAR_R
   66     | . variable_types OP_PAR_L expr OP_PAR_R
   67     | . operators expr
   68     | . variable_types
   69     | . variable_types OP_BRA_L legal_array_index OP_BRA_R
   70     | . variable_types OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | . variable_types OP_BRA_L variable_types OP_BRA_R
   72     | . OP_POINTER expr
   73     | . expr OP_COMA expr
   74     | . expr OP_DOT expr
   75     | . expr OP_PLUS expr
   76     | . expr OP_MINUS expr
   77     | . expr OP_MUL expr
   78     | . expr OP_DIV expr
   79     | . expr OP_MOD expr
   80     | . expr OP_EQ expr
   81     | . expr OP_INEQ expr
   82     | . expr OP_LESS expr
   83     | . expr OP_EQLESS expr
   84     | . expr OP_MORE expr
   85     | . expr OP_EQMORE expr
   86     | . expr OP_ASSIGN expr
   87     | . expr KW_AND expr
   88     | . expr KW_OR expr
   89     | . expr KW_NOT expr
   90     | . expr OP_PLUSEQ expr
   91     | . expr OP_MINUSEQ expr
   92     | . expr OP_MULEQ expr
   93     | . expr OP_DIVEQ expr
   93     | expr OP_DIVEQ . expr
   94     | . expr OP_MODEQ expr
   95     | . OP_PAR_L expr OP_PAR_R
   96     | . OP_BRA_L expr OP_BRA_L
   97     | . OP_SEMI
  108 operators: . OP_PLUS
  109          | . OP_MINUS
  110          | . OP_MUL
  111          | . OP_DIV
  112          | . OP_MOD
  113          | . OP_POWER
  114          | . OP_EQ
  115          | . OP_INEQ
  116          | . OP_LESS
  117          | . OP_EQLESS
  118          | . OP_MORE
  119          | . OP_EQMORE
  120          | . OP_ASSIGN
  121          | . OP_PLUSEQ
  122          | . OP_MINUSEQ
  123          | . OP_MULEQ
  124          | . OP_DIVEQ
  125          | . OP_MODEQ

    TK_STRING   shift, and go to state 23
    TK_IDENT    shift, and go to state 1
    TK_INT      shift, and go to state 24
    TK_REAL     shift, and go to state 25
    KW_HASH     shift, and go to state 2
    KW_FALSE    shift, and go to state 27
    KW_TRUE     shift, and go to state 32
    OP_PLUS     shift, and go to state 33
    OP_MINUS    shift, and go to state 34
    OP_MUL      shift, and go to state 35
    OP_DIV      shift, and go to state 36
    OP_MOD      shift, and go to state 37
    OP_POWER    shift, and go to state 38
    OP_EQ       shift, and go to state 39
    OP_INEQ     shift, and go to state 40
    OP_LESS     shift, and go to state 41
    OP_EQLESS   shift, and go to state 42
    OP_MORE     shift, and go to state 43
    OP_EQMORE   shift, and go to state 44
    OP_ASSIGN   shift, and go to state 45
    OP_PLUSEQ   shift, and go to state 46
    OP_MINUSEQ  shift, and go to state 47
    OP_MULEQ    shift, and go to state 48
    OP_DIVEQ    shift, and go to state 49
    OP_MODEQ    shift, and go to state 50
    OP_POINTER  shift, and go to state 51
    OP_PAR_L    shift, and go to state 52
    OP_SEMI     shift, and go to state 53
    OP_BRA_L    shift, and go to state 54

    OP_PLUS     [reduce using rule 59 (expr)]
    OP_MINUS    [reduce using rule 59 (expr)]
    OP_MUL      [reduce using rule 59 (expr)]
    OP_DIV      [reduce using rule 59 (expr)]
    OP_MOD      [reduce using rule 59 (expr)]
    OP_EQ       [reduce using rule 59 (expr)]
    OP_INEQ     [reduce using rule 59 (expr)]
    OP_LESS     [reduce using rule 59 (expr)]
    OP_EQLESS   [reduce using rule 59 (expr)]
    OP_MORE     [reduce using rule 59 (expr)]
    OP_EQMORE   [reduce using rule 59 (expr)]
    OP_ASSIGN   [reduce using rule 59 (expr)]
    OP_PLUSEQ   [reduce using rule 59 (expr)]
    OP_MINUSEQ  [reduce using rule 59 (expr)]
    OP_MULEQ    [reduce using rule 59 (expr)]
    OP_DIVEQ    [reduce using rule 59 (expr)]
    OP_MODEQ    [reduce using rule 59 (expr)]
    OP_SEMI     [reduce using rule 59 (expr)]
    OP_BRA_L    [reduce using rule 59 (expr)]
    $default    reduce using rule 59 (expr)

    variable_types  go to state 82
    expr            go to state 188
    operators       go to state 63


State 113

   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   59 expr: . %empty  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_PAR_R, OP_SEMI, OP_COMA, OP_BRA_L, OP_BRA_R, OP_DOT, OP_MEAN]
   60     | . TK_STRING
   61     | . TK_INT
   62     | . TK_REAL
   63     | . KW_TRUE
   64     | . KW_FALSE
   65     | . variable_types OP_PAR_L OP_PAR_R
   66     | . variable_types OP_PAR_L expr OP_PAR_R
   67     | . operators expr
   68     | . variable_types
   69     | . variable_types OP_BRA_L legal_array_index OP_BRA_R
   70     | . variable_types OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | . variable_types OP_BRA_L variable_types OP_BRA_R
   72     | . OP_POINTER expr
   73     | . expr OP_COMA expr
   74     | . expr OP_DOT expr
   75     | . expr OP_PLUS expr
   76     | . expr OP_MINUS expr
   77     | . expr OP_MUL expr
   78     | . expr OP_DIV expr
   79     | . expr OP_MOD expr
   80     | . expr OP_EQ expr
   81     | . expr OP_INEQ expr
   82     | . expr OP_LESS expr
   83     | . expr OP_EQLESS expr
   84     | . expr OP_MORE expr
   85     | . expr OP_EQMORE expr
   86     | . expr OP_ASSIGN expr
   87     | . expr KW_AND expr
   88     | . expr KW_OR expr
   89     | . expr KW_NOT expr
   90     | . expr OP_PLUSEQ expr
   91     | . expr OP_MINUSEQ expr
   92     | . expr OP_MULEQ expr
   93     | . expr OP_DIVEQ expr
   94     | . expr OP_MODEQ expr
   94     | expr OP_MODEQ . expr
   95     | . OP_PAR_L expr OP_PAR_R
   96     | . OP_BRA_L expr OP_BRA_L
   97     | . OP_SEMI
  108 operators: . OP_PLUS
  109          | . OP_MINUS
  110          | . OP_MUL
  111          | . OP_DIV
  112          | . OP_MOD
  113          | . OP_POWER
  114          | . OP_EQ
  115          | . OP_INEQ
  116          | . OP_LESS
  117          | . OP_EQLESS
  118          | . OP_MORE
  119          | . OP_EQMORE
  120          | . OP_ASSIGN
  121          | . OP_PLUSEQ
  122          | . OP_MINUSEQ
  123          | . OP_MULEQ
  124          | . OP_DIVEQ
  125          | . OP_MODEQ

    TK_STRING   shift, and go to state 23
    TK_IDENT    shift, and go to state 1
    TK_INT      shift, and go to state 24
    TK_REAL     shift, and go to state 25
    KW_HASH     shift, and go to state 2
    KW_FALSE    shift, and go to state 27
    KW_TRUE     shift, and go to state 32
    OP_PLUS     shift, and go to state 33
    OP_MINUS    shift, and go to state 34
    OP_MUL      shift, and go to state 35
    OP_DIV      shift, and go to state 36
    OP_MOD      shift, and go to state 37
    OP_POWER    shift, and go to state 38
    OP_EQ       shift, and go to state 39
    OP_INEQ     shift, and go to state 40
    OP_LESS     shift, and go to state 41
    OP_EQLESS   shift, and go to state 42
    OP_MORE     shift, and go to state 43
    OP_EQMORE   shift, and go to state 44
    OP_ASSIGN   shift, and go to state 45
    OP_PLUSEQ   shift, and go to state 46
    OP_MINUSEQ  shift, and go to state 47
    OP_MULEQ    shift, and go to state 48
    OP_DIVEQ    shift, and go to state 49
    OP_MODEQ    shift, and go to state 50
    OP_POINTER  shift, and go to state 51
    OP_PAR_L    shift, and go to state 52
    OP_SEMI     shift, and go to state 53
    OP_BRA_L    shift, and go to state 54

    OP_PLUS     [reduce using rule 59 (expr)]
    OP_MINUS    [reduce using rule 59 (expr)]
    OP_MUL      [reduce using rule 59 (expr)]
    OP_DIV      [reduce using rule 59 (expr)]
    OP_MOD      [reduce using rule 59 (expr)]
    OP_EQ       [reduce using rule 59 (expr)]
    OP_INEQ     [reduce using rule 59 (expr)]
    OP_LESS     [reduce using rule 59 (expr)]
    OP_EQLESS   [reduce using rule 59 (expr)]
    OP_MORE     [reduce using rule 59 (expr)]
    OP_EQMORE   [reduce using rule 59 (expr)]
    OP_ASSIGN   [reduce using rule 59 (expr)]
    OP_PLUSEQ   [reduce using rule 59 (expr)]
    OP_MINUSEQ  [reduce using rule 59 (expr)]
    OP_MULEQ    [reduce using rule 59 (expr)]
    OP_DIVEQ    [reduce using rule 59 (expr)]
    OP_MODEQ    [reduce using rule 59 (expr)]
    OP_SEMI     [reduce using rule 59 (expr)]
    OP_BRA_L    [reduce using rule 59 (expr)]
    $default    reduce using rule 59 (expr)

    variable_types  go to state 82
    expr            go to state 189
    operators       go to state 63


State 114

   32 local_declarations: expr OP_SEMI .

    $default  reduce using rule 32 (local_declarations)


State 115

   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   59 expr: . %empty  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_PAR_R, OP_SEMI, OP_COMA, OP_BRA_L, OP_BRA_R, OP_DOT, OP_MEAN]
   60     | . TK_STRING
   61     | . TK_INT
   62     | . TK_REAL
   63     | . KW_TRUE
   64     | . KW_FALSE
   65     | . variable_types OP_PAR_L OP_PAR_R
   66     | . variable_types OP_PAR_L expr OP_PAR_R
   67     | . operators expr
   68     | . variable_types
   69     | . variable_types OP_BRA_L legal_array_index OP_BRA_R
   70     | . variable_types OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | . variable_types OP_BRA_L variable_types OP_BRA_R
   72     | . OP_POINTER expr
   73     | . expr OP_COMA expr
   73     | expr OP_COMA . expr
   74     | . expr OP_DOT expr
   75     | . expr OP_PLUS expr
   76     | . expr OP_MINUS expr
   77     | . expr OP_MUL expr
   78     | . expr OP_DIV expr
   79     | . expr OP_MOD expr
   80     | . expr OP_EQ expr
   81     | . expr OP_INEQ expr
   82     | . expr OP_LESS expr
   83     | . expr OP_EQLESS expr
   84     | . expr OP_MORE expr
   85     | . expr OP_EQMORE expr
   86     | . expr OP_ASSIGN expr
   87     | . expr KW_AND expr
   88     | . expr KW_OR expr
   89     | . expr KW_NOT expr
   90     | . expr OP_PLUSEQ expr
   91     | . expr OP_MINUSEQ expr
   92     | . expr OP_MULEQ expr
   93     | . expr OP_DIVEQ expr
   94     | . expr OP_MODEQ expr
   95     | . OP_PAR_L expr OP_PAR_R
   96     | . OP_BRA_L expr OP_BRA_L
   97     | . OP_SEMI
  108 operators: . OP_PLUS
  109          | . OP_MINUS
  110          | . OP_MUL
  111          | . OP_DIV
  112          | . OP_MOD
  113          | . OP_POWER
  114          | . OP_EQ
  115          | . OP_INEQ
  116          | . OP_LESS
  117          | . OP_EQLESS
  118          | . OP_MORE
  119          | . OP_EQMORE
  120          | . OP_ASSIGN
  121          | . OP_PLUSEQ
  122          | . OP_MINUSEQ
  123          | . OP_MULEQ
  124          | . OP_DIVEQ
  125          | . OP_MODEQ

    TK_STRING   shift, and go to state 23
    TK_IDENT    shift, and go to state 1
    TK_INT      shift, and go to state 24
    TK_REAL     shift, and go to state 25
    KW_HASH     shift, and go to state 2
    KW_FALSE    shift, and go to state 27
    KW_TRUE     shift, and go to state 32
    OP_PLUS     shift, and go to state 33
    OP_MINUS    shift, and go to state 34
    OP_MUL      shift, and go to state 35
    OP_DIV      shift, and go to state 36
    OP_MOD      shift, and go to state 37
    OP_POWER    shift, and go to state 38
    OP_EQ       shift, and go to state 39
    OP_INEQ     shift, and go to state 40
    OP_LESS     shift, and go to state 41
    OP_EQLESS   shift, and go to state 42
    OP_MORE     shift, and go to state 43
    OP_EQMORE   shift, and go to state 44
    OP_ASSIGN   shift, and go to state 45
    OP_PLUSEQ   shift, and go to state 46
    OP_MINUSEQ  shift, and go to state 47
    OP_MULEQ    shift, and go to state 48
    OP_DIVEQ    shift, and go to state 49
    OP_MODEQ    shift, and go to state 50
    OP_POINTER  shift, and go to state 51
    OP_PAR_L    shift, and go to state 52
    OP_SEMI     shift, and go to state 53
    OP_BRA_L    shift, and go to state 54

    OP_PLUS     [reduce using rule 59 (expr)]
    OP_MINUS    [reduce using rule 59 (expr)]
    OP_MUL      [reduce using rule 59 (expr)]
    OP_DIV      [reduce using rule 59 (expr)]
    OP_MOD      [reduce using rule 59 (expr)]
    OP_EQ       [reduce using rule 59 (expr)]
    OP_INEQ     [reduce using rule 59 (expr)]
    OP_LESS     [reduce using rule 59 (expr)]
    OP_EQLESS   [reduce using rule 59 (expr)]
    OP_MORE     [reduce using rule 59 (expr)]
    OP_EQMORE   [reduce using rule 59 (expr)]
    OP_ASSIGN   [reduce using rule 59 (expr)]
    OP_PLUSEQ   [reduce using rule 59 (expr)]
    OP_MINUSEQ  [reduce using rule 59 (expr)]
    OP_MULEQ    [reduce using rule 59 (expr)]
    OP_DIVEQ    [reduce using rule 59 (expr)]
    OP_MODEQ    [reduce using rule 59 (expr)]
    OP_SEMI     [reduce using rule 59 (expr)]
    OP_BRA_L    [reduce using rule 59 (expr)]
    $default    reduce using rule 59 (expr)

    variable_types  go to state 82
    expr            go to state 190
    operators       go to state 63


State 116

   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   59 expr: . %empty  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_PAR_R, OP_SEMI, OP_COMA, OP_BRA_L, OP_BRA_R, OP_DOT, OP_MEAN]
   60     | . TK_STRING
   61     | . TK_INT
   62     | . TK_REAL
   63     | . KW_TRUE
   64     | . KW_FALSE
   65     | . variable_types OP_PAR_L OP_PAR_R
   66     | . variable_types OP_PAR_L expr OP_PAR_R
   67     | . operators expr
   68     | . variable_types
   69     | . variable_types OP_BRA_L legal_array_index OP_BRA_R
   70     | . variable_types OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | . variable_types OP_BRA_L variable_types OP_BRA_R
   72     | . OP_POINTER expr
   73     | . expr OP_COMA expr
   74     | . expr OP_DOT expr
   74     | expr OP_DOT . expr
   75     | . expr OP_PLUS expr
   76     | . expr OP_MINUS expr
   77     | . expr OP_MUL expr
   78     | . expr OP_DIV expr
   79     | . expr OP_MOD expr
   80     | . expr OP_EQ expr
   81     | . expr OP_INEQ expr
   82     | . expr OP_LESS expr
   83     | . expr OP_EQLESS expr
   84     | . expr OP_MORE expr
   85     | . expr OP_EQMORE expr
   86     | . expr OP_ASSIGN expr
   87     | . expr KW_AND expr
   88     | . expr KW_OR expr
   89     | . expr KW_NOT expr
   90     | . expr OP_PLUSEQ expr
   91     | . expr OP_MINUSEQ expr
   92     | . expr OP_MULEQ expr
   93     | . expr OP_DIVEQ expr
   94     | . expr OP_MODEQ expr
   95     | . OP_PAR_L expr OP_PAR_R
   96     | . OP_BRA_L expr OP_BRA_L
   97     | . OP_SEMI
  108 operators: . OP_PLUS
  109          | . OP_MINUS
  110          | . OP_MUL
  111          | . OP_DIV
  112          | . OP_MOD
  113          | . OP_POWER
  114          | . OP_EQ
  115          | . OP_INEQ
  116          | . OP_LESS
  117          | . OP_EQLESS
  118          | . OP_MORE
  119          | . OP_EQMORE
  120          | . OP_ASSIGN
  121          | . OP_PLUSEQ
  122          | . OP_MINUSEQ
  123          | . OP_MULEQ
  124          | . OP_DIVEQ
  125          | . OP_MODEQ

    TK_STRING   shift, and go to state 23
    TK_IDENT    shift, and go to state 1
    TK_INT      shift, and go to state 24
    TK_REAL     shift, and go to state 25
    KW_HASH     shift, and go to state 2
    KW_FALSE    shift, and go to state 27
    KW_TRUE     shift, and go to state 32
    OP_PLUS     shift, and go to state 33
    OP_MINUS    shift, and go to state 34
    OP_MUL      shift, and go to state 35
    OP_DIV      shift, and go to state 36
    OP_MOD      shift, and go to state 37
    OP_POWER    shift, and go to state 38
    OP_EQ       shift, and go to state 39
    OP_INEQ     shift, and go to state 40
    OP_LESS     shift, and go to state 41
    OP_EQLESS   shift, and go to state 42
    OP_MORE     shift, and go to state 43
    OP_EQMORE   shift, and go to state 44
    OP_ASSIGN   shift, and go to state 45
    OP_PLUSEQ   shift, and go to state 46
    OP_MINUSEQ  shift, and go to state 47
    OP_MULEQ    shift, and go to state 48
    OP_DIVEQ    shift, and go to state 49
    OP_MODEQ    shift, and go to state 50
    OP_POINTER  shift, and go to state 51
    OP_PAR_L    shift, and go to state 52
    OP_SEMI     shift, and go to state 53
    OP_BRA_L    shift, and go to state 54

    OP_PLUS     [reduce using rule 59 (expr)]
    OP_MINUS    [reduce using rule 59 (expr)]
    OP_MUL      [reduce using rule 59 (expr)]
    OP_DIV      [reduce using rule 59 (expr)]
    OP_MOD      [reduce using rule 59 (expr)]
    OP_EQ       [reduce using rule 59 (expr)]
    OP_INEQ     [reduce using rule 59 (expr)]
    OP_LESS     [reduce using rule 59 (expr)]
    OP_EQLESS   [reduce using rule 59 (expr)]
    OP_MORE     [reduce using rule 59 (expr)]
    OP_EQMORE   [reduce using rule 59 (expr)]
    OP_ASSIGN   [reduce using rule 59 (expr)]
    OP_PLUSEQ   [reduce using rule 59 (expr)]
    OP_MINUSEQ  [reduce using rule 59 (expr)]
    OP_MULEQ    [reduce using rule 59 (expr)]
    OP_DIVEQ    [reduce using rule 59 (expr)]
    OP_MODEQ    [reduce using rule 59 (expr)]
    OP_SEMI     [reduce using rule 59 (expr)]
    OP_BRA_L    [reduce using rule 59 (expr)]
    $default    reduce using rule 59 (expr)

    variable_types  go to state 82
    expr            go to state 191
    operators       go to state 63


State 117

   67 expr: operators expr .  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_PAR_R, OP_SEMI, OP_COMA, OP_BRA_L, OP_BRA_R, OP_DOT, OP_MEAN]
   73     | expr . OP_COMA expr
   74     | expr . OP_DOT expr
   75     | expr . OP_PLUS expr
   76     | expr . OP_MINUS expr
   77     | expr . OP_MUL expr
   78     | expr . OP_DIV expr
   79     | expr . OP_MOD expr
   80     | expr . OP_EQ expr
   81     | expr . OP_INEQ expr
   82     | expr . OP_LESS expr
   83     | expr . OP_EQLESS expr
   84     | expr . OP_MORE expr
   85     | expr . OP_EQMORE expr
   86     | expr . OP_ASSIGN expr
   87     | expr . KW_AND expr
   88     | expr . KW_OR expr
   89     | expr . KW_NOT expr
   90     | expr . OP_PLUSEQ expr
   91     | expr . OP_MINUSEQ expr
   92     | expr . OP_MULEQ expr
   93     | expr . OP_DIVEQ expr
   94     | expr . OP_MODEQ expr

    KW_NOT      shift, and go to state 94
    KW_AND      shift, and go to state 95
    KW_OR       shift, and go to state 96
    OP_PLUS     shift, and go to state 97
    OP_MINUS    shift, and go to state 98
    OP_MUL      shift, and go to state 99
    OP_DIV      shift, and go to state 100
    OP_MOD      shift, and go to state 101
    OP_EQ       shift, and go to state 102
    OP_INEQ     shift, and go to state 103
    OP_LESS     shift, and go to state 104
    OP_EQLESS   shift, and go to state 105
    OP_MORE     shift, and go to state 106
    OP_EQMORE   shift, and go to state 107
    OP_ASSIGN   shift, and go to state 108
    OP_PLUSEQ   shift, and go to state 109
    OP_MINUSEQ  shift, and go to state 110
    OP_MULEQ    shift, and go to state 111
    OP_DIVEQ    shift, and go to state 112
    OP_MODEQ    shift, and go to state 113
    OP_COMA     shift, and go to state 115
    OP_DOT      shift, and go to state 116

    KW_NOT      [reduce using rule 67 (expr)]
    KW_AND      [reduce using rule 67 (expr)]
    KW_OR       [reduce using rule 67 (expr)]
    OP_PLUS     [reduce using rule 67 (expr)]
    OP_MINUS    [reduce using rule 67 (expr)]
    OP_MUL      [reduce using rule 67 (expr)]
    OP_DIV      [reduce using rule 67 (expr)]
    OP_MOD      [reduce using rule 67 (expr)]
    OP_EQ       [reduce using rule 67 (expr)]
    OP_INEQ     [reduce using rule 67 (expr)]
    OP_LESS     [reduce using rule 67 (expr)]
    OP_EQLESS   [reduce using rule 67 (expr)]
    OP_MORE     [reduce using rule 67 (expr)]
    OP_EQMORE   [reduce using rule 67 (expr)]
    OP_ASSIGN   [reduce using rule 67 (expr)]
    OP_PLUSEQ   [reduce using rule 67 (expr)]
    OP_MINUSEQ  [reduce using rule 67 (expr)]
    OP_MULEQ    [reduce using rule 67 (expr)]
    OP_DIVEQ    [reduce using rule 67 (expr)]
    OP_MODEQ    [reduce using rule 67 (expr)]
    OP_COMA     [reduce using rule 67 (expr)]
    OP_DOT      [reduce using rule 67 (expr)]
    $default    reduce using rule 67 (expr)


State 118

    3 final_program: program main main_program . KW_ENDDEF OP_SEMI program
    4              | program main main_program . KW_ENDDEF OP_SEMI
   30 main_program: main_program . local_declarations
   31 local_declarations: . var_declarations
   32                   | . expr OP_SEMI
   33                   | . conditions KW_ENDIF OP_SEMI
   34                   | . while_loop KW_ENDWHILE OP_SEMI
   35                   | . for_loop KW_ENDFOR OP_SEMI
   36                   | . KW_BREAK OP_SEMI
   37                   | . KW_CONTINUE OP_SEMI
   38 var_declarations: . variable_types OP_ASSIGN expr OP_SEMI
   39                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN expr OP_SEMI
   40                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   41                 | . variable_types OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   42                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_MEAN types OP_SEMI
   43                 | . comp_types_of_declarations OP_MEAN types OP_SEMI
   44                 | . KW_CONST comp_types_of_declarations OP_ASSIGN data_types OP_MEAN types OP_SEMI
   45                 | . KW_CONST comp_types_of_declarations OP_ASSIGN operators data_types OP_MEAN types OP_SEMI
   46 conditions: . KW_IF OP_PAR_L expr OP_PAR_R OP_MEAN main_program
   47           | . KW_IF OP_PAR_L expr OP_PAR_R OP_MEAN comp_function_code
   48           | . conditions KW_ELSE OP_MEAN main_program
   49 while_loop: . KW_WHILE OP_PAR_L expr OP_PAR_R OP_MEAN main_program
   50           | . KW_WHILE OP_PAR_L expr OP_PAR_R OP_MEAN comp_function_code
   51 for_loop: . KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_BRA_R OP_MEAN main_program
   52         | . KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_BRA_R OP_MEAN comp_function_code
   53         | . KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_MEAN expr OP_BRA_R OP_MEAN main_program
   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   56 comp_types_of_declarations: . variable_types
   57                           | . comp_types_of_declarations OP_COMA variable_types
   58                           | . comp_types_of_declarations OP_COMA variable_types OP_BRA_L legal_array_index OP_BRA_R
   59 expr: . %empty  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_SEMI, OP_COMA, OP_DOT]
   60     | . TK_STRING
   61     | . TK_INT
   62     | . TK_REAL
   63     | . KW_TRUE
   64     | . KW_FALSE
   65     | . variable_types OP_PAR_L OP_PAR_R
   66     | . variable_types OP_PAR_L expr OP_PAR_R
   67     | . operators expr
   68     | . variable_types
   69     | . variable_types OP_BRA_L legal_array_index OP_BRA_R
   70     | . variable_types OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | . variable_types OP_BRA_L variable_types OP_BRA_R
   72     | . OP_POINTER expr
   73     | . expr OP_COMA expr
   74     | . expr OP_DOT expr
   75     | . expr OP_PLUS expr
   76     | . expr OP_MINUS expr
   77     | . expr OP_MUL expr
   78     | . expr OP_DIV expr
   79     | . expr OP_MOD expr
   80     | . expr OP_EQ expr
   81     | . expr OP_INEQ expr
   82     | . expr OP_LESS expr
   83     | . expr OP_EQLESS expr
   84     | . expr OP_MORE expr
   85     | . expr OP_EQMORE expr
   86     | . expr OP_ASSIGN expr
   87     | . expr KW_AND expr
   88     | . expr KW_OR expr
   89     | . expr KW_NOT expr
   90     | . expr OP_PLUSEQ expr
   91     | . expr OP_MINUSEQ expr
   92     | . expr OP_MULEQ expr
   93     | . expr OP_DIVEQ expr
   94     | . expr OP_MODEQ expr
   95     | . OP_PAR_L expr OP_PAR_R
   96     | . OP_BRA_L expr OP_BRA_L
   97     | . OP_SEMI
  108 operators: . OP_PLUS
  109          | . OP_MINUS
  110          | . OP_MUL
  111          | . OP_DIV
  112          | . OP_MOD
  113          | . OP_POWER
  114          | . OP_EQ
  115          | . OP_INEQ
  116          | . OP_LESS
  117          | . OP_EQLESS
  118          | . OP_MORE
  119          | . OP_EQMORE
  120          | . OP_ASSIGN
  121          | . OP_PLUSEQ
  122          | . OP_MINUSEQ
  123          | . OP_MULEQ
  124          | . OP_DIVEQ
  125          | . OP_MODEQ

    TK_STRING    shift, and go to state 23
    TK_IDENT     shift, and go to state 1
    TK_INT       shift, and go to state 24
    TK_REAL      shift, and go to state 25
    KW_HASH      shift, and go to state 2
    KW_IF        shift, and go to state 26
    KW_FALSE     shift, and go to state 27
    KW_FOR       shift, and go to state 28
    KW_BREAK     shift, and go to state 29
    KW_CONST     shift, and go to state 4
    KW_CONTINUE  shift, and go to state 30
    KW_ENDDEF    shift, and go to state 192
    KW_WHILE     shift, and go to state 31
    KW_TRUE      shift, and go to state 32
    OP_PLUS      shift, and go to state 33
    OP_MINUS     shift, and go to state 34
    OP_MUL       shift, and go to state 35
    OP_DIV       shift, and go to state 36
    OP_MOD       shift, and go to state 37
    OP_POWER     shift, and go to state 38
    OP_EQ        shift, and go to state 39
    OP_INEQ      shift, and go to state 40
    OP_LESS      shift, and go to state 41
    OP_EQLESS    shift, and go to state 42
    OP_MORE      shift, and go to state 43
    OP_EQMORE    shift, and go to state 44
    OP_ASSIGN    shift, and go to state 45
    OP_PLUSEQ    shift, and go to state 46
    OP_MINUSEQ   shift, and go to state 47
    OP_MULEQ     shift, and go to state 48
    OP_DIVEQ     shift, and go to state 49
    OP_MODEQ     shift, and go to state 50
    OP_POINTER   shift, and go to state 51
    OP_PAR_L     shift, and go to state 52
    OP_SEMI      shift, and go to state 53
    OP_BRA_L     shift, and go to state 54

    OP_PLUS     [reduce using rule 59 (expr)]
    OP_MINUS    [reduce using rule 59 (expr)]
    OP_MUL      [reduce using rule 59 (expr)]
    OP_DIV      [reduce using rule 59 (expr)]
    OP_MOD      [reduce using rule 59 (expr)]
    OP_EQ       [reduce using rule 59 (expr)]
    OP_INEQ     [reduce using rule 59 (expr)]
    OP_LESS     [reduce using rule 59 (expr)]
    OP_EQLESS   [reduce using rule 59 (expr)]
    OP_MORE     [reduce using rule 59 (expr)]
    OP_EQMORE   [reduce using rule 59 (expr)]
    OP_ASSIGN   [reduce using rule 59 (expr)]
    OP_PLUSEQ   [reduce using rule 59 (expr)]
    OP_MINUSEQ  [reduce using rule 59 (expr)]
    OP_MULEQ    [reduce using rule 59 (expr)]
    OP_DIVEQ    [reduce using rule 59 (expr)]
    OP_MODEQ    [reduce using rule 59 (expr)]
    OP_SEMI     [reduce using rule 59 (expr)]
    $default    reduce using rule 59 (expr)

    local_declarations          go to state 87
    var_declarations            go to state 57
    conditions                  go to state 58
    while_loop                  go to state 59
    for_loop                    go to state 60
    variable_types              go to state 61
    comp_types_of_declarations  go to state 15
    expr                        go to state 62
    operators                   go to state 63


State 119

   13 global_declarations: func_declaration KW_RETURN expr . OP_SEMI KW_ENDDEF OP_SEMI
   73 expr: expr . OP_COMA expr
   74     | expr . OP_DOT expr
   75     | expr . OP_PLUS expr
   76     | expr . OP_MINUS expr
   77     | expr . OP_MUL expr
   78     | expr . OP_DIV expr
   79     | expr . OP_MOD expr
   80     | expr . OP_EQ expr
   81     | expr . OP_INEQ expr
   82     | expr . OP_LESS expr
   83     | expr . OP_EQLESS expr
   84     | expr . OP_MORE expr
   85     | expr . OP_EQMORE expr
   86     | expr . OP_ASSIGN expr
   87     | expr . KW_AND expr
   88     | expr . KW_OR expr
   89     | expr . KW_NOT expr
   90     | expr . OP_PLUSEQ expr
   91     | expr . OP_MINUSEQ expr
   92     | expr . OP_MULEQ expr
   93     | expr . OP_DIVEQ expr
   94     | expr . OP_MODEQ expr

    KW_NOT      shift, and go to state 94
    KW_AND      shift, and go to state 95
    KW_OR       shift, and go to state 96
    OP_PLUS     shift, and go to state 97
    OP_MINUS    shift, and go to state 98
    OP_MUL      shift, and go to state 99
    OP_DIV      shift, and go to state 100
    OP_MOD      shift, and go to state 101
    OP_EQ       shift, and go to state 102
    OP_INEQ     shift, and go to state 103
    OP_LESS     shift, and go to state 104
    OP_EQLESS   shift, and go to state 105
    OP_MORE     shift, and go to state 106
    OP_EQMORE   shift, and go to state 107
    OP_ASSIGN   shift, and go to state 108
    OP_PLUSEQ   shift, and go to state 109
    OP_MINUSEQ  shift, and go to state 110
    OP_MULEQ    shift, and go to state 111
    OP_DIVEQ    shift, and go to state 112
    OP_MODEQ    shift, and go to state 113
    OP_SEMI     shift, and go to state 193
    OP_COMA     shift, and go to state 115
    OP_DOT      shift, and go to state 116


State 120

   14 global_declarations: func_declaration function_code KW_ENDDEF . OP_SEMI

    OP_SEMI  shift, and go to state 194


State 121

   11 global_declarations: func_declaration function_code KW_RETURN . OP_SEMI KW_ENDDEF OP_SEMI
   12                    | func_declaration function_code KW_RETURN . expr OP_SEMI KW_ENDDEF OP_SEMI
   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   59 expr: . %empty  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_SEMI, OP_COMA, OP_DOT]
   60     | . TK_STRING
   61     | . TK_INT
   62     | . TK_REAL
   63     | . KW_TRUE
   64     | . KW_FALSE
   65     | . variable_types OP_PAR_L OP_PAR_R
   66     | . variable_types OP_PAR_L expr OP_PAR_R
   67     | . operators expr
   68     | . variable_types
   69     | . variable_types OP_BRA_L legal_array_index OP_BRA_R
   70     | . variable_types OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | . variable_types OP_BRA_L variable_types OP_BRA_R
   72     | . OP_POINTER expr
   73     | . expr OP_COMA expr
   74     | . expr OP_DOT expr
   75     | . expr OP_PLUS expr
   76     | . expr OP_MINUS expr
   77     | . expr OP_MUL expr
   78     | . expr OP_DIV expr
   79     | . expr OP_MOD expr
   80     | . expr OP_EQ expr
   81     | . expr OP_INEQ expr
   82     | . expr OP_LESS expr
   83     | . expr OP_EQLESS expr
   84     | . expr OP_MORE expr
   85     | . expr OP_EQMORE expr
   86     | . expr OP_ASSIGN expr
   87     | . expr KW_AND expr
   88     | . expr KW_OR expr
   89     | . expr KW_NOT expr
   90     | . expr OP_PLUSEQ expr
   91     | . expr OP_MINUSEQ expr
   92     | . expr OP_MULEQ expr
   93     | . expr OP_DIVEQ expr
   94     | . expr OP_MODEQ expr
   95     | . OP_PAR_L expr OP_PAR_R
   96     | . OP_BRA_L expr OP_BRA_L
   97     | . OP_SEMI
  108 operators: . OP_PLUS
  109          | . OP_MINUS
  110          | . OP_MUL
  111          | . OP_DIV
  112          | . OP_MOD
  113          | . OP_POWER
  114          | . OP_EQ
  115          | . OP_INEQ
  116          | . OP_LESS
  117          | . OP_EQLESS
  118          | . OP_MORE
  119          | . OP_EQMORE
  120          | . OP_ASSIGN
  121          | . OP_PLUSEQ
  122          | . OP_MINUSEQ
  123          | . OP_MULEQ
  124          | . OP_DIVEQ
  125          | . OP_MODEQ

    TK_STRING   shift, and go to state 23
    TK_IDENT    shift, and go to state 1
    TK_INT      shift, and go to state 24
    TK_REAL     shift, and go to state 25
    KW_HASH     shift, and go to state 2
    KW_FALSE    shift, and go to state 27
    KW_TRUE     shift, and go to state 32
    OP_PLUS     shift, and go to state 33
    OP_MINUS    shift, and go to state 34
    OP_MUL      shift, and go to state 35
    OP_DIV      shift, and go to state 36
    OP_MOD      shift, and go to state 37
    OP_POWER    shift, and go to state 38
    OP_EQ       shift, and go to state 39
    OP_INEQ     shift, and go to state 40
    OP_LESS     shift, and go to state 41
    OP_EQLESS   shift, and go to state 42
    OP_MORE     shift, and go to state 43
    OP_EQMORE   shift, and go to state 44
    OP_ASSIGN   shift, and go to state 45
    OP_PLUSEQ   shift, and go to state 46
    OP_MINUSEQ  shift, and go to state 47
    OP_MULEQ    shift, and go to state 48
    OP_DIVEQ    shift, and go to state 49
    OP_MODEQ    shift, and go to state 50
    OP_POINTER  shift, and go to state 51
    OP_PAR_L    shift, and go to state 52
    OP_SEMI     shift, and go to state 195
    OP_BRA_L    shift, and go to state 54

    OP_PLUS     [reduce using rule 59 (expr)]
    OP_MINUS    [reduce using rule 59 (expr)]
    OP_MUL      [reduce using rule 59 (expr)]
    OP_DIV      [reduce using rule 59 (expr)]
    OP_MOD      [reduce using rule 59 (expr)]
    OP_EQ       [reduce using rule 59 (expr)]
    OP_INEQ     [reduce using rule 59 (expr)]
    OP_LESS     [reduce using rule 59 (expr)]
    OP_EQLESS   [reduce using rule 59 (expr)]
    OP_MORE     [reduce using rule 59 (expr)]
    OP_EQMORE   [reduce using rule 59 (expr)]
    OP_ASSIGN   [reduce using rule 59 (expr)]
    OP_PLUSEQ   [reduce using rule 59 (expr)]
    OP_MINUSEQ  [reduce using rule 59 (expr)]
    OP_MULEQ    [reduce using rule 59 (expr)]
    OP_DIVEQ    [reduce using rule 59 (expr)]
    OP_MODEQ    [reduce using rule 59 (expr)]
    OP_SEMI     [reduce using rule 59 (expr)]
    $default    reduce using rule 59 (expr)

    variable_types  go to state 82
    expr            go to state 196
    operators       go to state 63


State 122

   28 function_code: function_code local_declarations .

    $default  reduce using rule 28 (function_code)


State 123

   41 var_declarations: variable_types OP_ASSIGN variable_types . OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   65 expr: variable_types . OP_PAR_L OP_PAR_R
   66     | variable_types . OP_PAR_L expr OP_PAR_R
   68     | variable_types .  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_SEMI, OP_COMA, OP_DOT]
   69     | variable_types . OP_BRA_L legal_array_index OP_BRA_R
   70     | variable_types . OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | variable_types . OP_BRA_L variable_types OP_BRA_R

    OP_PAR_L  shift, and go to state 92
    OP_BRA_L  shift, and go to state 197

    $default  reduce using rule 68 (expr)


State 124

   38 var_declarations: variable_types OP_ASSIGN expr . OP_SEMI
   73 expr: expr . OP_COMA expr
   74     | expr . OP_DOT expr
   75     | expr . OP_PLUS expr
   76     | expr . OP_MINUS expr
   77     | expr . OP_MUL expr
   78     | expr . OP_DIV expr
   79     | expr . OP_MOD expr
   80     | expr . OP_EQ expr
   81     | expr . OP_INEQ expr
   82     | expr . OP_LESS expr
   83     | expr . OP_EQLESS expr
   84     | expr . OP_MORE expr
   85     | expr . OP_EQMORE expr
   86     | expr . OP_ASSIGN expr
   87     | expr . KW_AND expr
   88     | expr . KW_OR expr
   89     | expr . KW_NOT expr
   90     | expr . OP_PLUSEQ expr
   91     | expr . OP_MINUSEQ expr
   92     | expr . OP_MULEQ expr
   93     | expr . OP_DIVEQ expr
   94     | expr . OP_MODEQ expr

    KW_NOT      shift, and go to state 94
    KW_AND      shift, and go to state 95
    KW_OR       shift, and go to state 96
    OP_PLUS     shift, and go to state 97
    OP_MINUS    shift, and go to state 98
    OP_MUL      shift, and go to state 99
    OP_DIV      shift, and go to state 100
    OP_MOD      shift, and go to state 101
    OP_EQ       shift, and go to state 102
    OP_INEQ     shift, and go to state 103
    OP_LESS     shift, and go to state 104
    OP_EQLESS   shift, and go to state 105
    OP_MORE     shift, and go to state 106
    OP_EQMORE   shift, and go to state 107
    OP_ASSIGN   shift, and go to state 108
    OP_PLUSEQ   shift, and go to state 109
    OP_MINUSEQ  shift, and go to state 110
    OP_MULEQ    shift, and go to state 111
    OP_DIVEQ    shift, and go to state 112
    OP_MODEQ    shift, and go to state 113
    OP_SEMI     shift, and go to state 198
    OP_COMA     shift, and go to state 115
    OP_DOT      shift, and go to state 116


State 125

   99 legal_array_index: TK_IDENT .

    $default  reduce using rule 99 (legal_array_index)


State 126

   98 legal_array_index: TK_INT .

    $default  reduce using rule 98 (legal_array_index)


State 127

   39 var_declarations: variable_types OP_BRA_L legal_array_index . OP_BRA_R OP_ASSIGN expr OP_SEMI
   40                 | variable_types OP_BRA_L legal_array_index . OP_BRA_R OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   42                 | variable_types OP_BRA_L legal_array_index . OP_BRA_R OP_MEAN types OP_SEMI

    OP_BRA_R  shift, and go to state 199


State 128

   57 comp_types_of_declarations: comp_types_of_declarations OP_COMA variable_types .  [OP_ASSIGN, OP_COMA, OP_MEAN]
   58                           | comp_types_of_declarations OP_COMA variable_types . OP_BRA_L legal_array_index OP_BRA_R

    OP_BRA_L  shift, and go to state 200

    $default  reduce using rule 57 (comp_types_of_declarations)


State 129

  107 types: TK_IDENT .

    $default  reduce using rule 107 (types)


State 130

  104 types: KW_INTEGER .

    $default  reduce using rule 104 (types)


State 131

  105 types: KW_SCALAR .

    $default  reduce using rule 105 (types)


State 132

  103 types: KW_STR .

    $default  reduce using rule 103 (types)


State 133

  106 types: KW_BOOLEAN .

    $default  reduce using rule 106 (types)


State 134

   43 var_declarations: comp_types_of_declarations OP_MEAN types . OP_SEMI

    OP_SEMI  shift, and go to state 201


State 135

   22 func_parameters: TK_IDENT . OP_MEAN types
   24                | TK_IDENT . OP_BRA_L OP_BRA_R OP_MEAN types

    OP_BRA_L  shift, and go to state 202
    OP_MEAN   shift, and go to state 203


State 136

   19 func_declaration: KW_DEF TK_IDENT OP_PAR_L OP_PAR_R . OP_MINUS OP_MORE types OP_MEAN
   20                 | KW_DEF TK_IDENT OP_PAR_L OP_PAR_R . OP_MEAN

    OP_MINUS  shift, and go to state 204
    OP_MEAN   shift, and go to state 205


State 137

   16 func_declaration: KW_DEF TK_IDENT OP_PAR_L func_parameters . OP_PAR_R OP_MINUS OP_MORE types OP_MEAN
   17                 | KW_DEF TK_IDENT OP_PAR_L func_parameters . OP_PAR_R OP_MINUS OP_MORE KW_VOID OP_MEAN
   18                 | KW_DEF TK_IDENT OP_PAR_L func_parameters . OP_PAR_R OP_MEAN
   23 func_parameters: func_parameters . OP_COMA TK_IDENT OP_MEAN types
   25                | func_parameters . OP_COMA TK_IDENT OP_BRA_L OP_BRA_R OP_MEAN types

    OP_PAR_R  shift, and go to state 206
    OP_COMA   shift, and go to state 207


State 138

    7 main: KW_DEF KW_MAIN OP_PAR_L OP_PAR_R . OP_MEAN

    OP_MEAN  shift, and go to state 208


State 139

  101 data_types: TK_STRING .

    $default  reduce using rule 101 (data_types)


State 140

  100 data_types: TK_INT .

    $default  reduce using rule 100 (data_types)


State 141

  102 data_types: TK_REAL .

    $default  reduce using rule 102 (data_types)


State 142

   44 var_declarations: KW_CONST comp_types_of_declarations OP_ASSIGN data_types . OP_MEAN types OP_SEMI

    OP_MEAN  shift, and go to state 209


State 143

   45 var_declarations: KW_CONST comp_types_of_declarations OP_ASSIGN operators . data_types OP_MEAN types OP_SEMI
  100 data_types: . TK_INT
  101           | . TK_STRING
  102           | . TK_REAL

    TK_STRING  shift, and go to state 139
    TK_INT     shift, and go to state 140
    TK_REAL    shift, and go to state 141

    data_types  go to state 210


State 144

  135 comp_var_declarations: KW_HASH . TK_IDENT OP_ASSIGN expr OP_SEMI
  136                      | KW_HASH . TK_IDENT OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN expr OP_SEMI
  137                      | KW_HASH . TK_IDENT OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN KW_HASH TK_IDENT OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
  138                      | KW_HASH . TK_IDENT OP_ASSIGN TK_IDENT OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
  139                      | KW_HASH . TK_IDENT OP_BRA_L legal_array_index OP_BRA_R OP_MEAN types OP_SEMI
  143 comp_initialise_types_of_declarations: KW_HASH . TK_IDENT

    TK_IDENT  shift, and go to state 211


State 145

  149 comp_func_declaration: KW_DEF . TK_IDENT OP_PAR_L func_parameters OP_PAR_R OP_MINUS OP_MORE types OP_MEAN
  150                      | KW_DEF . TK_IDENT OP_PAR_L func_parameters OP_PAR_R OP_MEAN
  151                      | KW_DEF . TK_IDENT OP_PAR_L OP_PAR_R OP_MINUS OP_MORE types OP_MEAN
  152                      | KW_DEF . TK_IDENT OP_PAR_L OP_PAR_R OP_MEAN

    TK_IDENT  shift, and go to state 212


State 146

  141 comp_var_declarations: KW_CONST . comp_initialise_types_of_declarations OP_ASSIGN data_types OP_MEAN types OP_SEMI
  142                      | KW_CONST . comp_initialise_types_of_declarations OP_ASSIGN operators data_types OP_MEAN types OP_SEMI
  143 comp_initialise_types_of_declarations: . KW_HASH TK_IDENT
  144                                      | . comp_initialise_types_of_declarations OP_COMA KW_HASH TK_IDENT
  145                                      | . comp_initialise_types_of_declarations OP_COMA KW_HASH TK_IDENT OP_BRA_L legal_array_index OP_BRA_R

    KW_HASH  shift, and go to state 213

    comp_initialise_types_of_declarations  go to state 214


State 147

   15 global_declarations: KW_COMP TK_IDENT OP_MEAN comp_code . KW_ENDCOMP OP_SEMI
  127 comp_code: comp_code . comp_local_declarations
  128 comp_local_declarations: . %empty  [KW_HASH, KW_DEF, KW_ENDCOMP, KW_CONST]
  129                        | . comp_initialise_local_declarations
  130                        | . comp_func_declaration comp_function_code KW_RETURN OP_SEMI KW_ENDDEF OP_SEMI
  131                        | . comp_func_declaration comp_function_code KW_RETURN expr OP_SEMI KW_ENDDEF OP_SEMI
  132                        | . comp_func_declaration KW_RETURN expr OP_SEMI KW_ENDDEF OP_SEMI
  133                        | . comp_func_declaration comp_function_code KW_ENDDEF OP_SEMI
  134 comp_initialise_local_declarations: . comp_var_declarations
  135 comp_var_declarations: . KW_HASH TK_IDENT OP_ASSIGN expr OP_SEMI
  136                      | . KW_HASH TK_IDENT OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN expr OP_SEMI
  137                      | . KW_HASH TK_IDENT OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN KW_HASH TK_IDENT OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
  138                      | . KW_HASH TK_IDENT OP_ASSIGN TK_IDENT OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
  139                      | . KW_HASH TK_IDENT OP_BRA_L legal_array_index OP_BRA_R OP_MEAN types OP_SEMI
  140                      | . comp_initialise_types_of_declarations OP_MEAN types OP_SEMI
  141                      | . KW_CONST comp_initialise_types_of_declarations OP_ASSIGN data_types OP_MEAN types OP_SEMI
  142                      | . KW_CONST comp_initialise_types_of_declarations OP_ASSIGN operators data_types OP_MEAN types OP_SEMI
  143 comp_initialise_types_of_declarations: . KW_HASH TK_IDENT
  144                                      | . comp_initialise_types_of_declarations OP_COMA KW_HASH TK_IDENT
  145                                      | . comp_initialise_types_of_declarations OP_COMA KW_HASH TK_IDENT OP_BRA_L legal_array_index OP_BRA_R
  149 comp_func_declaration: . KW_DEF TK_IDENT OP_PAR_L func_parameters OP_PAR_R OP_MINUS OP_MORE types OP_MEAN
  150                      | . KW_DEF TK_IDENT OP_PAR_L func_parameters OP_PAR_R OP_MEAN
  151                      | . KW_DEF TK_IDENT OP_PAR_L OP_PAR_R OP_MINUS OP_MORE types OP_MEAN
  152                      | . KW_DEF TK_IDENT OP_PAR_L OP_PAR_R OP_MEAN

    KW_HASH     shift, and go to state 144
    KW_DEF      shift, and go to state 145
    KW_ENDCOMP  shift, and go to state 215
    KW_CONST    shift, and go to state 146

    KW_HASH     [reduce using rule 128 (comp_local_declarations)]
    KW_DEF      [reduce using rule 128 (comp_local_declarations)]
    KW_ENDCOMP  [reduce using rule 128 (comp_local_declarations)]
    KW_CONST    [reduce using rule 128 (comp_local_declarations)]

    comp_local_declarations                go to state 216
    comp_initialise_local_declarations     go to state 149
    comp_var_declarations                  go to state 150
    comp_initialise_types_of_declarations  go to state 151
    comp_func_declaration                  go to state 152


State 148

  126 comp_code: comp_local_declarations .

    $default  reduce using rule 126 (comp_code)


State 149

  129 comp_local_declarations: comp_initialise_local_declarations .

    $default  reduce using rule 129 (comp_local_declarations)


State 150

  134 comp_initialise_local_declarations: comp_var_declarations .

    $default  reduce using rule 134 (comp_initialise_local_declarations)


State 151

  140 comp_var_declarations: comp_initialise_types_of_declarations . OP_MEAN types OP_SEMI
  144 comp_initialise_types_of_declarations: comp_initialise_types_of_declarations . OP_COMA KW_HASH TK_IDENT
  145                                      | comp_initialise_types_of_declarations . OP_COMA KW_HASH TK_IDENT OP_BRA_L legal_array_index OP_BRA_R

    OP_COMA  shift, and go to state 217
    OP_MEAN  shift, and go to state 218


State 152

   31 local_declarations: . var_declarations
   32                   | . expr OP_SEMI
   33                   | . conditions KW_ENDIF OP_SEMI
   34                   | . while_loop KW_ENDWHILE OP_SEMI
   35                   | . for_loop KW_ENDFOR OP_SEMI
   36                   | . KW_BREAK OP_SEMI
   37                   | . KW_CONTINUE OP_SEMI
   38 var_declarations: . variable_types OP_ASSIGN expr OP_SEMI
   39                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN expr OP_SEMI
   40                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   41                 | . variable_types OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   42                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_MEAN types OP_SEMI
   43                 | . comp_types_of_declarations OP_MEAN types OP_SEMI
   44                 | . KW_CONST comp_types_of_declarations OP_ASSIGN data_types OP_MEAN types OP_SEMI
   45                 | . KW_CONST comp_types_of_declarations OP_ASSIGN operators data_types OP_MEAN types OP_SEMI
   46 conditions: . KW_IF OP_PAR_L expr OP_PAR_R OP_MEAN main_program
   47           | . KW_IF OP_PAR_L expr OP_PAR_R OP_MEAN comp_function_code
   48           | . conditions KW_ELSE OP_MEAN main_program
   49 while_loop: . KW_WHILE OP_PAR_L expr OP_PAR_R OP_MEAN main_program
   50           | . KW_WHILE OP_PAR_L expr OP_PAR_R OP_MEAN comp_function_code
   51 for_loop: . KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_BRA_R OP_MEAN main_program
   52         | . KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_BRA_R OP_MEAN comp_function_code
   53         | . KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_MEAN expr OP_BRA_R OP_MEAN main_program
   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   56 comp_types_of_declarations: . variable_types
   57                           | . comp_types_of_declarations OP_COMA variable_types
   58                           | . comp_types_of_declarations OP_COMA variable_types OP_BRA_L legal_array_index OP_BRA_R
   59 expr: . %empty  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_SEMI, OP_COMA, OP_DOT]
   60     | . TK_STRING
   61     | . TK_INT
   62     | . TK_REAL
   63     | . KW_TRUE
   64     | . KW_FALSE
   65     | . variable_types OP_PAR_L OP_PAR_R
   66     | . variable_types OP_PAR_L expr OP_PAR_R
   67     | . operators expr
   68     | . variable_types
   69     | . variable_types OP_BRA_L legal_array_index OP_BRA_R
   70     | . variable_types OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | . variable_types OP_BRA_L variable_types OP_BRA_R
   72     | . OP_POINTER expr
   73     | . expr OP_COMA expr
   74     | . expr OP_DOT expr
   75     | . expr OP_PLUS expr
   76     | . expr OP_MINUS expr
   77     | . expr OP_MUL expr
   78     | . expr OP_DIV expr
   79     | . expr OP_MOD expr
   80     | . expr OP_EQ expr
   81     | . expr OP_INEQ expr
   82     | . expr OP_LESS expr
   83     | . expr OP_EQLESS expr
   84     | . expr OP_MORE expr
   85     | . expr OP_EQMORE expr
   86     | . expr OP_ASSIGN expr
   87     | . expr KW_AND expr
   88     | . expr KW_OR expr
   89     | . expr KW_NOT expr
   90     | . expr OP_PLUSEQ expr
   91     | . expr OP_MINUSEQ expr
   92     | . expr OP_MULEQ expr
   93     | . expr OP_DIVEQ expr
   94     | . expr OP_MODEQ expr
   95     | . OP_PAR_L expr OP_PAR_R
   96     | . OP_BRA_L expr OP_BRA_L
   97     | . OP_SEMI
  108 operators: . OP_PLUS
  109          | . OP_MINUS
  110          | . OP_MUL
  111          | . OP_DIV
  112          | . OP_MOD
  113          | . OP_POWER
  114          | . OP_EQ
  115          | . OP_INEQ
  116          | . OP_LESS
  117          | . OP_EQLESS
  118          | . OP_MORE
  119          | . OP_EQMORE
  120          | . OP_ASSIGN
  121          | . OP_PLUSEQ
  122          | . OP_MINUSEQ
  123          | . OP_MULEQ
  124          | . OP_DIVEQ
  125          | . OP_MODEQ
  130 comp_local_declarations: comp_func_declaration . comp_function_code KW_RETURN OP_SEMI KW_ENDDEF OP_SEMI
  131                        | comp_func_declaration . comp_function_code KW_RETURN expr OP_SEMI KW_ENDDEF OP_SEMI
  132                        | comp_func_declaration . KW_RETURN expr OP_SEMI KW_ENDDEF OP_SEMI
  133                        | comp_func_declaration . comp_function_code KW_ENDDEF OP_SEMI
  146 comp_function_code: . %empty  [TK_STRING, TK_IDENT, TK_INT, TK_REAL, KW_HASH, KW_IF, KW_FALSE, KW_FOR, KW_BREAK, KW_CONST, KW_CONTINUE, KW_ENDDEF, KW_NOT, KW_WHILE, KW_AND, KW_RETURN, KW_TRUE, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_POWER, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_POINTER, OP_PAR_L, OP_SEMI, OP_COMA, OP_BRA_L, OP_DOT]
  147                   | . local_declarations
  148                   | . comp_function_code local_declarations

    TK_STRING    shift, and go to state 23
    TK_IDENT     shift, and go to state 1
    TK_INT       shift, and go to state 24
    TK_REAL      shift, and go to state 25
    KW_HASH      shift, and go to state 2
    KW_IF        shift, and go to state 26
    KW_FALSE     shift, and go to state 27
    KW_FOR       shift, and go to state 28
    KW_BREAK     shift, and go to state 29
    KW_CONST     shift, and go to state 4
    KW_CONTINUE  shift, and go to state 30
    KW_WHILE     shift, and go to state 31
    KW_RETURN    shift, and go to state 219
    KW_TRUE      shift, and go to state 32
    OP_PLUS      shift, and go to state 33
    OP_MINUS     shift, and go to state 34
    OP_MUL       shift, and go to state 35
    OP_DIV       shift, and go to state 36
    OP_MOD       shift, and go to state 37
    OP_POWER     shift, and go to state 38
    OP_EQ        shift, and go to state 39
    OP_INEQ      shift, and go to state 40
    OP_LESS      shift, and go to state 41
    OP_EQLESS    shift, and go to state 42
    OP_MORE      shift, and go to state 43
    OP_EQMORE    shift, and go to state 44
    OP_ASSIGN    shift, and go to state 45
    OP_PLUSEQ    shift, and go to state 46
    OP_MINUSEQ   shift, and go to state 47
    OP_MULEQ     shift, and go to state 48
    OP_DIVEQ     shift, and go to state 49
    OP_MODEQ     shift, and go to state 50
    OP_POINTER   shift, and go to state 51
    OP_PAR_L     shift, and go to state 52
    OP_SEMI      shift, and go to state 53
    OP_BRA_L     shift, and go to state 54

    TK_STRING    [reduce using rule 146 (comp_function_code)]
    TK_IDENT     [reduce using rule 146 (comp_function_code)]
    TK_INT       [reduce using rule 146 (comp_function_code)]
    TK_REAL      [reduce using rule 146 (comp_function_code)]
    KW_HASH      [reduce using rule 146 (comp_function_code)]
    KW_IF        [reduce using rule 146 (comp_function_code)]
    KW_FALSE     [reduce using rule 146 (comp_function_code)]
    KW_FOR       [reduce using rule 146 (comp_function_code)]
    KW_BREAK     [reduce using rule 146 (comp_function_code)]
    KW_CONST     [reduce using rule 146 (comp_function_code)]
    KW_CONTINUE  [reduce using rule 146 (comp_function_code)]
    KW_ENDDEF    reduce using rule 146 (comp_function_code)
    KW_NOT       reduce using rule 59 (expr)
    KW_NOT       [reduce using rule 146 (comp_function_code)]
    KW_WHILE     [reduce using rule 146 (comp_function_code)]
    KW_AND       reduce using rule 59 (expr)
    KW_AND       [reduce using rule 146 (comp_function_code)]
    KW_RETURN    [reduce using rule 146 (comp_function_code)]
    KW_TRUE      [reduce using rule 146 (comp_function_code)]
    KW_OR        reduce using rule 59 (expr)
    KW_OR        [reduce using rule 146 (comp_function_code)]
    OP_PLUS      [reduce using rule 59 (expr)]
    OP_PLUS      [reduce using rule 146 (comp_function_code)]
    OP_MINUS     [reduce using rule 59 (expr)]
    OP_MINUS     [reduce using rule 146 (comp_function_code)]
    OP_MUL       [reduce using rule 59 (expr)]
    OP_MUL       [reduce using rule 146 (comp_function_code)]
    OP_DIV       [reduce using rule 59 (expr)]
    OP_DIV       [reduce using rule 146 (comp_function_code)]
    OP_MOD       [reduce using rule 59 (expr)]
    OP_MOD       [reduce using rule 146 (comp_function_code)]
    OP_POWER     [reduce using rule 146 (comp_function_code)]
    OP_EQ        [reduce using rule 59 (expr)]
    OP_EQ        [reduce using rule 146 (comp_function_code)]
    OP_INEQ      [reduce using rule 59 (expr)]
    OP_INEQ      [reduce using rule 146 (comp_function_code)]
    OP_LESS      [reduce using rule 59 (expr)]
    OP_LESS      [reduce using rule 146 (comp_function_code)]
    OP_EQLESS    [reduce using rule 59 (expr)]
    OP_EQLESS    [reduce using rule 146 (comp_function_code)]
    OP_MORE      [reduce using rule 59 (expr)]
    OP_MORE      [reduce using rule 146 (comp_function_code)]
    OP_EQMORE    [reduce using rule 59 (expr)]
    OP_EQMORE    [reduce using rule 146 (comp_function_code)]
    OP_ASSIGN    [reduce using rule 59 (expr)]
    OP_ASSIGN    [reduce using rule 146 (comp_function_code)]
    OP_PLUSEQ    [reduce using rule 59 (expr)]
    OP_PLUSEQ    [reduce using rule 146 (comp_function_code)]
    OP_MINUSEQ   [reduce using rule 59 (expr)]
    OP_MINUSEQ   [reduce using rule 146 (comp_function_code)]
    OP_MULEQ     [reduce using rule 59 (expr)]
    OP_MULEQ     [reduce using rule 146 (comp_function_code)]
    OP_DIVEQ     [reduce using rule 59 (expr)]
    OP_DIVEQ     [reduce using rule 146 (comp_function_code)]
    OP_MODEQ     [reduce using rule 59 (expr)]
    OP_MODEQ     [reduce using rule 146 (comp_function_code)]
    OP_POINTER   [reduce using rule 146 (comp_function_code)]
    OP_PAR_L     [reduce using rule 146 (comp_function_code)]
    OP_SEMI      [reduce using rule 59 (expr)]
    OP_SEMI      [reduce using rule 146 (comp_function_code)]
    OP_COMA      reduce using rule 59 (expr)
    OP_COMA      [reduce using rule 146 (comp_function_code)]
    OP_BRA_L     [reduce using rule 146 (comp_function_code)]
    OP_DOT       reduce using rule 59 (expr)
    OP_DOT       [reduce using rule 146 (comp_function_code)]
    $default     reduce using rule 59 (expr)

    local_declarations          go to state 220
    var_declarations            go to state 57
    conditions                  go to state 58
    while_loop                  go to state 59
    for_loop                    go to state 60
    variable_types              go to state 61
    comp_types_of_declarations  go to state 15
    expr                        go to state 62
    operators                   go to state 63
    comp_function_code          go to state 221


State 153

   46 conditions: KW_IF OP_PAR_L expr . OP_PAR_R OP_MEAN main_program
   47           | KW_IF OP_PAR_L expr . OP_PAR_R OP_MEAN comp_function_code
   73 expr: expr . OP_COMA expr
   74     | expr . OP_DOT expr
   75     | expr . OP_PLUS expr
   76     | expr . OP_MINUS expr
   77     | expr . OP_MUL expr
   78     | expr . OP_DIV expr
   79     | expr . OP_MOD expr
   80     | expr . OP_EQ expr
   81     | expr . OP_INEQ expr
   82     | expr . OP_LESS expr
   83     | expr . OP_EQLESS expr
   84     | expr . OP_MORE expr
   85     | expr . OP_EQMORE expr
   86     | expr . OP_ASSIGN expr
   87     | expr . KW_AND expr
   88     | expr . KW_OR expr
   89     | expr . KW_NOT expr
   90     | expr . OP_PLUSEQ expr
   91     | expr . OP_MINUSEQ expr
   92     | expr . OP_MULEQ expr
   93     | expr . OP_DIVEQ expr
   94     | expr . OP_MODEQ expr

    KW_NOT      shift, and go to state 94
    KW_AND      shift, and go to state 95
    KW_OR       shift, and go to state 96
    OP_PLUS     shift, and go to state 97
    OP_MINUS    shift, and go to state 98
    OP_MUL      shift, and go to state 99
    OP_DIV      shift, and go to state 100
    OP_MOD      shift, and go to state 101
    OP_EQ       shift, and go to state 102
    OP_INEQ     shift, and go to state 103
    OP_LESS     shift, and go to state 104
    OP_EQLESS   shift, and go to state 105
    OP_MORE     shift, and go to state 106
    OP_EQMORE   shift, and go to state 107
    OP_ASSIGN   shift, and go to state 108
    OP_PLUSEQ   shift, and go to state 109
    OP_MINUSEQ  shift, and go to state 110
    OP_MULEQ    shift, and go to state 111
    OP_DIVEQ    shift, and go to state 112
    OP_MODEQ    shift, and go to state 113
    OP_PAR_R    shift, and go to state 222
    OP_COMA     shift, and go to state 115
    OP_DOT      shift, and go to state 116


State 154

   51 for_loop: KW_FOR TK_IDENT KW_IN . OP_BRA_L expr OP_MEAN expr OP_BRA_R OP_MEAN main_program
   52         | KW_FOR TK_IDENT KW_IN . OP_BRA_L expr OP_MEAN expr OP_BRA_R OP_MEAN comp_function_code
   53         | KW_FOR TK_IDENT KW_IN . OP_BRA_L expr OP_MEAN expr OP_MEAN expr OP_BRA_R OP_MEAN main_program

    OP_BRA_L  shift, and go to state 223


State 155

   49 while_loop: KW_WHILE OP_PAR_L expr . OP_PAR_R OP_MEAN main_program
   50           | KW_WHILE OP_PAR_L expr . OP_PAR_R OP_MEAN comp_function_code
   73 expr: expr . OP_COMA expr
   74     | expr . OP_DOT expr
   75     | expr . OP_PLUS expr
   76     | expr . OP_MINUS expr
   77     | expr . OP_MUL expr
   78     | expr . OP_DIV expr
   79     | expr . OP_MOD expr
   80     | expr . OP_EQ expr
   81     | expr . OP_INEQ expr
   82     | expr . OP_LESS expr
   83     | expr . OP_EQLESS expr
   84     | expr . OP_MORE expr
   85     | expr . OP_EQMORE expr
   86     | expr . OP_ASSIGN expr
   87     | expr . KW_AND expr
   88     | expr . KW_OR expr
   89     | expr . KW_NOT expr
   90     | expr . OP_PLUSEQ expr
   91     | expr . OP_MINUSEQ expr
   92     | expr . OP_MULEQ expr
   93     | expr . OP_DIVEQ expr
   94     | expr . OP_MODEQ expr

    KW_NOT      shift, and go to state 94
    KW_AND      shift, and go to state 95
    KW_OR       shift, and go to state 96
    OP_PLUS     shift, and go to state 97
    OP_MINUS    shift, and go to state 98
    OP_MUL      shift, and go to state 99
    OP_DIV      shift, and go to state 100
    OP_MOD      shift, and go to state 101
    OP_EQ       shift, and go to state 102
    OP_INEQ     shift, and go to state 103
    OP_LESS     shift, and go to state 104
    OP_EQLESS   shift, and go to state 105
    OP_MORE     shift, and go to state 106
    OP_EQMORE   shift, and go to state 107
    OP_ASSIGN   shift, and go to state 108
    OP_PLUSEQ   shift, and go to state 109
    OP_MINUSEQ  shift, and go to state 110
    OP_MULEQ    shift, and go to state 111
    OP_DIVEQ    shift, and go to state 112
    OP_MODEQ    shift, and go to state 113
    OP_PAR_R    shift, and go to state 224
    OP_COMA     shift, and go to state 115
    OP_DOT      shift, and go to state 116


State 156

   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   69 expr: variable_types OP_BRA_L . legal_array_index OP_BRA_R
   70     | variable_types OP_BRA_L . KW_HASH legal_array_index OP_BRA_R
   71     | variable_types OP_BRA_L . variable_types OP_BRA_R
   98 legal_array_index: . TK_INT
   99                  | . TK_IDENT

    TK_IDENT  shift, and go to state 166
    TK_INT    shift, and go to state 126
    KW_HASH   shift, and go to state 167

    variable_types     go to state 168
    legal_array_index  go to state 225


State 157

   95 expr: OP_PAR_L expr OP_PAR_R .

    $default  reduce using rule 95 (expr)


State 158

   96 expr: OP_BRA_L expr OP_BRA_L .

    $default  reduce using rule 96 (expr)


State 159

    5 final_program: main main_program KW_ENDDEF OP_SEMI . program
    6              | main main_program KW_ENDDEF OP_SEMI .  [$end]
    8 program: . global_declarations
    9        | . program global_declarations
   10 global_declarations: . var_declarations
   11                    | . func_declaration function_code KW_RETURN OP_SEMI KW_ENDDEF OP_SEMI
   12                    | . func_declaration function_code KW_RETURN expr OP_SEMI KW_ENDDEF OP_SEMI
   13                    | . func_declaration KW_RETURN expr OP_SEMI KW_ENDDEF OP_SEMI
   14                    | . func_declaration function_code KW_ENDDEF OP_SEMI
   15                    | . KW_COMP TK_IDENT OP_MEAN comp_code KW_ENDCOMP OP_SEMI
   16 func_declaration: . KW_DEF TK_IDENT OP_PAR_L func_parameters OP_PAR_R OP_MINUS OP_MORE types OP_MEAN
   17                 | . KW_DEF TK_IDENT OP_PAR_L func_parameters OP_PAR_R OP_MINUS OP_MORE KW_VOID OP_MEAN
   18                 | . KW_DEF TK_IDENT OP_PAR_L func_parameters OP_PAR_R OP_MEAN
   19                 | . KW_DEF TK_IDENT OP_PAR_L OP_PAR_R OP_MINUS OP_MORE types OP_MEAN
   20                 | . KW_DEF TK_IDENT OP_PAR_L OP_PAR_R OP_MEAN
   38 var_declarations: . variable_types OP_ASSIGN expr OP_SEMI
   39                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN expr OP_SEMI
   40                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   41                 | . variable_types OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   42                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_MEAN types OP_SEMI
   43                 | . comp_types_of_declarations OP_MEAN types OP_SEMI
   44                 | . KW_CONST comp_types_of_declarations OP_ASSIGN data_types OP_MEAN types OP_SEMI
   45                 | . KW_CONST comp_types_of_declarations OP_ASSIGN operators data_types OP_MEAN types OP_SEMI
   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   56 comp_types_of_declarations: . variable_types
   57                           | . comp_types_of_declarations OP_COMA variable_types
   58                           | . comp_types_of_declarations OP_COMA variable_types OP_BRA_L legal_array_index OP_BRA_R

    TK_IDENT  shift, and go to state 1
    KW_HASH   shift, and go to state 2
    KW_DEF    shift, and go to state 226
    KW_CONST  shift, and go to state 4
    KW_COMP   shift, and go to state 5

    $default  reduce using rule 6 (final_program)

    program                     go to state 227
    global_declarations         go to state 11
    func_declaration            go to state 12
    var_declarations            go to state 13
    variable_types              go to state 14
    comp_types_of_declarations  go to state 15


State 160

   29 main_program: . local_declarations
   30             | . main_program local_declarations
   31 local_declarations: . var_declarations
   32                   | . expr OP_SEMI
   33                   | . conditions KW_ENDIF OP_SEMI
   34                   | . while_loop KW_ENDWHILE OP_SEMI
   35                   | . for_loop KW_ENDFOR OP_SEMI
   36                   | . KW_BREAK OP_SEMI
   37                   | . KW_CONTINUE OP_SEMI
   38 var_declarations: . variable_types OP_ASSIGN expr OP_SEMI
   39                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN expr OP_SEMI
   40                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   41                 | . variable_types OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   42                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_MEAN types OP_SEMI
   43                 | . comp_types_of_declarations OP_MEAN types OP_SEMI
   44                 | . KW_CONST comp_types_of_declarations OP_ASSIGN data_types OP_MEAN types OP_SEMI
   45                 | . KW_CONST comp_types_of_declarations OP_ASSIGN operators data_types OP_MEAN types OP_SEMI
   46 conditions: . KW_IF OP_PAR_L expr OP_PAR_R OP_MEAN main_program
   47           | . KW_IF OP_PAR_L expr OP_PAR_R OP_MEAN comp_function_code
   48           | . conditions KW_ELSE OP_MEAN main_program
   48           | conditions KW_ELSE OP_MEAN . main_program
   49 while_loop: . KW_WHILE OP_PAR_L expr OP_PAR_R OP_MEAN main_program
   50           | . KW_WHILE OP_PAR_L expr OP_PAR_R OP_MEAN comp_function_code
   51 for_loop: . KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_BRA_R OP_MEAN main_program
   52         | . KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_BRA_R OP_MEAN comp_function_code
   53         | . KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_MEAN expr OP_BRA_R OP_MEAN main_program
   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   56 comp_types_of_declarations: . variable_types
   57                           | . comp_types_of_declarations OP_COMA variable_types
   58                           | . comp_types_of_declarations OP_COMA variable_types OP_BRA_L legal_array_index OP_BRA_R
   59 expr: . %empty  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_SEMI, OP_COMA, OP_DOT]
   60     | . TK_STRING
   61     | . TK_INT
   62     | . TK_REAL
   63     | . KW_TRUE
   64     | . KW_FALSE
   65     | . variable_types OP_PAR_L OP_PAR_R
   66     | . variable_types OP_PAR_L expr OP_PAR_R
   67     | . operators expr
   68     | . variable_types
   69     | . variable_types OP_BRA_L legal_array_index OP_BRA_R
   70     | . variable_types OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | . variable_types OP_BRA_L variable_types OP_BRA_R
   72     | . OP_POINTER expr
   73     | . expr OP_COMA expr
   74     | . expr OP_DOT expr
   75     | . expr OP_PLUS expr
   76     | . expr OP_MINUS expr
   77     | . expr OP_MUL expr
   78     | . expr OP_DIV expr
   79     | . expr OP_MOD expr
   80     | . expr OP_EQ expr
   81     | . expr OP_INEQ expr
   82     | . expr OP_LESS expr
   83     | . expr OP_EQLESS expr
   84     | . expr OP_MORE expr
   85     | . expr OP_EQMORE expr
   86     | . expr OP_ASSIGN expr
   87     | . expr KW_AND expr
   88     | . expr KW_OR expr
   89     | . expr KW_NOT expr
   90     | . expr OP_PLUSEQ expr
   91     | . expr OP_MINUSEQ expr
   92     | . expr OP_MULEQ expr
   93     | . expr OP_DIVEQ expr
   94     | . expr OP_MODEQ expr
   95     | . OP_PAR_L expr OP_PAR_R
   96     | . OP_BRA_L expr OP_BRA_L
   97     | . OP_SEMI
  108 operators: . OP_PLUS
  109          | . OP_MINUS
  110          | . OP_MUL
  111          | . OP_DIV
  112          | . OP_MOD
  113          | . OP_POWER
  114          | . OP_EQ
  115          | . OP_INEQ
  116          | . OP_LESS
  117          | . OP_EQLESS
  118          | . OP_MORE
  119          | . OP_EQMORE
  120          | . OP_ASSIGN
  121          | . OP_PLUSEQ
  122          | . OP_MINUSEQ
  123          | . OP_MULEQ
  124          | . OP_DIVEQ
  125          | . OP_MODEQ

    TK_STRING    shift, and go to state 23
    TK_IDENT     shift, and go to state 1
    TK_INT       shift, and go to state 24
    TK_REAL      shift, and go to state 25
    KW_HASH      shift, and go to state 2
    KW_IF        shift, and go to state 26
    KW_FALSE     shift, and go to state 27
    KW_FOR       shift, and go to state 28
    KW_BREAK     shift, and go to state 29
    KW_CONST     shift, and go to state 4
    KW_CONTINUE  shift, and go to state 30
    KW_WHILE     shift, and go to state 31
    KW_TRUE      shift, and go to state 32
    OP_PLUS      shift, and go to state 33
    OP_MINUS     shift, and go to state 34
    OP_MUL       shift, and go to state 35
    OP_DIV       shift, and go to state 36
    OP_MOD       shift, and go to state 37
    OP_POWER     shift, and go to state 38
    OP_EQ        shift, and go to state 39
    OP_INEQ      shift, and go to state 40
    OP_LESS      shift, and go to state 41
    OP_EQLESS    shift, and go to state 42
    OP_MORE      shift, and go to state 43
    OP_EQMORE    shift, and go to state 44
    OP_ASSIGN    shift, and go to state 45
    OP_PLUSEQ    shift, and go to state 46
    OP_MINUSEQ   shift, and go to state 47
    OP_MULEQ     shift, and go to state 48
    OP_DIVEQ     shift, and go to state 49
    OP_MODEQ     shift, and go to state 50
    OP_POINTER   shift, and go to state 51
    OP_PAR_L     shift, and go to state 52
    OP_SEMI      shift, and go to state 53
    OP_BRA_L     shift, and go to state 54

    OP_PLUS     [reduce using rule 59 (expr)]
    OP_MINUS    [reduce using rule 59 (expr)]
    OP_MUL      [reduce using rule 59 (expr)]
    OP_DIV      [reduce using rule 59 (expr)]
    OP_MOD      [reduce using rule 59 (expr)]
    OP_EQ       [reduce using rule 59 (expr)]
    OP_INEQ     [reduce using rule 59 (expr)]
    OP_LESS     [reduce using rule 59 (expr)]
    OP_EQLESS   [reduce using rule 59 (expr)]
    OP_MORE     [reduce using rule 59 (expr)]
    OP_EQMORE   [reduce using rule 59 (expr)]
    OP_ASSIGN   [reduce using rule 59 (expr)]
    OP_PLUSEQ   [reduce using rule 59 (expr)]
    OP_MINUSEQ  [reduce using rule 59 (expr)]
    OP_MULEQ    [reduce using rule 59 (expr)]
    OP_DIVEQ    [reduce using rule 59 (expr)]
    OP_MODEQ    [reduce using rule 59 (expr)]
    OP_SEMI     [reduce using rule 59 (expr)]
    $default    reduce using rule 59 (expr)

    main_program                go to state 228
    local_declarations          go to state 56
    var_declarations            go to state 57
    conditions                  go to state 58
    while_loop                  go to state 59
    for_loop                    go to state 60
    variable_types              go to state 61
    comp_types_of_declarations  go to state 15
    expr                        go to state 62
    operators                   go to state 63


State 161

   33 local_declarations: conditions KW_ENDIF OP_SEMI .

    $default  reduce using rule 33 (local_declarations)


State 162

   34 local_declarations: while_loop KW_ENDWHILE OP_SEMI .

    $default  reduce using rule 34 (local_declarations)


State 163

   35 local_declarations: for_loop KW_ENDFOR OP_SEMI .

    $default  reduce using rule 35 (local_declarations)


State 164

   65 expr: variable_types OP_PAR_L OP_PAR_R .

    $default  reduce using rule 65 (expr)


State 165

   66 expr: variable_types OP_PAR_L expr . OP_PAR_R
   73     | expr . OP_COMA expr
   74     | expr . OP_DOT expr
   75     | expr . OP_PLUS expr
   76     | expr . OP_MINUS expr
   77     | expr . OP_MUL expr
   78     | expr . OP_DIV expr
   79     | expr . OP_MOD expr
   80     | expr . OP_EQ expr
   81     | expr . OP_INEQ expr
   82     | expr . OP_LESS expr
   83     | expr . OP_EQLESS expr
   84     | expr . OP_MORE expr
   85     | expr . OP_EQMORE expr
   86     | expr . OP_ASSIGN expr
   87     | expr . KW_AND expr
   88     | expr . KW_OR expr
   89     | expr . KW_NOT expr
   90     | expr . OP_PLUSEQ expr
   91     | expr . OP_MINUSEQ expr
   92     | expr . OP_MULEQ expr
   93     | expr . OP_DIVEQ expr
   94     | expr . OP_MODEQ expr

    KW_NOT      shift, and go to state 94
    KW_AND      shift, and go to state 95
    KW_OR       shift, and go to state 96
    OP_PLUS     shift, and go to state 97
    OP_MINUS    shift, and go to state 98
    OP_MUL      shift, and go to state 99
    OP_DIV      shift, and go to state 100
    OP_MOD      shift, and go to state 101
    OP_EQ       shift, and go to state 102
    OP_INEQ     shift, and go to state 103
    OP_LESS     shift, and go to state 104
    OP_EQLESS   shift, and go to state 105
    OP_MORE     shift, and go to state 106
    OP_EQMORE   shift, and go to state 107
    OP_ASSIGN   shift, and go to state 108
    OP_PLUSEQ   shift, and go to state 109
    OP_MINUSEQ  shift, and go to state 110
    OP_MULEQ    shift, and go to state 111
    OP_DIVEQ    shift, and go to state 112
    OP_MODEQ    shift, and go to state 113
    OP_PAR_R    shift, and go to state 229
    OP_COMA     shift, and go to state 115
    OP_DOT      shift, and go to state 116


State 166

   54 variable_types: TK_IDENT .  [OP_BRA_R]
   99 legal_array_index: TK_IDENT .  [OP_BRA_R]

    OP_BRA_R  reduce using rule 54 (variable_types)
    OP_BRA_R  [reduce using rule 99 (legal_array_index)]
    $default  reduce using rule 54 (variable_types)


State 167

   55 variable_types: KW_HASH . TK_IDENT
   70 expr: variable_types OP_BRA_L KW_HASH . legal_array_index OP_BRA_R
   98 legal_array_index: . TK_INT
   99                  | . TK_IDENT

    TK_IDENT  shift, and go to state 230
    TK_INT    shift, and go to state 126

    legal_array_index  go to state 231


State 168

   71 expr: variable_types OP_BRA_L variable_types . OP_BRA_R

    OP_BRA_R  shift, and go to state 232


State 169

   39 var_declarations: variable_types OP_BRA_L legal_array_index . OP_BRA_R OP_ASSIGN expr OP_SEMI
   40                 | variable_types OP_BRA_L legal_array_index . OP_BRA_R OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   42                 | variable_types OP_BRA_L legal_array_index . OP_BRA_R OP_MEAN types OP_SEMI
   69 expr: variable_types OP_BRA_L legal_array_index . OP_BRA_R

    OP_BRA_R  shift, and go to state 233


State 170

   73 expr: expr . OP_COMA expr
   74     | expr . OP_DOT expr
   75     | expr . OP_PLUS expr
   76     | expr . OP_MINUS expr
   77     | expr . OP_MUL expr
   78     | expr . OP_DIV expr
   79     | expr . OP_MOD expr
   80     | expr . OP_EQ expr
   81     | expr . OP_INEQ expr
   82     | expr . OP_LESS expr
   83     | expr . OP_EQLESS expr
   84     | expr . OP_MORE expr
   85     | expr . OP_EQMORE expr
   86     | expr . OP_ASSIGN expr
   87     | expr . KW_AND expr
   88     | expr . KW_OR expr
   89     | expr . KW_NOT expr
   89     | expr KW_NOT expr .  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_PAR_R, OP_SEMI, OP_COMA, OP_BRA_L, OP_BRA_R, OP_DOT, OP_MEAN]
   90     | expr . OP_PLUSEQ expr
   91     | expr . OP_MINUSEQ expr
   92     | expr . OP_MULEQ expr
   93     | expr . OP_DIVEQ expr
   94     | expr . OP_MODEQ expr

    KW_NOT      shift, and go to state 94
    KW_AND      shift, and go to state 95
    KW_OR       shift, and go to state 96
    OP_PLUS     shift, and go to state 97
    OP_MINUS    shift, and go to state 98
    OP_MUL      shift, and go to state 99
    OP_DIV      shift, and go to state 100
    OP_MOD      shift, and go to state 101
    OP_EQ       shift, and go to state 102
    OP_INEQ     shift, and go to state 103
    OP_LESS     shift, and go to state 104
    OP_EQLESS   shift, and go to state 105
    OP_MORE     shift, and go to state 106
    OP_EQMORE   shift, and go to state 107
    OP_ASSIGN   shift, and go to state 108
    OP_PLUSEQ   shift, and go to state 109
    OP_MINUSEQ  shift, and go to state 110
    OP_MULEQ    shift, and go to state 111
    OP_DIVEQ    shift, and go to state 112
    OP_MODEQ    shift, and go to state 113
    OP_COMA     shift, and go to state 115
    OP_DOT      shift, and go to state 116

    KW_NOT      [reduce using rule 89 (expr)]
    KW_AND      [reduce using rule 89 (expr)]
    KW_OR       [reduce using rule 89 (expr)]
    OP_PLUS     [reduce using rule 89 (expr)]
    OP_MINUS    [reduce using rule 89 (expr)]
    OP_MUL      [reduce using rule 89 (expr)]
    OP_DIV      [reduce using rule 89 (expr)]
    OP_MOD      [reduce using rule 89 (expr)]
    OP_EQ       [reduce using rule 89 (expr)]
    OP_INEQ     [reduce using rule 89 (expr)]
    OP_LESS     [reduce using rule 89 (expr)]
    OP_EQLESS   [reduce using rule 89 (expr)]
    OP_MORE     [reduce using rule 89 (expr)]
    OP_EQMORE   [reduce using rule 89 (expr)]
    OP_ASSIGN   [reduce using rule 89 (expr)]
    OP_PLUSEQ   [reduce using rule 89 (expr)]
    OP_MINUSEQ  [reduce using rule 89 (expr)]
    OP_MULEQ    [reduce using rule 89 (expr)]
    OP_DIVEQ    [reduce using rule 89 (expr)]
    OP_MODEQ    [reduce using rule 89 (expr)]
    OP_COMA     [reduce using rule 89 (expr)]
    OP_DOT      [reduce using rule 89 (expr)]
    $default    reduce using rule 89 (expr)


State 171

   73 expr: expr . OP_COMA expr
   74     | expr . OP_DOT expr
   75     | expr . OP_PLUS expr
   76     | expr . OP_MINUS expr
   77     | expr . OP_MUL expr
   78     | expr . OP_DIV expr
   79     | expr . OP_MOD expr
   80     | expr . OP_EQ expr
   81     | expr . OP_INEQ expr
   82     | expr . OP_LESS expr
   83     | expr . OP_EQLESS expr
   84     | expr . OP_MORE expr
   85     | expr . OP_EQMORE expr
   86     | expr . OP_ASSIGN expr
   87     | expr . KW_AND expr
   87     | expr KW_AND expr .  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_PAR_R, OP_SEMI, OP_COMA, OP_BRA_L, OP_BRA_R, OP_DOT, OP_MEAN]
   88     | expr . KW_OR expr
   89     | expr . KW_NOT expr
   90     | expr . OP_PLUSEQ expr
   91     | expr . OP_MINUSEQ expr
   92     | expr . OP_MULEQ expr
   93     | expr . OP_DIVEQ expr
   94     | expr . OP_MODEQ expr

    KW_NOT      shift, and go to state 94
    KW_AND      shift, and go to state 95
    KW_OR       shift, and go to state 96
    OP_PLUS     shift, and go to state 97
    OP_MINUS    shift, and go to state 98
    OP_MUL      shift, and go to state 99
    OP_DIV      shift, and go to state 100
    OP_MOD      shift, and go to state 101
    OP_EQ       shift, and go to state 102
    OP_INEQ     shift, and go to state 103
    OP_LESS     shift, and go to state 104
    OP_EQLESS   shift, and go to state 105
    OP_MORE     shift, and go to state 106
    OP_EQMORE   shift, and go to state 107
    OP_ASSIGN   shift, and go to state 108
    OP_PLUSEQ   shift, and go to state 109
    OP_MINUSEQ  shift, and go to state 110
    OP_MULEQ    shift, and go to state 111
    OP_DIVEQ    shift, and go to state 112
    OP_MODEQ    shift, and go to state 113
    OP_COMA     shift, and go to state 115
    OP_DOT      shift, and go to state 116

    KW_NOT      [reduce using rule 87 (expr)]
    KW_AND      [reduce using rule 87 (expr)]
    KW_OR       [reduce using rule 87 (expr)]
    OP_PLUS     [reduce using rule 87 (expr)]
    OP_MINUS    [reduce using rule 87 (expr)]
    OP_MUL      [reduce using rule 87 (expr)]
    OP_DIV      [reduce using rule 87 (expr)]
    OP_MOD      [reduce using rule 87 (expr)]
    OP_EQ       [reduce using rule 87 (expr)]
    OP_INEQ     [reduce using rule 87 (expr)]
    OP_LESS     [reduce using rule 87 (expr)]
    OP_EQLESS   [reduce using rule 87 (expr)]
    OP_MORE     [reduce using rule 87 (expr)]
    OP_EQMORE   [reduce using rule 87 (expr)]
    OP_ASSIGN   [reduce using rule 87 (expr)]
    OP_PLUSEQ   [reduce using rule 87 (expr)]
    OP_MINUSEQ  [reduce using rule 87 (expr)]
    OP_MULEQ    [reduce using rule 87 (expr)]
    OP_DIVEQ    [reduce using rule 87 (expr)]
    OP_MODEQ    [reduce using rule 87 (expr)]
    OP_COMA     [reduce using rule 87 (expr)]
    OP_DOT      [reduce using rule 87 (expr)]
    $default    reduce using rule 87 (expr)


State 172

   73 expr: expr . OP_COMA expr
   74     | expr . OP_DOT expr
   75     | expr . OP_PLUS expr
   76     | expr . OP_MINUS expr
   77     | expr . OP_MUL expr
   78     | expr . OP_DIV expr
   79     | expr . OP_MOD expr
   80     | expr . OP_EQ expr
   81     | expr . OP_INEQ expr
   82     | expr . OP_LESS expr
   83     | expr . OP_EQLESS expr
   84     | expr . OP_MORE expr
   85     | expr . OP_EQMORE expr
   86     | expr . OP_ASSIGN expr
   87     | expr . KW_AND expr
   88     | expr . KW_OR expr
   88     | expr KW_OR expr .  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_PAR_R, OP_SEMI, OP_COMA, OP_BRA_L, OP_BRA_R, OP_DOT, OP_MEAN]
   89     | expr . KW_NOT expr
   90     | expr . OP_PLUSEQ expr
   91     | expr . OP_MINUSEQ expr
   92     | expr . OP_MULEQ expr
   93     | expr . OP_DIVEQ expr
   94     | expr . OP_MODEQ expr

    KW_NOT      shift, and go to state 94
    KW_AND      shift, and go to state 95
    KW_OR       shift, and go to state 96
    OP_PLUS     shift, and go to state 97
    OP_MINUS    shift, and go to state 98
    OP_MUL      shift, and go to state 99
    OP_DIV      shift, and go to state 100
    OP_MOD      shift, and go to state 101
    OP_EQ       shift, and go to state 102
    OP_INEQ     shift, and go to state 103
    OP_LESS     shift, and go to state 104
    OP_EQLESS   shift, and go to state 105
    OP_MORE     shift, and go to state 106
    OP_EQMORE   shift, and go to state 107
    OP_ASSIGN   shift, and go to state 108
    OP_PLUSEQ   shift, and go to state 109
    OP_MINUSEQ  shift, and go to state 110
    OP_MULEQ    shift, and go to state 111
    OP_DIVEQ    shift, and go to state 112
    OP_MODEQ    shift, and go to state 113
    OP_COMA     shift, and go to state 115
    OP_DOT      shift, and go to state 116

    KW_NOT      [reduce using rule 88 (expr)]
    KW_AND      [reduce using rule 88 (expr)]
    KW_OR       [reduce using rule 88 (expr)]
    OP_PLUS     [reduce using rule 88 (expr)]
    OP_MINUS    [reduce using rule 88 (expr)]
    OP_MUL      [reduce using rule 88 (expr)]
    OP_DIV      [reduce using rule 88 (expr)]
    OP_MOD      [reduce using rule 88 (expr)]
    OP_EQ       [reduce using rule 88 (expr)]
    OP_INEQ     [reduce using rule 88 (expr)]
    OP_LESS     [reduce using rule 88 (expr)]
    OP_EQLESS   [reduce using rule 88 (expr)]
    OP_MORE     [reduce using rule 88 (expr)]
    OP_EQMORE   [reduce using rule 88 (expr)]
    OP_ASSIGN   [reduce using rule 88 (expr)]
    OP_PLUSEQ   [reduce using rule 88 (expr)]
    OP_MINUSEQ  [reduce using rule 88 (expr)]
    OP_MULEQ    [reduce using rule 88 (expr)]
    OP_DIVEQ    [reduce using rule 88 (expr)]
    OP_MODEQ    [reduce using rule 88 (expr)]
    OP_COMA     [reduce using rule 88 (expr)]
    OP_DOT      [reduce using rule 88 (expr)]
    $default    reduce using rule 88 (expr)


State 173

   73 expr: expr . OP_COMA expr
   74     | expr . OP_DOT expr
   75     | expr . OP_PLUS expr
   75     | expr OP_PLUS expr .  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_PAR_R, OP_SEMI, OP_COMA, OP_BRA_L, OP_BRA_R, OP_DOT, OP_MEAN]
   76     | expr . OP_MINUS expr
   77     | expr . OP_MUL expr
   78     | expr . OP_DIV expr
   79     | expr . OP_MOD expr
   80     | expr . OP_EQ expr
   81     | expr . OP_INEQ expr
   82     | expr . OP_LESS expr
   83     | expr . OP_EQLESS expr
   84     | expr . OP_MORE expr
   85     | expr . OP_EQMORE expr
   86     | expr . OP_ASSIGN expr
   87     | expr . KW_AND expr
   88     | expr . KW_OR expr
   89     | expr . KW_NOT expr
   90     | expr . OP_PLUSEQ expr
   91     | expr . OP_MINUSEQ expr
   92     | expr . OP_MULEQ expr
   93     | expr . OP_DIVEQ expr
   94     | expr . OP_MODEQ expr

    KW_NOT      shift, and go to state 94
    KW_AND      shift, and go to state 95
    KW_OR       shift, and go to state 96
    OP_PLUS     shift, and go to state 97
    OP_MINUS    shift, and go to state 98
    OP_MUL      shift, and go to state 99
    OP_DIV      shift, and go to state 100
    OP_MOD      shift, and go to state 101
    OP_EQ       shift, and go to state 102
    OP_INEQ     shift, and go to state 103
    OP_LESS     shift, and go to state 104
    OP_EQLESS   shift, and go to state 105
    OP_MORE     shift, and go to state 106
    OP_EQMORE   shift, and go to state 107
    OP_ASSIGN   shift, and go to state 108
    OP_PLUSEQ   shift, and go to state 109
    OP_MINUSEQ  shift, and go to state 110
    OP_MULEQ    shift, and go to state 111
    OP_DIVEQ    shift, and go to state 112
    OP_MODEQ    shift, and go to state 113
    OP_COMA     shift, and go to state 115
    OP_DOT      shift, and go to state 116

    KW_NOT      [reduce using rule 75 (expr)]
    KW_AND      [reduce using rule 75 (expr)]
    KW_OR       [reduce using rule 75 (expr)]
    OP_PLUS     [reduce using rule 75 (expr)]
    OP_MINUS    [reduce using rule 75 (expr)]
    OP_MUL      [reduce using rule 75 (expr)]
    OP_DIV      [reduce using rule 75 (expr)]
    OP_MOD      [reduce using rule 75 (expr)]
    OP_EQ       [reduce using rule 75 (expr)]
    OP_INEQ     [reduce using rule 75 (expr)]
    OP_LESS     [reduce using rule 75 (expr)]
    OP_EQLESS   [reduce using rule 75 (expr)]
    OP_MORE     [reduce using rule 75 (expr)]
    OP_EQMORE   [reduce using rule 75 (expr)]
    OP_ASSIGN   [reduce using rule 75 (expr)]
    OP_PLUSEQ   [reduce using rule 75 (expr)]
    OP_MINUSEQ  [reduce using rule 75 (expr)]
    OP_MULEQ    [reduce using rule 75 (expr)]
    OP_DIVEQ    [reduce using rule 75 (expr)]
    OP_MODEQ    [reduce using rule 75 (expr)]
    OP_COMA     [reduce using rule 75 (expr)]
    OP_DOT      [reduce using rule 75 (expr)]
    $default    reduce using rule 75 (expr)


State 174

   73 expr: expr . OP_COMA expr
   74     | expr . OP_DOT expr
   75     | expr . OP_PLUS expr
   76     | expr . OP_MINUS expr
   76     | expr OP_MINUS expr .  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_PAR_R, OP_SEMI, OP_COMA, OP_BRA_L, OP_BRA_R, OP_DOT, OP_MEAN]
   77     | expr . OP_MUL expr
   78     | expr . OP_DIV expr
   79     | expr . OP_MOD expr
   80     | expr . OP_EQ expr
   81     | expr . OP_INEQ expr
   82     | expr . OP_LESS expr
   83     | expr . OP_EQLESS expr
   84     | expr . OP_MORE expr
   85     | expr . OP_EQMORE expr
   86     | expr . OP_ASSIGN expr
   87     | expr . KW_AND expr
   88     | expr . KW_OR expr
   89     | expr . KW_NOT expr
   90     | expr . OP_PLUSEQ expr
   91     | expr . OP_MINUSEQ expr
   92     | expr . OP_MULEQ expr
   93     | expr . OP_DIVEQ expr
   94     | expr . OP_MODEQ expr

    KW_NOT      shift, and go to state 94
    KW_AND      shift, and go to state 95
    KW_OR       shift, and go to state 96
    OP_PLUS     shift, and go to state 97
    OP_MINUS    shift, and go to state 98
    OP_MUL      shift, and go to state 99
    OP_DIV      shift, and go to state 100
    OP_MOD      shift, and go to state 101
    OP_EQ       shift, and go to state 102
    OP_INEQ     shift, and go to state 103
    OP_LESS     shift, and go to state 104
    OP_EQLESS   shift, and go to state 105
    OP_MORE     shift, and go to state 106
    OP_EQMORE   shift, and go to state 107
    OP_ASSIGN   shift, and go to state 108
    OP_PLUSEQ   shift, and go to state 109
    OP_MINUSEQ  shift, and go to state 110
    OP_MULEQ    shift, and go to state 111
    OP_DIVEQ    shift, and go to state 112
    OP_MODEQ    shift, and go to state 113
    OP_COMA     shift, and go to state 115
    OP_DOT      shift, and go to state 116

    KW_NOT      [reduce using rule 76 (expr)]
    KW_AND      [reduce using rule 76 (expr)]
    KW_OR       [reduce using rule 76 (expr)]
    OP_PLUS     [reduce using rule 76 (expr)]
    OP_MINUS    [reduce using rule 76 (expr)]
    OP_MUL      [reduce using rule 76 (expr)]
    OP_DIV      [reduce using rule 76 (expr)]
    OP_MOD      [reduce using rule 76 (expr)]
    OP_EQ       [reduce using rule 76 (expr)]
    OP_INEQ     [reduce using rule 76 (expr)]
    OP_LESS     [reduce using rule 76 (expr)]
    OP_EQLESS   [reduce using rule 76 (expr)]
    OP_MORE     [reduce using rule 76 (expr)]
    OP_EQMORE   [reduce using rule 76 (expr)]
    OP_ASSIGN   [reduce using rule 76 (expr)]
    OP_PLUSEQ   [reduce using rule 76 (expr)]
    OP_MINUSEQ  [reduce using rule 76 (expr)]
    OP_MULEQ    [reduce using rule 76 (expr)]
    OP_DIVEQ    [reduce using rule 76 (expr)]
    OP_MODEQ    [reduce using rule 76 (expr)]
    OP_COMA     [reduce using rule 76 (expr)]
    OP_DOT      [reduce using rule 76 (expr)]
    $default    reduce using rule 76 (expr)


State 175

   73 expr: expr . OP_COMA expr
   74     | expr . OP_DOT expr
   75     | expr . OP_PLUS expr
   76     | expr . OP_MINUS expr
   77     | expr . OP_MUL expr
   77     | expr OP_MUL expr .  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_PAR_R, OP_SEMI, OP_COMA, OP_BRA_L, OP_BRA_R, OP_DOT, OP_MEAN]
   78     | expr . OP_DIV expr
   79     | expr . OP_MOD expr
   80     | expr . OP_EQ expr
   81     | expr . OP_INEQ expr
   82     | expr . OP_LESS expr
   83     | expr . OP_EQLESS expr
   84     | expr . OP_MORE expr
   85     | expr . OP_EQMORE expr
   86     | expr . OP_ASSIGN expr
   87     | expr . KW_AND expr
   88     | expr . KW_OR expr
   89     | expr . KW_NOT expr
   90     | expr . OP_PLUSEQ expr
   91     | expr . OP_MINUSEQ expr
   92     | expr . OP_MULEQ expr
   93     | expr . OP_DIVEQ expr
   94     | expr . OP_MODEQ expr

    KW_NOT      shift, and go to state 94
    KW_AND      shift, and go to state 95
    KW_OR       shift, and go to state 96
    OP_PLUS     shift, and go to state 97
    OP_MINUS    shift, and go to state 98
    OP_MUL      shift, and go to state 99
    OP_DIV      shift, and go to state 100
    OP_MOD      shift, and go to state 101
    OP_EQ       shift, and go to state 102
    OP_INEQ     shift, and go to state 103
    OP_LESS     shift, and go to state 104
    OP_EQLESS   shift, and go to state 105
    OP_MORE     shift, and go to state 106
    OP_EQMORE   shift, and go to state 107
    OP_ASSIGN   shift, and go to state 108
    OP_PLUSEQ   shift, and go to state 109
    OP_MINUSEQ  shift, and go to state 110
    OP_MULEQ    shift, and go to state 111
    OP_DIVEQ    shift, and go to state 112
    OP_MODEQ    shift, and go to state 113
    OP_COMA     shift, and go to state 115
    OP_DOT      shift, and go to state 116

    KW_NOT      [reduce using rule 77 (expr)]
    KW_AND      [reduce using rule 77 (expr)]
    KW_OR       [reduce using rule 77 (expr)]
    OP_PLUS     [reduce using rule 77 (expr)]
    OP_MINUS    [reduce using rule 77 (expr)]
    OP_MUL      [reduce using rule 77 (expr)]
    OP_DIV      [reduce using rule 77 (expr)]
    OP_MOD      [reduce using rule 77 (expr)]
    OP_EQ       [reduce using rule 77 (expr)]
    OP_INEQ     [reduce using rule 77 (expr)]
    OP_LESS     [reduce using rule 77 (expr)]
    OP_EQLESS   [reduce using rule 77 (expr)]
    OP_MORE     [reduce using rule 77 (expr)]
    OP_EQMORE   [reduce using rule 77 (expr)]
    OP_ASSIGN   [reduce using rule 77 (expr)]
    OP_PLUSEQ   [reduce using rule 77 (expr)]
    OP_MINUSEQ  [reduce using rule 77 (expr)]
    OP_MULEQ    [reduce using rule 77 (expr)]
    OP_DIVEQ    [reduce using rule 77 (expr)]
    OP_MODEQ    [reduce using rule 77 (expr)]
    OP_COMA     [reduce using rule 77 (expr)]
    OP_DOT      [reduce using rule 77 (expr)]
    $default    reduce using rule 77 (expr)


State 176

   73 expr: expr . OP_COMA expr
   74     | expr . OP_DOT expr
   75     | expr . OP_PLUS expr
   76     | expr . OP_MINUS expr
   77     | expr . OP_MUL expr
   78     | expr . OP_DIV expr
   78     | expr OP_DIV expr .  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_PAR_R, OP_SEMI, OP_COMA, OP_BRA_L, OP_BRA_R, OP_DOT, OP_MEAN]
   79     | expr . OP_MOD expr
   80     | expr . OP_EQ expr
   81     | expr . OP_INEQ expr
   82     | expr . OP_LESS expr
   83     | expr . OP_EQLESS expr
   84     | expr . OP_MORE expr
   85     | expr . OP_EQMORE expr
   86     | expr . OP_ASSIGN expr
   87     | expr . KW_AND expr
   88     | expr . KW_OR expr
   89     | expr . KW_NOT expr
   90     | expr . OP_PLUSEQ expr
   91     | expr . OP_MINUSEQ expr
   92     | expr . OP_MULEQ expr
   93     | expr . OP_DIVEQ expr
   94     | expr . OP_MODEQ expr

    KW_NOT      shift, and go to state 94
    KW_AND      shift, and go to state 95
    KW_OR       shift, and go to state 96
    OP_PLUS     shift, and go to state 97
    OP_MINUS    shift, and go to state 98
    OP_MUL      shift, and go to state 99
    OP_DIV      shift, and go to state 100
    OP_MOD      shift, and go to state 101
    OP_EQ       shift, and go to state 102
    OP_INEQ     shift, and go to state 103
    OP_LESS     shift, and go to state 104
    OP_EQLESS   shift, and go to state 105
    OP_MORE     shift, and go to state 106
    OP_EQMORE   shift, and go to state 107
    OP_ASSIGN   shift, and go to state 108
    OP_PLUSEQ   shift, and go to state 109
    OP_MINUSEQ  shift, and go to state 110
    OP_MULEQ    shift, and go to state 111
    OP_DIVEQ    shift, and go to state 112
    OP_MODEQ    shift, and go to state 113
    OP_COMA     shift, and go to state 115
    OP_DOT      shift, and go to state 116

    KW_NOT      [reduce using rule 78 (expr)]
    KW_AND      [reduce using rule 78 (expr)]
    KW_OR       [reduce using rule 78 (expr)]
    OP_PLUS     [reduce using rule 78 (expr)]
    OP_MINUS    [reduce using rule 78 (expr)]
    OP_MUL      [reduce using rule 78 (expr)]
    OP_DIV      [reduce using rule 78 (expr)]
    OP_MOD      [reduce using rule 78 (expr)]
    OP_EQ       [reduce using rule 78 (expr)]
    OP_INEQ     [reduce using rule 78 (expr)]
    OP_LESS     [reduce using rule 78 (expr)]
    OP_EQLESS   [reduce using rule 78 (expr)]
    OP_MORE     [reduce using rule 78 (expr)]
    OP_EQMORE   [reduce using rule 78 (expr)]
    OP_ASSIGN   [reduce using rule 78 (expr)]
    OP_PLUSEQ   [reduce using rule 78 (expr)]
    OP_MINUSEQ  [reduce using rule 78 (expr)]
    OP_MULEQ    [reduce using rule 78 (expr)]
    OP_DIVEQ    [reduce using rule 78 (expr)]
    OP_MODEQ    [reduce using rule 78 (expr)]
    OP_COMA     [reduce using rule 78 (expr)]
    OP_DOT      [reduce using rule 78 (expr)]
    $default    reduce using rule 78 (expr)


State 177

   73 expr: expr . OP_COMA expr
   74     | expr . OP_DOT expr
   75     | expr . OP_PLUS expr
   76     | expr . OP_MINUS expr
   77     | expr . OP_MUL expr
   78     | expr . OP_DIV expr
   79     | expr . OP_MOD expr
   79     | expr OP_MOD expr .  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_PAR_R, OP_SEMI, OP_COMA, OP_BRA_L, OP_BRA_R, OP_DOT, OP_MEAN]
   80     | expr . OP_EQ expr
   81     | expr . OP_INEQ expr
   82     | expr . OP_LESS expr
   83     | expr . OP_EQLESS expr
   84     | expr . OP_MORE expr
   85     | expr . OP_EQMORE expr
   86     | expr . OP_ASSIGN expr
   87     | expr . KW_AND expr
   88     | expr . KW_OR expr
   89     | expr . KW_NOT expr
   90     | expr . OP_PLUSEQ expr
   91     | expr . OP_MINUSEQ expr
   92     | expr . OP_MULEQ expr
   93     | expr . OP_DIVEQ expr
   94     | expr . OP_MODEQ expr

    KW_NOT      shift, and go to state 94
    KW_AND      shift, and go to state 95
    KW_OR       shift, and go to state 96
    OP_PLUS     shift, and go to state 97
    OP_MINUS    shift, and go to state 98
    OP_MUL      shift, and go to state 99
    OP_DIV      shift, and go to state 100
    OP_MOD      shift, and go to state 101
    OP_EQ       shift, and go to state 102
    OP_INEQ     shift, and go to state 103
    OP_LESS     shift, and go to state 104
    OP_EQLESS   shift, and go to state 105
    OP_MORE     shift, and go to state 106
    OP_EQMORE   shift, and go to state 107
    OP_ASSIGN   shift, and go to state 108
    OP_PLUSEQ   shift, and go to state 109
    OP_MINUSEQ  shift, and go to state 110
    OP_MULEQ    shift, and go to state 111
    OP_DIVEQ    shift, and go to state 112
    OP_MODEQ    shift, and go to state 113
    OP_COMA     shift, and go to state 115
    OP_DOT      shift, and go to state 116

    KW_NOT      [reduce using rule 79 (expr)]
    KW_AND      [reduce using rule 79 (expr)]
    KW_OR       [reduce using rule 79 (expr)]
    OP_PLUS     [reduce using rule 79 (expr)]
    OP_MINUS    [reduce using rule 79 (expr)]
    OP_MUL      [reduce using rule 79 (expr)]
    OP_DIV      [reduce using rule 79 (expr)]
    OP_MOD      [reduce using rule 79 (expr)]
    OP_EQ       [reduce using rule 79 (expr)]
    OP_INEQ     [reduce using rule 79 (expr)]
    OP_LESS     [reduce using rule 79 (expr)]
    OP_EQLESS   [reduce using rule 79 (expr)]
    OP_MORE     [reduce using rule 79 (expr)]
    OP_EQMORE   [reduce using rule 79 (expr)]
    OP_ASSIGN   [reduce using rule 79 (expr)]
    OP_PLUSEQ   [reduce using rule 79 (expr)]
    OP_MINUSEQ  [reduce using rule 79 (expr)]
    OP_MULEQ    [reduce using rule 79 (expr)]
    OP_DIVEQ    [reduce using rule 79 (expr)]
    OP_MODEQ    [reduce using rule 79 (expr)]
    OP_COMA     [reduce using rule 79 (expr)]
    OP_DOT      [reduce using rule 79 (expr)]
    $default    reduce using rule 79 (expr)


State 178

   73 expr: expr . OP_COMA expr
   74     | expr . OP_DOT expr
   75     | expr . OP_PLUS expr
   76     | expr . OP_MINUS expr
   77     | expr . OP_MUL expr
   78     | expr . OP_DIV expr
   79     | expr . OP_MOD expr
   80     | expr . OP_EQ expr
   80     | expr OP_EQ expr .  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_PAR_R, OP_SEMI, OP_COMA, OP_BRA_L, OP_BRA_R, OP_DOT, OP_MEAN]
   81     | expr . OP_INEQ expr
   82     | expr . OP_LESS expr
   83     | expr . OP_EQLESS expr
   84     | expr . OP_MORE expr
   85     | expr . OP_EQMORE expr
   86     | expr . OP_ASSIGN expr
   87     | expr . KW_AND expr
   88     | expr . KW_OR expr
   89     | expr . KW_NOT expr
   90     | expr . OP_PLUSEQ expr
   91     | expr . OP_MINUSEQ expr
   92     | expr . OP_MULEQ expr
   93     | expr . OP_DIVEQ expr
   94     | expr . OP_MODEQ expr

    KW_NOT      shift, and go to state 94
    KW_AND      shift, and go to state 95
    KW_OR       shift, and go to state 96
    OP_PLUS     shift, and go to state 97
    OP_MINUS    shift, and go to state 98
    OP_MUL      shift, and go to state 99
    OP_DIV      shift, and go to state 100
    OP_MOD      shift, and go to state 101
    OP_EQ       shift, and go to state 102
    OP_INEQ     shift, and go to state 103
    OP_LESS     shift, and go to state 104
    OP_EQLESS   shift, and go to state 105
    OP_MORE     shift, and go to state 106
    OP_EQMORE   shift, and go to state 107
    OP_ASSIGN   shift, and go to state 108
    OP_PLUSEQ   shift, and go to state 109
    OP_MINUSEQ  shift, and go to state 110
    OP_MULEQ    shift, and go to state 111
    OP_DIVEQ    shift, and go to state 112
    OP_MODEQ    shift, and go to state 113
    OP_COMA     shift, and go to state 115
    OP_DOT      shift, and go to state 116

    KW_NOT      [reduce using rule 80 (expr)]
    KW_AND      [reduce using rule 80 (expr)]
    KW_OR       [reduce using rule 80 (expr)]
    OP_PLUS     [reduce using rule 80 (expr)]
    OP_MINUS    [reduce using rule 80 (expr)]
    OP_MUL      [reduce using rule 80 (expr)]
    OP_DIV      [reduce using rule 80 (expr)]
    OP_MOD      [reduce using rule 80 (expr)]
    OP_EQ       [reduce using rule 80 (expr)]
    OP_INEQ     [reduce using rule 80 (expr)]
    OP_LESS     [reduce using rule 80 (expr)]
    OP_EQLESS   [reduce using rule 80 (expr)]
    OP_MORE     [reduce using rule 80 (expr)]
    OP_EQMORE   [reduce using rule 80 (expr)]
    OP_ASSIGN   [reduce using rule 80 (expr)]
    OP_PLUSEQ   [reduce using rule 80 (expr)]
    OP_MINUSEQ  [reduce using rule 80 (expr)]
    OP_MULEQ    [reduce using rule 80 (expr)]
    OP_DIVEQ    [reduce using rule 80 (expr)]
    OP_MODEQ    [reduce using rule 80 (expr)]
    OP_COMA     [reduce using rule 80 (expr)]
    OP_DOT      [reduce using rule 80 (expr)]
    $default    reduce using rule 80 (expr)


State 179

   73 expr: expr . OP_COMA expr
   74     | expr . OP_DOT expr
   75     | expr . OP_PLUS expr
   76     | expr . OP_MINUS expr
   77     | expr . OP_MUL expr
   78     | expr . OP_DIV expr
   79     | expr . OP_MOD expr
   80     | expr . OP_EQ expr
   81     | expr . OP_INEQ expr
   81     | expr OP_INEQ expr .  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_PAR_R, OP_SEMI, OP_COMA, OP_BRA_L, OP_BRA_R, OP_DOT, OP_MEAN]
   82     | expr . OP_LESS expr
   83     | expr . OP_EQLESS expr
   84     | expr . OP_MORE expr
   85     | expr . OP_EQMORE expr
   86     | expr . OP_ASSIGN expr
   87     | expr . KW_AND expr
   88     | expr . KW_OR expr
   89     | expr . KW_NOT expr
   90     | expr . OP_PLUSEQ expr
   91     | expr . OP_MINUSEQ expr
   92     | expr . OP_MULEQ expr
   93     | expr . OP_DIVEQ expr
   94     | expr . OP_MODEQ expr

    KW_NOT      shift, and go to state 94
    KW_AND      shift, and go to state 95
    KW_OR       shift, and go to state 96
    OP_PLUS     shift, and go to state 97
    OP_MINUS    shift, and go to state 98
    OP_MUL      shift, and go to state 99
    OP_DIV      shift, and go to state 100
    OP_MOD      shift, and go to state 101
    OP_EQ       shift, and go to state 102
    OP_INEQ     shift, and go to state 103
    OP_LESS     shift, and go to state 104
    OP_EQLESS   shift, and go to state 105
    OP_MORE     shift, and go to state 106
    OP_EQMORE   shift, and go to state 107
    OP_ASSIGN   shift, and go to state 108
    OP_PLUSEQ   shift, and go to state 109
    OP_MINUSEQ  shift, and go to state 110
    OP_MULEQ    shift, and go to state 111
    OP_DIVEQ    shift, and go to state 112
    OP_MODEQ    shift, and go to state 113
    OP_COMA     shift, and go to state 115
    OP_DOT      shift, and go to state 116

    KW_NOT      [reduce using rule 81 (expr)]
    KW_AND      [reduce using rule 81 (expr)]
    KW_OR       [reduce using rule 81 (expr)]
    OP_PLUS     [reduce using rule 81 (expr)]
    OP_MINUS    [reduce using rule 81 (expr)]
    OP_MUL      [reduce using rule 81 (expr)]
    OP_DIV      [reduce using rule 81 (expr)]
    OP_MOD      [reduce using rule 81 (expr)]
    OP_EQ       [reduce using rule 81 (expr)]
    OP_INEQ     [reduce using rule 81 (expr)]
    OP_LESS     [reduce using rule 81 (expr)]
    OP_EQLESS   [reduce using rule 81 (expr)]
    OP_MORE     [reduce using rule 81 (expr)]
    OP_EQMORE   [reduce using rule 81 (expr)]
    OP_ASSIGN   [reduce using rule 81 (expr)]
    OP_PLUSEQ   [reduce using rule 81 (expr)]
    OP_MINUSEQ  [reduce using rule 81 (expr)]
    OP_MULEQ    [reduce using rule 81 (expr)]
    OP_DIVEQ    [reduce using rule 81 (expr)]
    OP_MODEQ    [reduce using rule 81 (expr)]
    OP_COMA     [reduce using rule 81 (expr)]
    OP_DOT      [reduce using rule 81 (expr)]
    $default    reduce using rule 81 (expr)


State 180

   73 expr: expr . OP_COMA expr
   74     | expr . OP_DOT expr
   75     | expr . OP_PLUS expr
   76     | expr . OP_MINUS expr
   77     | expr . OP_MUL expr
   78     | expr . OP_DIV expr
   79     | expr . OP_MOD expr
   80     | expr . OP_EQ expr
   81     | expr . OP_INEQ expr
   82     | expr . OP_LESS expr
   82     | expr OP_LESS expr .  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_PAR_R, OP_SEMI, OP_COMA, OP_BRA_L, OP_BRA_R, OP_DOT, OP_MEAN]
   83     | expr . OP_EQLESS expr
   84     | expr . OP_MORE expr
   85     | expr . OP_EQMORE expr
   86     | expr . OP_ASSIGN expr
   87     | expr . KW_AND expr
   88     | expr . KW_OR expr
   89     | expr . KW_NOT expr
   90     | expr . OP_PLUSEQ expr
   91     | expr . OP_MINUSEQ expr
   92     | expr . OP_MULEQ expr
   93     | expr . OP_DIVEQ expr
   94     | expr . OP_MODEQ expr

    KW_NOT      shift, and go to state 94
    KW_AND      shift, and go to state 95
    KW_OR       shift, and go to state 96
    OP_PLUS     shift, and go to state 97
    OP_MINUS    shift, and go to state 98
    OP_MUL      shift, and go to state 99
    OP_DIV      shift, and go to state 100
    OP_MOD      shift, and go to state 101
    OP_EQ       shift, and go to state 102
    OP_INEQ     shift, and go to state 103
    OP_LESS     shift, and go to state 104
    OP_EQLESS   shift, and go to state 105
    OP_MORE     shift, and go to state 106
    OP_EQMORE   shift, and go to state 107
    OP_ASSIGN   shift, and go to state 108
    OP_PLUSEQ   shift, and go to state 109
    OP_MINUSEQ  shift, and go to state 110
    OP_MULEQ    shift, and go to state 111
    OP_DIVEQ    shift, and go to state 112
    OP_MODEQ    shift, and go to state 113
    OP_COMA     shift, and go to state 115
    OP_DOT      shift, and go to state 116

    KW_NOT      [reduce using rule 82 (expr)]
    KW_AND      [reduce using rule 82 (expr)]
    KW_OR       [reduce using rule 82 (expr)]
    OP_PLUS     [reduce using rule 82 (expr)]
    OP_MINUS    [reduce using rule 82 (expr)]
    OP_MUL      [reduce using rule 82 (expr)]
    OP_DIV      [reduce using rule 82 (expr)]
    OP_MOD      [reduce using rule 82 (expr)]
    OP_EQ       [reduce using rule 82 (expr)]
    OP_INEQ     [reduce using rule 82 (expr)]
    OP_LESS     [reduce using rule 82 (expr)]
    OP_EQLESS   [reduce using rule 82 (expr)]
    OP_MORE     [reduce using rule 82 (expr)]
    OP_EQMORE   [reduce using rule 82 (expr)]
    OP_ASSIGN   [reduce using rule 82 (expr)]
    OP_PLUSEQ   [reduce using rule 82 (expr)]
    OP_MINUSEQ  [reduce using rule 82 (expr)]
    OP_MULEQ    [reduce using rule 82 (expr)]
    OP_DIVEQ    [reduce using rule 82 (expr)]
    OP_MODEQ    [reduce using rule 82 (expr)]
    OP_COMA     [reduce using rule 82 (expr)]
    OP_DOT      [reduce using rule 82 (expr)]
    $default    reduce using rule 82 (expr)


State 181

   73 expr: expr . OP_COMA expr
   74     | expr . OP_DOT expr
   75     | expr . OP_PLUS expr
   76     | expr . OP_MINUS expr
   77     | expr . OP_MUL expr
   78     | expr . OP_DIV expr
   79     | expr . OP_MOD expr
   80     | expr . OP_EQ expr
   81     | expr . OP_INEQ expr
   82     | expr . OP_LESS expr
   83     | expr . OP_EQLESS expr
   83     | expr OP_EQLESS expr .  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_PAR_R, OP_SEMI, OP_COMA, OP_BRA_L, OP_BRA_R, OP_DOT, OP_MEAN]
   84     | expr . OP_MORE expr
   85     | expr . OP_EQMORE expr
   86     | expr . OP_ASSIGN expr
   87     | expr . KW_AND expr
   88     | expr . KW_OR expr
   89     | expr . KW_NOT expr
   90     | expr . OP_PLUSEQ expr
   91     | expr . OP_MINUSEQ expr
   92     | expr . OP_MULEQ expr
   93     | expr . OP_DIVEQ expr
   94     | expr . OP_MODEQ expr

    KW_NOT      shift, and go to state 94
    KW_AND      shift, and go to state 95
    KW_OR       shift, and go to state 96
    OP_PLUS     shift, and go to state 97
    OP_MINUS    shift, and go to state 98
    OP_MUL      shift, and go to state 99
    OP_DIV      shift, and go to state 100
    OP_MOD      shift, and go to state 101
    OP_EQ       shift, and go to state 102
    OP_INEQ     shift, and go to state 103
    OP_LESS     shift, and go to state 104
    OP_EQLESS   shift, and go to state 105
    OP_MORE     shift, and go to state 106
    OP_EQMORE   shift, and go to state 107
    OP_ASSIGN   shift, and go to state 108
    OP_PLUSEQ   shift, and go to state 109
    OP_MINUSEQ  shift, and go to state 110
    OP_MULEQ    shift, and go to state 111
    OP_DIVEQ    shift, and go to state 112
    OP_MODEQ    shift, and go to state 113
    OP_COMA     shift, and go to state 115
    OP_DOT      shift, and go to state 116

    KW_NOT      [reduce using rule 83 (expr)]
    KW_AND      [reduce using rule 83 (expr)]
    KW_OR       [reduce using rule 83 (expr)]
    OP_PLUS     [reduce using rule 83 (expr)]
    OP_MINUS    [reduce using rule 83 (expr)]
    OP_MUL      [reduce using rule 83 (expr)]
    OP_DIV      [reduce using rule 83 (expr)]
    OP_MOD      [reduce using rule 83 (expr)]
    OP_EQ       [reduce using rule 83 (expr)]
    OP_INEQ     [reduce using rule 83 (expr)]
    OP_LESS     [reduce using rule 83 (expr)]
    OP_EQLESS   [reduce using rule 83 (expr)]
    OP_MORE     [reduce using rule 83 (expr)]
    OP_EQMORE   [reduce using rule 83 (expr)]
    OP_ASSIGN   [reduce using rule 83 (expr)]
    OP_PLUSEQ   [reduce using rule 83 (expr)]
    OP_MINUSEQ  [reduce using rule 83 (expr)]
    OP_MULEQ    [reduce using rule 83 (expr)]
    OP_DIVEQ    [reduce using rule 83 (expr)]
    OP_MODEQ    [reduce using rule 83 (expr)]
    OP_COMA     [reduce using rule 83 (expr)]
    OP_DOT      [reduce using rule 83 (expr)]
    $default    reduce using rule 83 (expr)


State 182

   73 expr: expr . OP_COMA expr
   74     | expr . OP_DOT expr
   75     | expr . OP_PLUS expr
   76     | expr . OP_MINUS expr
   77     | expr . OP_MUL expr
   78     | expr . OP_DIV expr
   79     | expr . OP_MOD expr
   80     | expr . OP_EQ expr
   81     | expr . OP_INEQ expr
   82     | expr . OP_LESS expr
   83     | expr . OP_EQLESS expr
   84     | expr . OP_MORE expr
   84     | expr OP_MORE expr .  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_PAR_R, OP_SEMI, OP_COMA, OP_BRA_L, OP_BRA_R, OP_DOT, OP_MEAN]
   85     | expr . OP_EQMORE expr
   86     | expr . OP_ASSIGN expr
   87     | expr . KW_AND expr
   88     | expr . KW_OR expr
   89     | expr . KW_NOT expr
   90     | expr . OP_PLUSEQ expr
   91     | expr . OP_MINUSEQ expr
   92     | expr . OP_MULEQ expr
   93     | expr . OP_DIVEQ expr
   94     | expr . OP_MODEQ expr

    KW_NOT      shift, and go to state 94
    KW_AND      shift, and go to state 95
    KW_OR       shift, and go to state 96
    OP_PLUS     shift, and go to state 97
    OP_MINUS    shift, and go to state 98
    OP_MUL      shift, and go to state 99
    OP_DIV      shift, and go to state 100
    OP_MOD      shift, and go to state 101
    OP_EQ       shift, and go to state 102
    OP_INEQ     shift, and go to state 103
    OP_LESS     shift, and go to state 104
    OP_EQLESS   shift, and go to state 105
    OP_MORE     shift, and go to state 106
    OP_EQMORE   shift, and go to state 107
    OP_ASSIGN   shift, and go to state 108
    OP_PLUSEQ   shift, and go to state 109
    OP_MINUSEQ  shift, and go to state 110
    OP_MULEQ    shift, and go to state 111
    OP_DIVEQ    shift, and go to state 112
    OP_MODEQ    shift, and go to state 113
    OP_COMA     shift, and go to state 115
    OP_DOT      shift, and go to state 116

    KW_NOT      [reduce using rule 84 (expr)]
    KW_AND      [reduce using rule 84 (expr)]
    KW_OR       [reduce using rule 84 (expr)]
    OP_PLUS     [reduce using rule 84 (expr)]
    OP_MINUS    [reduce using rule 84 (expr)]
    OP_MUL      [reduce using rule 84 (expr)]
    OP_DIV      [reduce using rule 84 (expr)]
    OP_MOD      [reduce using rule 84 (expr)]
    OP_EQ       [reduce using rule 84 (expr)]
    OP_INEQ     [reduce using rule 84 (expr)]
    OP_LESS     [reduce using rule 84 (expr)]
    OP_EQLESS   [reduce using rule 84 (expr)]
    OP_MORE     [reduce using rule 84 (expr)]
    OP_EQMORE   [reduce using rule 84 (expr)]
    OP_ASSIGN   [reduce using rule 84 (expr)]
    OP_PLUSEQ   [reduce using rule 84 (expr)]
    OP_MINUSEQ  [reduce using rule 84 (expr)]
    OP_MULEQ    [reduce using rule 84 (expr)]
    OP_DIVEQ    [reduce using rule 84 (expr)]
    OP_MODEQ    [reduce using rule 84 (expr)]
    OP_COMA     [reduce using rule 84 (expr)]
    OP_DOT      [reduce using rule 84 (expr)]
    $default    reduce using rule 84 (expr)


State 183

   73 expr: expr . OP_COMA expr
   74     | expr . OP_DOT expr
   75     | expr . OP_PLUS expr
   76     | expr . OP_MINUS expr
   77     | expr . OP_MUL expr
   78     | expr . OP_DIV expr
   79     | expr . OP_MOD expr
   80     | expr . OP_EQ expr
   81     | expr . OP_INEQ expr
   82     | expr . OP_LESS expr
   83     | expr . OP_EQLESS expr
   84     | expr . OP_MORE expr
   85     | expr . OP_EQMORE expr
   85     | expr OP_EQMORE expr .  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_PAR_R, OP_SEMI, OP_COMA, OP_BRA_L, OP_BRA_R, OP_DOT, OP_MEAN]
   86     | expr . OP_ASSIGN expr
   87     | expr . KW_AND expr
   88     | expr . KW_OR expr
   89     | expr . KW_NOT expr
   90     | expr . OP_PLUSEQ expr
   91     | expr . OP_MINUSEQ expr
   92     | expr . OP_MULEQ expr
   93     | expr . OP_DIVEQ expr
   94     | expr . OP_MODEQ expr

    KW_NOT      shift, and go to state 94
    KW_AND      shift, and go to state 95
    KW_OR       shift, and go to state 96
    OP_PLUS     shift, and go to state 97
    OP_MINUS    shift, and go to state 98
    OP_MUL      shift, and go to state 99
    OP_DIV      shift, and go to state 100
    OP_MOD      shift, and go to state 101
    OP_EQ       shift, and go to state 102
    OP_INEQ     shift, and go to state 103
    OP_LESS     shift, and go to state 104
    OP_EQLESS   shift, and go to state 105
    OP_MORE     shift, and go to state 106
    OP_EQMORE   shift, and go to state 107
    OP_ASSIGN   shift, and go to state 108
    OP_PLUSEQ   shift, and go to state 109
    OP_MINUSEQ  shift, and go to state 110
    OP_MULEQ    shift, and go to state 111
    OP_DIVEQ    shift, and go to state 112
    OP_MODEQ    shift, and go to state 113
    OP_COMA     shift, and go to state 115
    OP_DOT      shift, and go to state 116

    KW_NOT      [reduce using rule 85 (expr)]
    KW_AND      [reduce using rule 85 (expr)]
    KW_OR       [reduce using rule 85 (expr)]
    OP_PLUS     [reduce using rule 85 (expr)]
    OP_MINUS    [reduce using rule 85 (expr)]
    OP_MUL      [reduce using rule 85 (expr)]
    OP_DIV      [reduce using rule 85 (expr)]
    OP_MOD      [reduce using rule 85 (expr)]
    OP_EQ       [reduce using rule 85 (expr)]
    OP_INEQ     [reduce using rule 85 (expr)]
    OP_LESS     [reduce using rule 85 (expr)]
    OP_EQLESS   [reduce using rule 85 (expr)]
    OP_MORE     [reduce using rule 85 (expr)]
    OP_EQMORE   [reduce using rule 85 (expr)]
    OP_ASSIGN   [reduce using rule 85 (expr)]
    OP_PLUSEQ   [reduce using rule 85 (expr)]
    OP_MINUSEQ  [reduce using rule 85 (expr)]
    OP_MULEQ    [reduce using rule 85 (expr)]
    OP_DIVEQ    [reduce using rule 85 (expr)]
    OP_MODEQ    [reduce using rule 85 (expr)]
    OP_COMA     [reduce using rule 85 (expr)]
    OP_DOT      [reduce using rule 85 (expr)]
    $default    reduce using rule 85 (expr)


State 184

   73 expr: expr . OP_COMA expr
   74     | expr . OP_DOT expr
   75     | expr . OP_PLUS expr
   76     | expr . OP_MINUS expr
   77     | expr . OP_MUL expr
   78     | expr . OP_DIV expr
   79     | expr . OP_MOD expr
   80     | expr . OP_EQ expr
   81     | expr . OP_INEQ expr
   82     | expr . OP_LESS expr
   83     | expr . OP_EQLESS expr
   84     | expr . OP_MORE expr
   85     | expr . OP_EQMORE expr
   86     | expr . OP_ASSIGN expr
   86     | expr OP_ASSIGN expr .  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_PAR_R, OP_SEMI, OP_COMA, OP_BRA_L, OP_BRA_R, OP_DOT, OP_MEAN]
   87     | expr . KW_AND expr
   88     | expr . KW_OR expr
   89     | expr . KW_NOT expr
   90     | expr . OP_PLUSEQ expr
   91     | expr . OP_MINUSEQ expr
   92     | expr . OP_MULEQ expr
   93     | expr . OP_DIVEQ expr
   94     | expr . OP_MODEQ expr

    KW_NOT      shift, and go to state 94
    KW_AND      shift, and go to state 95
    KW_OR       shift, and go to state 96
    OP_PLUS     shift, and go to state 97
    OP_MINUS    shift, and go to state 98
    OP_MUL      shift, and go to state 99
    OP_DIV      shift, and go to state 100
    OP_MOD      shift, and go to state 101
    OP_EQ       shift, and go to state 102
    OP_INEQ     shift, and go to state 103
    OP_LESS     shift, and go to state 104
    OP_EQLESS   shift, and go to state 105
    OP_MORE     shift, and go to state 106
    OP_EQMORE   shift, and go to state 107
    OP_ASSIGN   shift, and go to state 108
    OP_PLUSEQ   shift, and go to state 109
    OP_MINUSEQ  shift, and go to state 110
    OP_MULEQ    shift, and go to state 111
    OP_DIVEQ    shift, and go to state 112
    OP_MODEQ    shift, and go to state 113
    OP_COMA     shift, and go to state 115
    OP_DOT      shift, and go to state 116

    KW_NOT      [reduce using rule 86 (expr)]
    KW_AND      [reduce using rule 86 (expr)]
    KW_OR       [reduce using rule 86 (expr)]
    OP_PLUS     [reduce using rule 86 (expr)]
    OP_MINUS    [reduce using rule 86 (expr)]
    OP_MUL      [reduce using rule 86 (expr)]
    OP_DIV      [reduce using rule 86 (expr)]
    OP_MOD      [reduce using rule 86 (expr)]
    OP_EQ       [reduce using rule 86 (expr)]
    OP_INEQ     [reduce using rule 86 (expr)]
    OP_LESS     [reduce using rule 86 (expr)]
    OP_EQLESS   [reduce using rule 86 (expr)]
    OP_MORE     [reduce using rule 86 (expr)]
    OP_EQMORE   [reduce using rule 86 (expr)]
    OP_ASSIGN   [reduce using rule 86 (expr)]
    OP_PLUSEQ   [reduce using rule 86 (expr)]
    OP_MINUSEQ  [reduce using rule 86 (expr)]
    OP_MULEQ    [reduce using rule 86 (expr)]
    OP_DIVEQ    [reduce using rule 86 (expr)]
    OP_MODEQ    [reduce using rule 86 (expr)]
    OP_COMA     [reduce using rule 86 (expr)]
    OP_DOT      [reduce using rule 86 (expr)]
    $default    reduce using rule 86 (expr)


State 185

   73 expr: expr . OP_COMA expr
   74     | expr . OP_DOT expr
   75     | expr . OP_PLUS expr
   76     | expr . OP_MINUS expr
   77     | expr . OP_MUL expr
   78     | expr . OP_DIV expr
   79     | expr . OP_MOD expr
   80     | expr . OP_EQ expr
   81     | expr . OP_INEQ expr
   82     | expr . OP_LESS expr
   83     | expr . OP_EQLESS expr
   84     | expr . OP_MORE expr
   85     | expr . OP_EQMORE expr
   86     | expr . OP_ASSIGN expr
   87     | expr . KW_AND expr
   88     | expr . KW_OR expr
   89     | expr . KW_NOT expr
   90     | expr . OP_PLUSEQ expr
   90     | expr OP_PLUSEQ expr .  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_PAR_R, OP_SEMI, OP_COMA, OP_BRA_L, OP_BRA_R, OP_DOT, OP_MEAN]
   91     | expr . OP_MINUSEQ expr
   92     | expr . OP_MULEQ expr
   93     | expr . OP_DIVEQ expr
   94     | expr . OP_MODEQ expr

    KW_NOT      shift, and go to state 94
    KW_AND      shift, and go to state 95
    KW_OR       shift, and go to state 96
    OP_PLUS     shift, and go to state 97
    OP_MINUS    shift, and go to state 98
    OP_MUL      shift, and go to state 99
    OP_DIV      shift, and go to state 100
    OP_MOD      shift, and go to state 101
    OP_EQ       shift, and go to state 102
    OP_INEQ     shift, and go to state 103
    OP_LESS     shift, and go to state 104
    OP_EQLESS   shift, and go to state 105
    OP_MORE     shift, and go to state 106
    OP_EQMORE   shift, and go to state 107
    OP_ASSIGN   shift, and go to state 108
    OP_PLUSEQ   shift, and go to state 109
    OP_MINUSEQ  shift, and go to state 110
    OP_MULEQ    shift, and go to state 111
    OP_DIVEQ    shift, and go to state 112
    OP_MODEQ    shift, and go to state 113
    OP_COMA     shift, and go to state 115
    OP_DOT      shift, and go to state 116

    KW_NOT      [reduce using rule 90 (expr)]
    KW_AND      [reduce using rule 90 (expr)]
    KW_OR       [reduce using rule 90 (expr)]
    OP_PLUS     [reduce using rule 90 (expr)]
    OP_MINUS    [reduce using rule 90 (expr)]
    OP_MUL      [reduce using rule 90 (expr)]
    OP_DIV      [reduce using rule 90 (expr)]
    OP_MOD      [reduce using rule 90 (expr)]
    OP_EQ       [reduce using rule 90 (expr)]
    OP_INEQ     [reduce using rule 90 (expr)]
    OP_LESS     [reduce using rule 90 (expr)]
    OP_EQLESS   [reduce using rule 90 (expr)]
    OP_MORE     [reduce using rule 90 (expr)]
    OP_EQMORE   [reduce using rule 90 (expr)]
    OP_ASSIGN   [reduce using rule 90 (expr)]
    OP_PLUSEQ   [reduce using rule 90 (expr)]
    OP_MINUSEQ  [reduce using rule 90 (expr)]
    OP_MULEQ    [reduce using rule 90 (expr)]
    OP_DIVEQ    [reduce using rule 90 (expr)]
    OP_MODEQ    [reduce using rule 90 (expr)]
    OP_COMA     [reduce using rule 90 (expr)]
    OP_DOT      [reduce using rule 90 (expr)]
    $default    reduce using rule 90 (expr)


State 186

   73 expr: expr . OP_COMA expr
   74     | expr . OP_DOT expr
   75     | expr . OP_PLUS expr
   76     | expr . OP_MINUS expr
   77     | expr . OP_MUL expr
   78     | expr . OP_DIV expr
   79     | expr . OP_MOD expr
   80     | expr . OP_EQ expr
   81     | expr . OP_INEQ expr
   82     | expr . OP_LESS expr
   83     | expr . OP_EQLESS expr
   84     | expr . OP_MORE expr
   85     | expr . OP_EQMORE expr
   86     | expr . OP_ASSIGN expr
   87     | expr . KW_AND expr
   88     | expr . KW_OR expr
   89     | expr . KW_NOT expr
   90     | expr . OP_PLUSEQ expr
   91     | expr . OP_MINUSEQ expr
   91     | expr OP_MINUSEQ expr .  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_PAR_R, OP_SEMI, OP_COMA, OP_BRA_L, OP_BRA_R, OP_DOT, OP_MEAN]
   92     | expr . OP_MULEQ expr
   93     | expr . OP_DIVEQ expr
   94     | expr . OP_MODEQ expr

    KW_NOT      shift, and go to state 94
    KW_AND      shift, and go to state 95
    KW_OR       shift, and go to state 96
    OP_PLUS     shift, and go to state 97
    OP_MINUS    shift, and go to state 98
    OP_MUL      shift, and go to state 99
    OP_DIV      shift, and go to state 100
    OP_MOD      shift, and go to state 101
    OP_EQ       shift, and go to state 102
    OP_INEQ     shift, and go to state 103
    OP_LESS     shift, and go to state 104
    OP_EQLESS   shift, and go to state 105
    OP_MORE     shift, and go to state 106
    OP_EQMORE   shift, and go to state 107
    OP_ASSIGN   shift, and go to state 108
    OP_PLUSEQ   shift, and go to state 109
    OP_MINUSEQ  shift, and go to state 110
    OP_MULEQ    shift, and go to state 111
    OP_DIVEQ    shift, and go to state 112
    OP_MODEQ    shift, and go to state 113
    OP_COMA     shift, and go to state 115
    OP_DOT      shift, and go to state 116

    KW_NOT      [reduce using rule 91 (expr)]
    KW_AND      [reduce using rule 91 (expr)]
    KW_OR       [reduce using rule 91 (expr)]
    OP_PLUS     [reduce using rule 91 (expr)]
    OP_MINUS    [reduce using rule 91 (expr)]
    OP_MUL      [reduce using rule 91 (expr)]
    OP_DIV      [reduce using rule 91 (expr)]
    OP_MOD      [reduce using rule 91 (expr)]
    OP_EQ       [reduce using rule 91 (expr)]
    OP_INEQ     [reduce using rule 91 (expr)]
    OP_LESS     [reduce using rule 91 (expr)]
    OP_EQLESS   [reduce using rule 91 (expr)]
    OP_MORE     [reduce using rule 91 (expr)]
    OP_EQMORE   [reduce using rule 91 (expr)]
    OP_ASSIGN   [reduce using rule 91 (expr)]
    OP_PLUSEQ   [reduce using rule 91 (expr)]
    OP_MINUSEQ  [reduce using rule 91 (expr)]
    OP_MULEQ    [reduce using rule 91 (expr)]
    OP_DIVEQ    [reduce using rule 91 (expr)]
    OP_MODEQ    [reduce using rule 91 (expr)]
    OP_COMA     [reduce using rule 91 (expr)]
    OP_DOT      [reduce using rule 91 (expr)]
    $default    reduce using rule 91 (expr)


State 187

   73 expr: expr . OP_COMA expr
   74     | expr . OP_DOT expr
   75     | expr . OP_PLUS expr
   76     | expr . OP_MINUS expr
   77     | expr . OP_MUL expr
   78     | expr . OP_DIV expr
   79     | expr . OP_MOD expr
   80     | expr . OP_EQ expr
   81     | expr . OP_INEQ expr
   82     | expr . OP_LESS expr
   83     | expr . OP_EQLESS expr
   84     | expr . OP_MORE expr
   85     | expr . OP_EQMORE expr
   86     | expr . OP_ASSIGN expr
   87     | expr . KW_AND expr
   88     | expr . KW_OR expr
   89     | expr . KW_NOT expr
   90     | expr . OP_PLUSEQ expr
   91     | expr . OP_MINUSEQ expr
   92     | expr . OP_MULEQ expr
   92     | expr OP_MULEQ expr .  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_PAR_R, OP_SEMI, OP_COMA, OP_BRA_L, OP_BRA_R, OP_DOT, OP_MEAN]
   93     | expr . OP_DIVEQ expr
   94     | expr . OP_MODEQ expr

    KW_NOT      shift, and go to state 94
    KW_AND      shift, and go to state 95
    KW_OR       shift, and go to state 96
    OP_PLUS     shift, and go to state 97
    OP_MINUS    shift, and go to state 98
    OP_MUL      shift, and go to state 99
    OP_DIV      shift, and go to state 100
    OP_MOD      shift, and go to state 101
    OP_EQ       shift, and go to state 102
    OP_INEQ     shift, and go to state 103
    OP_LESS     shift, and go to state 104
    OP_EQLESS   shift, and go to state 105
    OP_MORE     shift, and go to state 106
    OP_EQMORE   shift, and go to state 107
    OP_ASSIGN   shift, and go to state 108
    OP_PLUSEQ   shift, and go to state 109
    OP_MINUSEQ  shift, and go to state 110
    OP_MULEQ    shift, and go to state 111
    OP_DIVEQ    shift, and go to state 112
    OP_MODEQ    shift, and go to state 113
    OP_COMA     shift, and go to state 115
    OP_DOT      shift, and go to state 116

    KW_NOT      [reduce using rule 92 (expr)]
    KW_AND      [reduce using rule 92 (expr)]
    KW_OR       [reduce using rule 92 (expr)]
    OP_PLUS     [reduce using rule 92 (expr)]
    OP_MINUS    [reduce using rule 92 (expr)]
    OP_MUL      [reduce using rule 92 (expr)]
    OP_DIV      [reduce using rule 92 (expr)]
    OP_MOD      [reduce using rule 92 (expr)]
    OP_EQ       [reduce using rule 92 (expr)]
    OP_INEQ     [reduce using rule 92 (expr)]
    OP_LESS     [reduce using rule 92 (expr)]
    OP_EQLESS   [reduce using rule 92 (expr)]
    OP_MORE     [reduce using rule 92 (expr)]
    OP_EQMORE   [reduce using rule 92 (expr)]
    OP_ASSIGN   [reduce using rule 92 (expr)]
    OP_PLUSEQ   [reduce using rule 92 (expr)]
    OP_MINUSEQ  [reduce using rule 92 (expr)]
    OP_MULEQ    [reduce using rule 92 (expr)]
    OP_DIVEQ    [reduce using rule 92 (expr)]
    OP_MODEQ    [reduce using rule 92 (expr)]
    OP_COMA     [reduce using rule 92 (expr)]
    OP_DOT      [reduce using rule 92 (expr)]
    $default    reduce using rule 92 (expr)


State 188

   73 expr: expr . OP_COMA expr
   74     | expr . OP_DOT expr
   75     | expr . OP_PLUS expr
   76     | expr . OP_MINUS expr
   77     | expr . OP_MUL expr
   78     | expr . OP_DIV expr
   79     | expr . OP_MOD expr
   80     | expr . OP_EQ expr
   81     | expr . OP_INEQ expr
   82     | expr . OP_LESS expr
   83     | expr . OP_EQLESS expr
   84     | expr . OP_MORE expr
   85     | expr . OP_EQMORE expr
   86     | expr . OP_ASSIGN expr
   87     | expr . KW_AND expr
   88     | expr . KW_OR expr
   89     | expr . KW_NOT expr
   90     | expr . OP_PLUSEQ expr
   91     | expr . OP_MINUSEQ expr
   92     | expr . OP_MULEQ expr
   93     | expr . OP_DIVEQ expr
   93     | expr OP_DIVEQ expr .  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_PAR_R, OP_SEMI, OP_COMA, OP_BRA_L, OP_BRA_R, OP_DOT, OP_MEAN]
   94     | expr . OP_MODEQ expr

    KW_NOT      shift, and go to state 94
    KW_AND      shift, and go to state 95
    KW_OR       shift, and go to state 96
    OP_PLUS     shift, and go to state 97
    OP_MINUS    shift, and go to state 98
    OP_MUL      shift, and go to state 99
    OP_DIV      shift, and go to state 100
    OP_MOD      shift, and go to state 101
    OP_EQ       shift, and go to state 102
    OP_INEQ     shift, and go to state 103
    OP_LESS     shift, and go to state 104
    OP_EQLESS   shift, and go to state 105
    OP_MORE     shift, and go to state 106
    OP_EQMORE   shift, and go to state 107
    OP_ASSIGN   shift, and go to state 108
    OP_PLUSEQ   shift, and go to state 109
    OP_MINUSEQ  shift, and go to state 110
    OP_MULEQ    shift, and go to state 111
    OP_DIVEQ    shift, and go to state 112
    OP_MODEQ    shift, and go to state 113
    OP_COMA     shift, and go to state 115
    OP_DOT      shift, and go to state 116

    KW_NOT      [reduce using rule 93 (expr)]
    KW_AND      [reduce using rule 93 (expr)]
    KW_OR       [reduce using rule 93 (expr)]
    OP_PLUS     [reduce using rule 93 (expr)]
    OP_MINUS    [reduce using rule 93 (expr)]
    OP_MUL      [reduce using rule 93 (expr)]
    OP_DIV      [reduce using rule 93 (expr)]
    OP_MOD      [reduce using rule 93 (expr)]
    OP_EQ       [reduce using rule 93 (expr)]
    OP_INEQ     [reduce using rule 93 (expr)]
    OP_LESS     [reduce using rule 93 (expr)]
    OP_EQLESS   [reduce using rule 93 (expr)]
    OP_MORE     [reduce using rule 93 (expr)]
    OP_EQMORE   [reduce using rule 93 (expr)]
    OP_ASSIGN   [reduce using rule 93 (expr)]
    OP_PLUSEQ   [reduce using rule 93 (expr)]
    OP_MINUSEQ  [reduce using rule 93 (expr)]
    OP_MULEQ    [reduce using rule 93 (expr)]
    OP_DIVEQ    [reduce using rule 93 (expr)]
    OP_MODEQ    [reduce using rule 93 (expr)]
    OP_COMA     [reduce using rule 93 (expr)]
    OP_DOT      [reduce using rule 93 (expr)]
    $default    reduce using rule 93 (expr)


State 189

   73 expr: expr . OP_COMA expr
   74     | expr . OP_DOT expr
   75     | expr . OP_PLUS expr
   76     | expr . OP_MINUS expr
   77     | expr . OP_MUL expr
   78     | expr . OP_DIV expr
   79     | expr . OP_MOD expr
   80     | expr . OP_EQ expr
   81     | expr . OP_INEQ expr
   82     | expr . OP_LESS expr
   83     | expr . OP_EQLESS expr
   84     | expr . OP_MORE expr
   85     | expr . OP_EQMORE expr
   86     | expr . OP_ASSIGN expr
   87     | expr . KW_AND expr
   88     | expr . KW_OR expr
   89     | expr . KW_NOT expr
   90     | expr . OP_PLUSEQ expr
   91     | expr . OP_MINUSEQ expr
   92     | expr . OP_MULEQ expr
   93     | expr . OP_DIVEQ expr
   94     | expr . OP_MODEQ expr
   94     | expr OP_MODEQ expr .  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_PAR_R, OP_SEMI, OP_COMA, OP_BRA_L, OP_BRA_R, OP_DOT, OP_MEAN]

    KW_NOT      shift, and go to state 94
    KW_AND      shift, and go to state 95
    KW_OR       shift, and go to state 96
    OP_PLUS     shift, and go to state 97
    OP_MINUS    shift, and go to state 98
    OP_MUL      shift, and go to state 99
    OP_DIV      shift, and go to state 100
    OP_MOD      shift, and go to state 101
    OP_EQ       shift, and go to state 102
    OP_INEQ     shift, and go to state 103
    OP_LESS     shift, and go to state 104
    OP_EQLESS   shift, and go to state 105
    OP_MORE     shift, and go to state 106
    OP_EQMORE   shift, and go to state 107
    OP_ASSIGN   shift, and go to state 108
    OP_PLUSEQ   shift, and go to state 109
    OP_MINUSEQ  shift, and go to state 110
    OP_MULEQ    shift, and go to state 111
    OP_DIVEQ    shift, and go to state 112
    OP_MODEQ    shift, and go to state 113
    OP_COMA     shift, and go to state 115
    OP_DOT      shift, and go to state 116

    KW_NOT      [reduce using rule 94 (expr)]
    KW_AND      [reduce using rule 94 (expr)]
    KW_OR       [reduce using rule 94 (expr)]
    OP_PLUS     [reduce using rule 94 (expr)]
    OP_MINUS    [reduce using rule 94 (expr)]
    OP_MUL      [reduce using rule 94 (expr)]
    OP_DIV      [reduce using rule 94 (expr)]
    OP_MOD      [reduce using rule 94 (expr)]
    OP_EQ       [reduce using rule 94 (expr)]
    OP_INEQ     [reduce using rule 94 (expr)]
    OP_LESS     [reduce using rule 94 (expr)]
    OP_EQLESS   [reduce using rule 94 (expr)]
    OP_MORE     [reduce using rule 94 (expr)]
    OP_EQMORE   [reduce using rule 94 (expr)]
    OP_ASSIGN   [reduce using rule 94 (expr)]
    OP_PLUSEQ   [reduce using rule 94 (expr)]
    OP_MINUSEQ  [reduce using rule 94 (expr)]
    OP_MULEQ    [reduce using rule 94 (expr)]
    OP_DIVEQ    [reduce using rule 94 (expr)]
    OP_MODEQ    [reduce using rule 94 (expr)]
    OP_COMA     [reduce using rule 94 (expr)]
    OP_DOT      [reduce using rule 94 (expr)]
    $default    reduce using rule 94 (expr)


State 190

   73 expr: expr . OP_COMA expr
   73     | expr OP_COMA expr .  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_PAR_R, OP_SEMI, OP_COMA, OP_BRA_L, OP_BRA_R, OP_DOT, OP_MEAN]
   74     | expr . OP_DOT expr
   75     | expr . OP_PLUS expr
   76     | expr . OP_MINUS expr
   77     | expr . OP_MUL expr
   78     | expr . OP_DIV expr
   79     | expr . OP_MOD expr
   80     | expr . OP_EQ expr
   81     | expr . OP_INEQ expr
   82     | expr . OP_LESS expr
   83     | expr . OP_EQLESS expr
   84     | expr . OP_MORE expr
   85     | expr . OP_EQMORE expr
   86     | expr . OP_ASSIGN expr
   87     | expr . KW_AND expr
   88     | expr . KW_OR expr
   89     | expr . KW_NOT expr
   90     | expr . OP_PLUSEQ expr
   91     | expr . OP_MINUSEQ expr
   92     | expr . OP_MULEQ expr
   93     | expr . OP_DIVEQ expr
   94     | expr . OP_MODEQ expr

    KW_NOT      shift, and go to state 94
    KW_AND      shift, and go to state 95
    KW_OR       shift, and go to state 96
    OP_PLUS     shift, and go to state 97
    OP_MINUS    shift, and go to state 98
    OP_MUL      shift, and go to state 99
    OP_DIV      shift, and go to state 100
    OP_MOD      shift, and go to state 101
    OP_EQ       shift, and go to state 102
    OP_INEQ     shift, and go to state 103
    OP_LESS     shift, and go to state 104
    OP_EQLESS   shift, and go to state 105
    OP_MORE     shift, and go to state 106
    OP_EQMORE   shift, and go to state 107
    OP_ASSIGN   shift, and go to state 108
    OP_PLUSEQ   shift, and go to state 109
    OP_MINUSEQ  shift, and go to state 110
    OP_MULEQ    shift, and go to state 111
    OP_DIVEQ    shift, and go to state 112
    OP_MODEQ    shift, and go to state 113
    OP_COMA     shift, and go to state 115
    OP_DOT      shift, and go to state 116

    KW_NOT      [reduce using rule 73 (expr)]
    KW_AND      [reduce using rule 73 (expr)]
    KW_OR       [reduce using rule 73 (expr)]
    OP_PLUS     [reduce using rule 73 (expr)]
    OP_MINUS    [reduce using rule 73 (expr)]
    OP_MUL      [reduce using rule 73 (expr)]
    OP_DIV      [reduce using rule 73 (expr)]
    OP_MOD      [reduce using rule 73 (expr)]
    OP_EQ       [reduce using rule 73 (expr)]
    OP_INEQ     [reduce using rule 73 (expr)]
    OP_LESS     [reduce using rule 73 (expr)]
    OP_EQLESS   [reduce using rule 73 (expr)]
    OP_MORE     [reduce using rule 73 (expr)]
    OP_EQMORE   [reduce using rule 73 (expr)]
    OP_ASSIGN   [reduce using rule 73 (expr)]
    OP_PLUSEQ   [reduce using rule 73 (expr)]
    OP_MINUSEQ  [reduce using rule 73 (expr)]
    OP_MULEQ    [reduce using rule 73 (expr)]
    OP_DIVEQ    [reduce using rule 73 (expr)]
    OP_MODEQ    [reduce using rule 73 (expr)]
    OP_COMA     [reduce using rule 73 (expr)]
    OP_DOT      [reduce using rule 73 (expr)]
    $default    reduce using rule 73 (expr)


State 191

   73 expr: expr . OP_COMA expr
   74     | expr . OP_DOT expr
   74     | expr OP_DOT expr .  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_PAR_R, OP_SEMI, OP_COMA, OP_BRA_L, OP_BRA_R, OP_DOT, OP_MEAN]
   75     | expr . OP_PLUS expr
   76     | expr . OP_MINUS expr
   77     | expr . OP_MUL expr
   78     | expr . OP_DIV expr
   79     | expr . OP_MOD expr
   80     | expr . OP_EQ expr
   81     | expr . OP_INEQ expr
   82     | expr . OP_LESS expr
   83     | expr . OP_EQLESS expr
   84     | expr . OP_MORE expr
   85     | expr . OP_EQMORE expr
   86     | expr . OP_ASSIGN expr
   87     | expr . KW_AND expr
   88     | expr . KW_OR expr
   89     | expr . KW_NOT expr
   90     | expr . OP_PLUSEQ expr
   91     | expr . OP_MINUSEQ expr
   92     | expr . OP_MULEQ expr
   93     | expr . OP_DIVEQ expr
   94     | expr . OP_MODEQ expr

    KW_NOT      shift, and go to state 94
    KW_AND      shift, and go to state 95
    KW_OR       shift, and go to state 96
    OP_PLUS     shift, and go to state 97
    OP_MINUS    shift, and go to state 98
    OP_MUL      shift, and go to state 99
    OP_DIV      shift, and go to state 100
    OP_MOD      shift, and go to state 101
    OP_EQ       shift, and go to state 102
    OP_INEQ     shift, and go to state 103
    OP_LESS     shift, and go to state 104
    OP_EQLESS   shift, and go to state 105
    OP_MORE     shift, and go to state 106
    OP_EQMORE   shift, and go to state 107
    OP_ASSIGN   shift, and go to state 108
    OP_PLUSEQ   shift, and go to state 109
    OP_MINUSEQ  shift, and go to state 110
    OP_MULEQ    shift, and go to state 111
    OP_DIVEQ    shift, and go to state 112
    OP_MODEQ    shift, and go to state 113
    OP_COMA     shift, and go to state 115
    OP_DOT      shift, and go to state 116

    KW_NOT      [reduce using rule 74 (expr)]
    KW_AND      [reduce using rule 74 (expr)]
    KW_OR       [reduce using rule 74 (expr)]
    OP_PLUS     [reduce using rule 74 (expr)]
    OP_MINUS    [reduce using rule 74 (expr)]
    OP_MUL      [reduce using rule 74 (expr)]
    OP_DIV      [reduce using rule 74 (expr)]
    OP_MOD      [reduce using rule 74 (expr)]
    OP_EQ       [reduce using rule 74 (expr)]
    OP_INEQ     [reduce using rule 74 (expr)]
    OP_LESS     [reduce using rule 74 (expr)]
    OP_EQLESS   [reduce using rule 74 (expr)]
    OP_MORE     [reduce using rule 74 (expr)]
    OP_EQMORE   [reduce using rule 74 (expr)]
    OP_ASSIGN   [reduce using rule 74 (expr)]
    OP_PLUSEQ   [reduce using rule 74 (expr)]
    OP_MINUSEQ  [reduce using rule 74 (expr)]
    OP_MULEQ    [reduce using rule 74 (expr)]
    OP_DIVEQ    [reduce using rule 74 (expr)]
    OP_MODEQ    [reduce using rule 74 (expr)]
    OP_COMA     [reduce using rule 74 (expr)]
    OP_DOT      [reduce using rule 74 (expr)]
    $default    reduce using rule 74 (expr)


State 192

    3 final_program: program main main_program KW_ENDDEF . OP_SEMI program
    4              | program main main_program KW_ENDDEF . OP_SEMI

    OP_SEMI  shift, and go to state 234


State 193

   13 global_declarations: func_declaration KW_RETURN expr OP_SEMI . KW_ENDDEF OP_SEMI

    KW_ENDDEF  shift, and go to state 235


State 194

   14 global_declarations: func_declaration function_code KW_ENDDEF OP_SEMI .

    $default  reduce using rule 14 (global_declarations)


State 195

   11 global_declarations: func_declaration function_code KW_RETURN OP_SEMI . KW_ENDDEF OP_SEMI
   97 expr: OP_SEMI .  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_SEMI, OP_COMA, OP_DOT]

    KW_ENDDEF  shift, and go to state 236

    $default  reduce using rule 97 (expr)


State 196

   12 global_declarations: func_declaration function_code KW_RETURN expr . OP_SEMI KW_ENDDEF OP_SEMI
   73 expr: expr . OP_COMA expr
   74     | expr . OP_DOT expr
   75     | expr . OP_PLUS expr
   76     | expr . OP_MINUS expr
   77     | expr . OP_MUL expr
   78     | expr . OP_DIV expr
   79     | expr . OP_MOD expr
   80     | expr . OP_EQ expr
   81     | expr . OP_INEQ expr
   82     | expr . OP_LESS expr
   83     | expr . OP_EQLESS expr
   84     | expr . OP_MORE expr
   85     | expr . OP_EQMORE expr
   86     | expr . OP_ASSIGN expr
   87     | expr . KW_AND expr
   88     | expr . KW_OR expr
   89     | expr . KW_NOT expr
   90     | expr . OP_PLUSEQ expr
   91     | expr . OP_MINUSEQ expr
   92     | expr . OP_MULEQ expr
   93     | expr . OP_DIVEQ expr
   94     | expr . OP_MODEQ expr

    KW_NOT      shift, and go to state 94
    KW_AND      shift, and go to state 95
    KW_OR       shift, and go to state 96
    OP_PLUS     shift, and go to state 97
    OP_MINUS    shift, and go to state 98
    OP_MUL      shift, and go to state 99
    OP_DIV      shift, and go to state 100
    OP_MOD      shift, and go to state 101
    OP_EQ       shift, and go to state 102
    OP_INEQ     shift, and go to state 103
    OP_LESS     shift, and go to state 104
    OP_EQLESS   shift, and go to state 105
    OP_MORE     shift, and go to state 106
    OP_EQMORE   shift, and go to state 107
    OP_ASSIGN   shift, and go to state 108
    OP_PLUSEQ   shift, and go to state 109
    OP_MINUSEQ  shift, and go to state 110
    OP_MULEQ    shift, and go to state 111
    OP_DIVEQ    shift, and go to state 112
    OP_MODEQ    shift, and go to state 113
    OP_SEMI     shift, and go to state 237
    OP_COMA     shift, and go to state 115
    OP_DOT      shift, and go to state 116


State 197

   41 var_declarations: variable_types OP_ASSIGN variable_types OP_BRA_L . legal_array_index OP_BRA_R OP_SEMI
   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   69 expr: variable_types OP_BRA_L . legal_array_index OP_BRA_R
   70     | variable_types OP_BRA_L . KW_HASH legal_array_index OP_BRA_R
   71     | variable_types OP_BRA_L . variable_types OP_BRA_R
   98 legal_array_index: . TK_INT
   99                  | . TK_IDENT

    TK_IDENT  shift, and go to state 166
    TK_INT    shift, and go to state 126
    KW_HASH   shift, and go to state 167

    variable_types     go to state 168
    legal_array_index  go to state 238


State 198

   38 var_declarations: variable_types OP_ASSIGN expr OP_SEMI .

    $default  reduce using rule 38 (var_declarations)


State 199

   39 var_declarations: variable_types OP_BRA_L legal_array_index OP_BRA_R . OP_ASSIGN expr OP_SEMI
   40                 | variable_types OP_BRA_L legal_array_index OP_BRA_R . OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   42                 | variable_types OP_BRA_L legal_array_index OP_BRA_R . OP_MEAN types OP_SEMI

    OP_ASSIGN  shift, and go to state 239
    OP_MEAN    shift, and go to state 240


State 200

   58 comp_types_of_declarations: comp_types_of_declarations OP_COMA variable_types OP_BRA_L . legal_array_index OP_BRA_R
   98 legal_array_index: . TK_INT
   99                  | . TK_IDENT

    TK_IDENT  shift, and go to state 125
    TK_INT    shift, and go to state 126

    legal_array_index  go to state 241


State 201

   43 var_declarations: comp_types_of_declarations OP_MEAN types OP_SEMI .

    $default  reduce using rule 43 (var_declarations)


State 202

   24 func_parameters: TK_IDENT OP_BRA_L . OP_BRA_R OP_MEAN types

    OP_BRA_R  shift, and go to state 242


State 203

   22 func_parameters: TK_IDENT OP_MEAN . types
  103 types: . KW_STR
  104      | . KW_INTEGER
  105      | . KW_SCALAR
  106      | . KW_BOOLEAN
  107      | . TK_IDENT

    TK_IDENT    shift, and go to state 129
    KW_INTEGER  shift, and go to state 130
    KW_SCALAR   shift, and go to state 131
    KW_STR      shift, and go to state 132
    KW_BOOLEAN  shift, and go to state 133

    types  go to state 243


State 204

   19 func_declaration: KW_DEF TK_IDENT OP_PAR_L OP_PAR_R OP_MINUS . OP_MORE types OP_MEAN

    OP_MORE  shift, and go to state 244


State 205

   20 func_declaration: KW_DEF TK_IDENT OP_PAR_L OP_PAR_R OP_MEAN .

    $default  reduce using rule 20 (func_declaration)


State 206

   16 func_declaration: KW_DEF TK_IDENT OP_PAR_L func_parameters OP_PAR_R . OP_MINUS OP_MORE types OP_MEAN
   17                 | KW_DEF TK_IDENT OP_PAR_L func_parameters OP_PAR_R . OP_MINUS OP_MORE KW_VOID OP_MEAN
   18                 | KW_DEF TK_IDENT OP_PAR_L func_parameters OP_PAR_R . OP_MEAN

    OP_MINUS  shift, and go to state 245
    OP_MEAN   shift, and go to state 246


State 207

   23 func_parameters: func_parameters OP_COMA . TK_IDENT OP_MEAN types
   25                | func_parameters OP_COMA . TK_IDENT OP_BRA_L OP_BRA_R OP_MEAN types

    TK_IDENT  shift, and go to state 247


State 208

    7 main: KW_DEF KW_MAIN OP_PAR_L OP_PAR_R OP_MEAN .

    $default  reduce using rule 7 (main)


State 209

   44 var_declarations: KW_CONST comp_types_of_declarations OP_ASSIGN data_types OP_MEAN . types OP_SEMI
  103 types: . KW_STR
  104      | . KW_INTEGER
  105      | . KW_SCALAR
  106      | . KW_BOOLEAN
  107      | . TK_IDENT

    TK_IDENT    shift, and go to state 129
    KW_INTEGER  shift, and go to state 130
    KW_SCALAR   shift, and go to state 131
    KW_STR      shift, and go to state 132
    KW_BOOLEAN  shift, and go to state 133

    types  go to state 248


State 210

   45 var_declarations: KW_CONST comp_types_of_declarations OP_ASSIGN operators data_types . OP_MEAN types OP_SEMI

    OP_MEAN  shift, and go to state 249


State 211

  135 comp_var_declarations: KW_HASH TK_IDENT . OP_ASSIGN expr OP_SEMI
  136                      | KW_HASH TK_IDENT . OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN expr OP_SEMI
  137                      | KW_HASH TK_IDENT . OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN KW_HASH TK_IDENT OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
  138                      | KW_HASH TK_IDENT . OP_ASSIGN TK_IDENT OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
  139                      | KW_HASH TK_IDENT . OP_BRA_L legal_array_index OP_BRA_R OP_MEAN types OP_SEMI
  143 comp_initialise_types_of_declarations: KW_HASH TK_IDENT .  [OP_COMA, OP_MEAN]

    OP_ASSIGN  shift, and go to state 250
    OP_BRA_L   shift, and go to state 251

    $default  reduce using rule 143 (comp_initialise_types_of_declarations)


State 212

  149 comp_func_declaration: KW_DEF TK_IDENT . OP_PAR_L func_parameters OP_PAR_R OP_MINUS OP_MORE types OP_MEAN
  150                      | KW_DEF TK_IDENT . OP_PAR_L func_parameters OP_PAR_R OP_MEAN
  151                      | KW_DEF TK_IDENT . OP_PAR_L OP_PAR_R OP_MINUS OP_MORE types OP_MEAN
  152                      | KW_DEF TK_IDENT . OP_PAR_L OP_PAR_R OP_MEAN

    OP_PAR_L  shift, and go to state 252


State 213

  143 comp_initialise_types_of_declarations: KW_HASH . TK_IDENT

    TK_IDENT  shift, and go to state 253


State 214

  141 comp_var_declarations: KW_CONST comp_initialise_types_of_declarations . OP_ASSIGN data_types OP_MEAN types OP_SEMI
  142                      | KW_CONST comp_initialise_types_of_declarations . OP_ASSIGN operators data_types OP_MEAN types OP_SEMI
  144 comp_initialise_types_of_declarations: comp_initialise_types_of_declarations . OP_COMA KW_HASH TK_IDENT
  145                                      | comp_initialise_types_of_declarations . OP_COMA KW_HASH TK_IDENT OP_BRA_L legal_array_index OP_BRA_R

    OP_ASSIGN  shift, and go to state 254
    OP_COMA    shift, and go to state 217


State 215

   15 global_declarations: KW_COMP TK_IDENT OP_MEAN comp_code KW_ENDCOMP . OP_SEMI

    OP_SEMI  shift, and go to state 255


State 216

  127 comp_code: comp_code comp_local_declarations .

    $default  reduce using rule 127 (comp_code)


State 217

  144 comp_initialise_types_of_declarations: comp_initialise_types_of_declarations OP_COMA . KW_HASH TK_IDENT
  145                                      | comp_initialise_types_of_declarations OP_COMA . KW_HASH TK_IDENT OP_BRA_L legal_array_index OP_BRA_R

    KW_HASH  shift, and go to state 256


State 218

  103 types: . KW_STR
  104      | . KW_INTEGER
  105      | . KW_SCALAR
  106      | . KW_BOOLEAN
  107      | . TK_IDENT
  140 comp_var_declarations: comp_initialise_types_of_declarations OP_MEAN . types OP_SEMI

    TK_IDENT    shift, and go to state 129
    KW_INTEGER  shift, and go to state 130
    KW_SCALAR   shift, and go to state 131
    KW_STR      shift, and go to state 132
    KW_BOOLEAN  shift, and go to state 133

    types  go to state 257


State 219

   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   59 expr: . %empty  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_SEMI, OP_COMA, OP_DOT]
   60     | . TK_STRING
   61     | . TK_INT
   62     | . TK_REAL
   63     | . KW_TRUE
   64     | . KW_FALSE
   65     | . variable_types OP_PAR_L OP_PAR_R
   66     | . variable_types OP_PAR_L expr OP_PAR_R
   67     | . operators expr
   68     | . variable_types
   69     | . variable_types OP_BRA_L legal_array_index OP_BRA_R
   70     | . variable_types OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | . variable_types OP_BRA_L variable_types OP_BRA_R
   72     | . OP_POINTER expr
   73     | . expr OP_COMA expr
   74     | . expr OP_DOT expr
   75     | . expr OP_PLUS expr
   76     | . expr OP_MINUS expr
   77     | . expr OP_MUL expr
   78     | . expr OP_DIV expr
   79     | . expr OP_MOD expr
   80     | . expr OP_EQ expr
   81     | . expr OP_INEQ expr
   82     | . expr OP_LESS expr
   83     | . expr OP_EQLESS expr
   84     | . expr OP_MORE expr
   85     | . expr OP_EQMORE expr
   86     | . expr OP_ASSIGN expr
   87     | . expr KW_AND expr
   88     | . expr KW_OR expr
   89     | . expr KW_NOT expr
   90     | . expr OP_PLUSEQ expr
   91     | . expr OP_MINUSEQ expr
   92     | . expr OP_MULEQ expr
   93     | . expr OP_DIVEQ expr
   94     | . expr OP_MODEQ expr
   95     | . OP_PAR_L expr OP_PAR_R
   96     | . OP_BRA_L expr OP_BRA_L
   97     | . OP_SEMI
  108 operators: . OP_PLUS
  109          | . OP_MINUS
  110          | . OP_MUL
  111          | . OP_DIV
  112          | . OP_MOD
  113          | . OP_POWER
  114          | . OP_EQ
  115          | . OP_INEQ
  116          | . OP_LESS
  117          | . OP_EQLESS
  118          | . OP_MORE
  119          | . OP_EQMORE
  120          | . OP_ASSIGN
  121          | . OP_PLUSEQ
  122          | . OP_MINUSEQ
  123          | . OP_MULEQ
  124          | . OP_DIVEQ
  125          | . OP_MODEQ
  132 comp_local_declarations: comp_func_declaration KW_RETURN . expr OP_SEMI KW_ENDDEF OP_SEMI

    TK_STRING   shift, and go to state 23
    TK_IDENT    shift, and go to state 1
    TK_INT      shift, and go to state 24
    TK_REAL     shift, and go to state 25
    KW_HASH     shift, and go to state 2
    KW_FALSE    shift, and go to state 27
    KW_TRUE     shift, and go to state 32
    OP_PLUS     shift, and go to state 33
    OP_MINUS    shift, and go to state 34
    OP_MUL      shift, and go to state 35
    OP_DIV      shift, and go to state 36
    OP_MOD      shift, and go to state 37
    OP_POWER    shift, and go to state 38
    OP_EQ       shift, and go to state 39
    OP_INEQ     shift, and go to state 40
    OP_LESS     shift, and go to state 41
    OP_EQLESS   shift, and go to state 42
    OP_MORE     shift, and go to state 43
    OP_EQMORE   shift, and go to state 44
    OP_ASSIGN   shift, and go to state 45
    OP_PLUSEQ   shift, and go to state 46
    OP_MINUSEQ  shift, and go to state 47
    OP_MULEQ    shift, and go to state 48
    OP_DIVEQ    shift, and go to state 49
    OP_MODEQ    shift, and go to state 50
    OP_POINTER  shift, and go to state 51
    OP_PAR_L    shift, and go to state 52
    OP_SEMI     shift, and go to state 53
    OP_BRA_L    shift, and go to state 54

    OP_PLUS     [reduce using rule 59 (expr)]
    OP_MINUS    [reduce using rule 59 (expr)]
    OP_MUL      [reduce using rule 59 (expr)]
    OP_DIV      [reduce using rule 59 (expr)]
    OP_MOD      [reduce using rule 59 (expr)]
    OP_EQ       [reduce using rule 59 (expr)]
    OP_INEQ     [reduce using rule 59 (expr)]
    OP_LESS     [reduce using rule 59 (expr)]
    OP_EQLESS   [reduce using rule 59 (expr)]
    OP_MORE     [reduce using rule 59 (expr)]
    OP_EQMORE   [reduce using rule 59 (expr)]
    OP_ASSIGN   [reduce using rule 59 (expr)]
    OP_PLUSEQ   [reduce using rule 59 (expr)]
    OP_MINUSEQ  [reduce using rule 59 (expr)]
    OP_MULEQ    [reduce using rule 59 (expr)]
    OP_DIVEQ    [reduce using rule 59 (expr)]
    OP_MODEQ    [reduce using rule 59 (expr)]
    OP_SEMI     [reduce using rule 59 (expr)]
    $default    reduce using rule 59 (expr)

    variable_types  go to state 82
    expr            go to state 258
    operators       go to state 63


State 220

  147 comp_function_code: local_declarations .

    $default  reduce using rule 147 (comp_function_code)


State 221

   31 local_declarations: . var_declarations
   32                   | . expr OP_SEMI
   33                   | . conditions KW_ENDIF OP_SEMI
   34                   | . while_loop KW_ENDWHILE OP_SEMI
   35                   | . for_loop KW_ENDFOR OP_SEMI
   36                   | . KW_BREAK OP_SEMI
   37                   | . KW_CONTINUE OP_SEMI
   38 var_declarations: . variable_types OP_ASSIGN expr OP_SEMI
   39                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN expr OP_SEMI
   40                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   41                 | . variable_types OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   42                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_MEAN types OP_SEMI
   43                 | . comp_types_of_declarations OP_MEAN types OP_SEMI
   44                 | . KW_CONST comp_types_of_declarations OP_ASSIGN data_types OP_MEAN types OP_SEMI
   45                 | . KW_CONST comp_types_of_declarations OP_ASSIGN operators data_types OP_MEAN types OP_SEMI
   46 conditions: . KW_IF OP_PAR_L expr OP_PAR_R OP_MEAN main_program
   47           | . KW_IF OP_PAR_L expr OP_PAR_R OP_MEAN comp_function_code
   48           | . conditions KW_ELSE OP_MEAN main_program
   49 while_loop: . KW_WHILE OP_PAR_L expr OP_PAR_R OP_MEAN main_program
   50           | . KW_WHILE OP_PAR_L expr OP_PAR_R OP_MEAN comp_function_code
   51 for_loop: . KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_BRA_R OP_MEAN main_program
   52         | . KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_BRA_R OP_MEAN comp_function_code
   53         | . KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_MEAN expr OP_BRA_R OP_MEAN main_program
   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   56 comp_types_of_declarations: . variable_types
   57                           | . comp_types_of_declarations OP_COMA variable_types
   58                           | . comp_types_of_declarations OP_COMA variable_types OP_BRA_L legal_array_index OP_BRA_R
   59 expr: . %empty  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_SEMI, OP_COMA, OP_DOT]
   60     | . TK_STRING
   61     | . TK_INT
   62     | . TK_REAL
   63     | . KW_TRUE
   64     | . KW_FALSE
   65     | . variable_types OP_PAR_L OP_PAR_R
   66     | . variable_types OP_PAR_L expr OP_PAR_R
   67     | . operators expr
   68     | . variable_types
   69     | . variable_types OP_BRA_L legal_array_index OP_BRA_R
   70     | . variable_types OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | . variable_types OP_BRA_L variable_types OP_BRA_R
   72     | . OP_POINTER expr
   73     | . expr OP_COMA expr
   74     | . expr OP_DOT expr
   75     | . expr OP_PLUS expr
   76     | . expr OP_MINUS expr
   77     | . expr OP_MUL expr
   78     | . expr OP_DIV expr
   79     | . expr OP_MOD expr
   80     | . expr OP_EQ expr
   81     | . expr OP_INEQ expr
   82     | . expr OP_LESS expr
   83     | . expr OP_EQLESS expr
   84     | . expr OP_MORE expr
   85     | . expr OP_EQMORE expr
   86     | . expr OP_ASSIGN expr
   87     | . expr KW_AND expr
   88     | . expr KW_OR expr
   89     | . expr KW_NOT expr
   90     | . expr OP_PLUSEQ expr
   91     | . expr OP_MINUSEQ expr
   92     | . expr OP_MULEQ expr
   93     | . expr OP_DIVEQ expr
   94     | . expr OP_MODEQ expr
   95     | . OP_PAR_L expr OP_PAR_R
   96     | . OP_BRA_L expr OP_BRA_L
   97     | . OP_SEMI
  108 operators: . OP_PLUS
  109          | . OP_MINUS
  110          | . OP_MUL
  111          | . OP_DIV
  112          | . OP_MOD
  113          | . OP_POWER
  114          | . OP_EQ
  115          | . OP_INEQ
  116          | . OP_LESS
  117          | . OP_EQLESS
  118          | . OP_MORE
  119          | . OP_EQMORE
  120          | . OP_ASSIGN
  121          | . OP_PLUSEQ
  122          | . OP_MINUSEQ
  123          | . OP_MULEQ
  124          | . OP_DIVEQ
  125          | . OP_MODEQ
  130 comp_local_declarations: comp_func_declaration comp_function_code . KW_RETURN OP_SEMI KW_ENDDEF OP_SEMI
  131                        | comp_func_declaration comp_function_code . KW_RETURN expr OP_SEMI KW_ENDDEF OP_SEMI
  133                        | comp_func_declaration comp_function_code . KW_ENDDEF OP_SEMI
  148 comp_function_code: comp_function_code . local_declarations

    TK_STRING    shift, and go to state 23
    TK_IDENT     shift, and go to state 1
    TK_INT       shift, and go to state 24
    TK_REAL      shift, and go to state 25
    KW_HASH      shift, and go to state 2
    KW_IF        shift, and go to state 26
    KW_FALSE     shift, and go to state 27
    KW_FOR       shift, and go to state 28
    KW_BREAK     shift, and go to state 29
    KW_CONST     shift, and go to state 4
    KW_CONTINUE  shift, and go to state 30
    KW_ENDDEF    shift, and go to state 259
    KW_WHILE     shift, and go to state 31
    KW_RETURN    shift, and go to state 260
    KW_TRUE      shift, and go to state 32
    OP_PLUS      shift, and go to state 33
    OP_MINUS     shift, and go to state 34
    OP_MUL       shift, and go to state 35
    OP_DIV       shift, and go to state 36
    OP_MOD       shift, and go to state 37
    OP_POWER     shift, and go to state 38
    OP_EQ        shift, and go to state 39
    OP_INEQ      shift, and go to state 40
    OP_LESS      shift, and go to state 41
    OP_EQLESS    shift, and go to state 42
    OP_MORE      shift, and go to state 43
    OP_EQMORE    shift, and go to state 44
    OP_ASSIGN    shift, and go to state 45
    OP_PLUSEQ    shift, and go to state 46
    OP_MINUSEQ   shift, and go to state 47
    OP_MULEQ     shift, and go to state 48
    OP_DIVEQ     shift, and go to state 49
    OP_MODEQ     shift, and go to state 50
    OP_POINTER   shift, and go to state 51
    OP_PAR_L     shift, and go to state 52
    OP_SEMI      shift, and go to state 53
    OP_BRA_L     shift, and go to state 54

    OP_PLUS     [reduce using rule 59 (expr)]
    OP_MINUS    [reduce using rule 59 (expr)]
    OP_MUL      [reduce using rule 59 (expr)]
    OP_DIV      [reduce using rule 59 (expr)]
    OP_MOD      [reduce using rule 59 (expr)]
    OP_EQ       [reduce using rule 59 (expr)]
    OP_INEQ     [reduce using rule 59 (expr)]
    OP_LESS     [reduce using rule 59 (expr)]
    OP_EQLESS   [reduce using rule 59 (expr)]
    OP_MORE     [reduce using rule 59 (expr)]
    OP_EQMORE   [reduce using rule 59 (expr)]
    OP_ASSIGN   [reduce using rule 59 (expr)]
    OP_PLUSEQ   [reduce using rule 59 (expr)]
    OP_MINUSEQ  [reduce using rule 59 (expr)]
    OP_MULEQ    [reduce using rule 59 (expr)]
    OP_DIVEQ    [reduce using rule 59 (expr)]
    OP_MODEQ    [reduce using rule 59 (expr)]
    OP_SEMI     [reduce using rule 59 (expr)]
    $default    reduce using rule 59 (expr)

    local_declarations          go to state 261
    var_declarations            go to state 57
    conditions                  go to state 58
    while_loop                  go to state 59
    for_loop                    go to state 60
    variable_types              go to state 61
    comp_types_of_declarations  go to state 15
    expr                        go to state 62
    operators                   go to state 63


State 222

   46 conditions: KW_IF OP_PAR_L expr OP_PAR_R . OP_MEAN main_program
   47           | KW_IF OP_PAR_L expr OP_PAR_R . OP_MEAN comp_function_code

    OP_MEAN  shift, and go to state 262


State 223

   51 for_loop: KW_FOR TK_IDENT KW_IN OP_BRA_L . expr OP_MEAN expr OP_BRA_R OP_MEAN main_program
   52         | KW_FOR TK_IDENT KW_IN OP_BRA_L . expr OP_MEAN expr OP_BRA_R OP_MEAN comp_function_code
   53         | KW_FOR TK_IDENT KW_IN OP_BRA_L . expr OP_MEAN expr OP_MEAN expr OP_BRA_R OP_MEAN main_program
   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   59 expr: . %empty  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_COMA, OP_DOT, OP_MEAN]
   60     | . TK_STRING
   61     | . TK_INT
   62     | . TK_REAL
   63     | . KW_TRUE
   64     | . KW_FALSE
   65     | . variable_types OP_PAR_L OP_PAR_R
   66     | . variable_types OP_PAR_L expr OP_PAR_R
   67     | . operators expr
   68     | . variable_types
   69     | . variable_types OP_BRA_L legal_array_index OP_BRA_R
   70     | . variable_types OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | . variable_types OP_BRA_L variable_types OP_BRA_R
   72     | . OP_POINTER expr
   73     | . expr OP_COMA expr
   74     | . expr OP_DOT expr
   75     | . expr OP_PLUS expr
   76     | . expr OP_MINUS expr
   77     | . expr OP_MUL expr
   78     | . expr OP_DIV expr
   79     | . expr OP_MOD expr
   80     | . expr OP_EQ expr
   81     | . expr OP_INEQ expr
   82     | . expr OP_LESS expr
   83     | . expr OP_EQLESS expr
   84     | . expr OP_MORE expr
   85     | . expr OP_EQMORE expr
   86     | . expr OP_ASSIGN expr
   87     | . expr KW_AND expr
   88     | . expr KW_OR expr
   89     | . expr KW_NOT expr
   90     | . expr OP_PLUSEQ expr
   91     | . expr OP_MINUSEQ expr
   92     | . expr OP_MULEQ expr
   93     | . expr OP_DIVEQ expr
   94     | . expr OP_MODEQ expr
   95     | . OP_PAR_L expr OP_PAR_R
   96     | . OP_BRA_L expr OP_BRA_L
   97     | . OP_SEMI
  108 operators: . OP_PLUS
  109          | . OP_MINUS
  110          | . OP_MUL
  111          | . OP_DIV
  112          | . OP_MOD
  113          | . OP_POWER
  114          | . OP_EQ
  115          | . OP_INEQ
  116          | . OP_LESS
  117          | . OP_EQLESS
  118          | . OP_MORE
  119          | . OP_EQMORE
  120          | . OP_ASSIGN
  121          | . OP_PLUSEQ
  122          | . OP_MINUSEQ
  123          | . OP_MULEQ
  124          | . OP_DIVEQ
  125          | . OP_MODEQ

    TK_STRING   shift, and go to state 23
    TK_IDENT    shift, and go to state 1
    TK_INT      shift, and go to state 24
    TK_REAL     shift, and go to state 25
    KW_HASH     shift, and go to state 2
    KW_FALSE    shift, and go to state 27
    KW_TRUE     shift, and go to state 32
    OP_PLUS     shift, and go to state 33
    OP_MINUS    shift, and go to state 34
    OP_MUL      shift, and go to state 35
    OP_DIV      shift, and go to state 36
    OP_MOD      shift, and go to state 37
    OP_POWER    shift, and go to state 38
    OP_EQ       shift, and go to state 39
    OP_INEQ     shift, and go to state 40
    OP_LESS     shift, and go to state 41
    OP_EQLESS   shift, and go to state 42
    OP_MORE     shift, and go to state 43
    OP_EQMORE   shift, and go to state 44
    OP_ASSIGN   shift, and go to state 45
    OP_PLUSEQ   shift, and go to state 46
    OP_MINUSEQ  shift, and go to state 47
    OP_MULEQ    shift, and go to state 48
    OP_DIVEQ    shift, and go to state 49
    OP_MODEQ    shift, and go to state 50
    OP_POINTER  shift, and go to state 51
    OP_PAR_L    shift, and go to state 52
    OP_SEMI     shift, and go to state 53
    OP_BRA_L    shift, and go to state 54

    OP_PLUS     [reduce using rule 59 (expr)]
    OP_MINUS    [reduce using rule 59 (expr)]
    OP_MUL      [reduce using rule 59 (expr)]
    OP_DIV      [reduce using rule 59 (expr)]
    OP_MOD      [reduce using rule 59 (expr)]
    OP_EQ       [reduce using rule 59 (expr)]
    OP_INEQ     [reduce using rule 59 (expr)]
    OP_LESS     [reduce using rule 59 (expr)]
    OP_EQLESS   [reduce using rule 59 (expr)]
    OP_MORE     [reduce using rule 59 (expr)]
    OP_EQMORE   [reduce using rule 59 (expr)]
    OP_ASSIGN   [reduce using rule 59 (expr)]
    OP_PLUSEQ   [reduce using rule 59 (expr)]
    OP_MINUSEQ  [reduce using rule 59 (expr)]
    OP_MULEQ    [reduce using rule 59 (expr)]
    OP_DIVEQ    [reduce using rule 59 (expr)]
    OP_MODEQ    [reduce using rule 59 (expr)]
    $default    reduce using rule 59 (expr)

    variable_types  go to state 82
    expr            go to state 263
    operators       go to state 63


State 224

   49 while_loop: KW_WHILE OP_PAR_L expr OP_PAR_R . OP_MEAN main_program
   50           | KW_WHILE OP_PAR_L expr OP_PAR_R . OP_MEAN comp_function_code

    OP_MEAN  shift, and go to state 264


State 225

   69 expr: variable_types OP_BRA_L legal_array_index . OP_BRA_R

    OP_BRA_R  shift, and go to state 265


State 226

   16 func_declaration: KW_DEF . TK_IDENT OP_PAR_L func_parameters OP_PAR_R OP_MINUS OP_MORE types OP_MEAN
   17                 | KW_DEF . TK_IDENT OP_PAR_L func_parameters OP_PAR_R OP_MINUS OP_MORE KW_VOID OP_MEAN
   18                 | KW_DEF . TK_IDENT OP_PAR_L func_parameters OP_PAR_R OP_MEAN
   19                 | KW_DEF . TK_IDENT OP_PAR_L OP_PAR_R OP_MINUS OP_MORE types OP_MEAN
   20                 | KW_DEF . TK_IDENT OP_PAR_L OP_PAR_R OP_MEAN

    TK_IDENT  shift, and go to state 17


State 227

    5 final_program: main main_program KW_ENDDEF OP_SEMI program .  [$end]
    9 program: program . global_declarations
   10 global_declarations: . var_declarations
   11                    | . func_declaration function_code KW_RETURN OP_SEMI KW_ENDDEF OP_SEMI
   12                    | . func_declaration function_code KW_RETURN expr OP_SEMI KW_ENDDEF OP_SEMI
   13                    | . func_declaration KW_RETURN expr OP_SEMI KW_ENDDEF OP_SEMI
   14                    | . func_declaration function_code KW_ENDDEF OP_SEMI
   15                    | . KW_COMP TK_IDENT OP_MEAN comp_code KW_ENDCOMP OP_SEMI
   16 func_declaration: . KW_DEF TK_IDENT OP_PAR_L func_parameters OP_PAR_R OP_MINUS OP_MORE types OP_MEAN
   17                 | . KW_DEF TK_IDENT OP_PAR_L func_parameters OP_PAR_R OP_MINUS OP_MORE KW_VOID OP_MEAN
   18                 | . KW_DEF TK_IDENT OP_PAR_L func_parameters OP_PAR_R OP_MEAN
   19                 | . KW_DEF TK_IDENT OP_PAR_L OP_PAR_R OP_MINUS OP_MORE types OP_MEAN
   20                 | . KW_DEF TK_IDENT OP_PAR_L OP_PAR_R OP_MEAN
   38 var_declarations: . variable_types OP_ASSIGN expr OP_SEMI
   39                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN expr OP_SEMI
   40                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   41                 | . variable_types OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   42                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_MEAN types OP_SEMI
   43                 | . comp_types_of_declarations OP_MEAN types OP_SEMI
   44                 | . KW_CONST comp_types_of_declarations OP_ASSIGN data_types OP_MEAN types OP_SEMI
   45                 | . KW_CONST comp_types_of_declarations OP_ASSIGN operators data_types OP_MEAN types OP_SEMI
   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   56 comp_types_of_declarations: . variable_types
   57                           | . comp_types_of_declarations OP_COMA variable_types
   58                           | . comp_types_of_declarations OP_COMA variable_types OP_BRA_L legal_array_index OP_BRA_R

    TK_IDENT  shift, and go to state 1
    KW_HASH   shift, and go to state 2
    KW_DEF    shift, and go to state 226
    KW_CONST  shift, and go to state 4
    KW_COMP   shift, and go to state 5

    $default  reduce using rule 5 (final_program)

    global_declarations         go to state 65
    func_declaration            go to state 12
    var_declarations            go to state 13
    variable_types              go to state 14
    comp_types_of_declarations  go to state 15


State 228

   30 main_program: main_program . local_declarations
   31 local_declarations: . var_declarations
   32                   | . expr OP_SEMI
   33                   | . conditions KW_ENDIF OP_SEMI
   34                   | . while_loop KW_ENDWHILE OP_SEMI
   35                   | . for_loop KW_ENDFOR OP_SEMI
   36                   | . KW_BREAK OP_SEMI
   37                   | . KW_CONTINUE OP_SEMI
   38 var_declarations: . variable_types OP_ASSIGN expr OP_SEMI
   39                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN expr OP_SEMI
   40                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   41                 | . variable_types OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   42                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_MEAN types OP_SEMI
   43                 | . comp_types_of_declarations OP_MEAN types OP_SEMI
   44                 | . KW_CONST comp_types_of_declarations OP_ASSIGN data_types OP_MEAN types OP_SEMI
   45                 | . KW_CONST comp_types_of_declarations OP_ASSIGN operators data_types OP_MEAN types OP_SEMI
   46 conditions: . KW_IF OP_PAR_L expr OP_PAR_R OP_MEAN main_program
   47           | . KW_IF OP_PAR_L expr OP_PAR_R OP_MEAN comp_function_code
   48           | . conditions KW_ELSE OP_MEAN main_program
   48           | conditions KW_ELSE OP_MEAN main_program .  [KW_ELSE, KW_ENDIF]
   49 while_loop: . KW_WHILE OP_PAR_L expr OP_PAR_R OP_MEAN main_program
   50           | . KW_WHILE OP_PAR_L expr OP_PAR_R OP_MEAN comp_function_code
   51 for_loop: . KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_BRA_R OP_MEAN main_program
   52         | . KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_BRA_R OP_MEAN comp_function_code
   53         | . KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_MEAN expr OP_BRA_R OP_MEAN main_program
   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   56 comp_types_of_declarations: . variable_types
   57                           | . comp_types_of_declarations OP_COMA variable_types
   58                           | . comp_types_of_declarations OP_COMA variable_types OP_BRA_L legal_array_index OP_BRA_R
   59 expr: . %empty  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_SEMI, OP_COMA, OP_DOT]
   60     | . TK_STRING
   61     | . TK_INT
   62     | . TK_REAL
   63     | . KW_TRUE
   64     | . KW_FALSE
   65     | . variable_types OP_PAR_L OP_PAR_R
   66     | . variable_types OP_PAR_L expr OP_PAR_R
   67     | . operators expr
   68     | . variable_types
   69     | . variable_types OP_BRA_L legal_array_index OP_BRA_R
   70     | . variable_types OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | . variable_types OP_BRA_L variable_types OP_BRA_R
   72     | . OP_POINTER expr
   73     | . expr OP_COMA expr
   74     | . expr OP_DOT expr
   75     | . expr OP_PLUS expr
   76     | . expr OP_MINUS expr
   77     | . expr OP_MUL expr
   78     | . expr OP_DIV expr
   79     | . expr OP_MOD expr
   80     | . expr OP_EQ expr
   81     | . expr OP_INEQ expr
   82     | . expr OP_LESS expr
   83     | . expr OP_EQLESS expr
   84     | . expr OP_MORE expr
   85     | . expr OP_EQMORE expr
   86     | . expr OP_ASSIGN expr
   87     | . expr KW_AND expr
   88     | . expr KW_OR expr
   89     | . expr KW_NOT expr
   90     | . expr OP_PLUSEQ expr
   91     | . expr OP_MINUSEQ expr
   92     | . expr OP_MULEQ expr
   93     | . expr OP_DIVEQ expr
   94     | . expr OP_MODEQ expr
   95     | . OP_PAR_L expr OP_PAR_R
   96     | . OP_BRA_L expr OP_BRA_L
   97     | . OP_SEMI
  108 operators: . OP_PLUS
  109          | . OP_MINUS
  110          | . OP_MUL
  111          | . OP_DIV
  112          | . OP_MOD
  113          | . OP_POWER
  114          | . OP_EQ
  115          | . OP_INEQ
  116          | . OP_LESS
  117          | . OP_EQLESS
  118          | . OP_MORE
  119          | . OP_EQMORE
  120          | . OP_ASSIGN
  121          | . OP_PLUSEQ
  122          | . OP_MINUSEQ
  123          | . OP_MULEQ
  124          | . OP_DIVEQ
  125          | . OP_MODEQ

    TK_STRING    shift, and go to state 23
    TK_IDENT     shift, and go to state 1
    TK_INT       shift, and go to state 24
    TK_REAL      shift, and go to state 25
    KW_HASH      shift, and go to state 2
    KW_IF        shift, and go to state 26
    KW_FALSE     shift, and go to state 27
    KW_FOR       shift, and go to state 28
    KW_BREAK     shift, and go to state 29
    KW_CONST     shift, and go to state 4
    KW_CONTINUE  shift, and go to state 30
    KW_WHILE     shift, and go to state 31
    KW_TRUE      shift, and go to state 32
    OP_PLUS      shift, and go to state 33
    OP_MINUS     shift, and go to state 34
    OP_MUL       shift, and go to state 35
    OP_DIV       shift, and go to state 36
    OP_MOD       shift, and go to state 37
    OP_POWER     shift, and go to state 38
    OP_EQ        shift, and go to state 39
    OP_INEQ      shift, and go to state 40
    OP_LESS      shift, and go to state 41
    OP_EQLESS    shift, and go to state 42
    OP_MORE      shift, and go to state 43
    OP_EQMORE    shift, and go to state 44
    OP_ASSIGN    shift, and go to state 45
    OP_PLUSEQ    shift, and go to state 46
    OP_MINUSEQ   shift, and go to state 47
    OP_MULEQ     shift, and go to state 48
    OP_DIVEQ     shift, and go to state 49
    OP_MODEQ     shift, and go to state 50
    OP_POINTER   shift, and go to state 51
    OP_PAR_L     shift, and go to state 52
    OP_SEMI      shift, and go to state 53
    OP_BRA_L     shift, and go to state 54

    KW_ELSE     reduce using rule 48 (conditions)
    KW_ENDIF    reduce using rule 48 (conditions)
    OP_PLUS     [reduce using rule 59 (expr)]
    OP_MINUS    [reduce using rule 59 (expr)]
    OP_MUL      [reduce using rule 59 (expr)]
    OP_DIV      [reduce using rule 59 (expr)]
    OP_MOD      [reduce using rule 59 (expr)]
    OP_EQ       [reduce using rule 59 (expr)]
    OP_INEQ     [reduce using rule 59 (expr)]
    OP_LESS     [reduce using rule 59 (expr)]
    OP_EQLESS   [reduce using rule 59 (expr)]
    OP_MORE     [reduce using rule 59 (expr)]
    OP_EQMORE   [reduce using rule 59 (expr)]
    OP_ASSIGN   [reduce using rule 59 (expr)]
    OP_PLUSEQ   [reduce using rule 59 (expr)]
    OP_MINUSEQ  [reduce using rule 59 (expr)]
    OP_MULEQ    [reduce using rule 59 (expr)]
    OP_DIVEQ    [reduce using rule 59 (expr)]
    OP_MODEQ    [reduce using rule 59 (expr)]
    OP_SEMI     [reduce using rule 59 (expr)]
    $default    reduce using rule 59 (expr)

    local_declarations          go to state 87
    var_declarations            go to state 57
    conditions                  go to state 58
    while_loop                  go to state 59
    for_loop                    go to state 60
    variable_types              go to state 61
    comp_types_of_declarations  go to state 15
    expr                        go to state 62
    operators                   go to state 63


State 229

   66 expr: variable_types OP_PAR_L expr OP_PAR_R .

    $default  reduce using rule 66 (expr)


State 230

   55 variable_types: KW_HASH TK_IDENT .  [OP_BRA_R]
   99 legal_array_index: TK_IDENT .  [OP_BRA_R]

    OP_BRA_R  reduce using rule 55 (variable_types)
    OP_BRA_R  [reduce using rule 99 (legal_array_index)]
    $default  reduce using rule 55 (variable_types)


State 231

   70 expr: variable_types OP_BRA_L KW_HASH legal_array_index . OP_BRA_R

    OP_BRA_R  shift, and go to state 266


State 232

   71 expr: variable_types OP_BRA_L variable_types OP_BRA_R .

    $default  reduce using rule 71 (expr)


State 233

   39 var_declarations: variable_types OP_BRA_L legal_array_index OP_BRA_R . OP_ASSIGN expr OP_SEMI
   40                 | variable_types OP_BRA_L legal_array_index OP_BRA_R . OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   42                 | variable_types OP_BRA_L legal_array_index OP_BRA_R . OP_MEAN types OP_SEMI
   69 expr: variable_types OP_BRA_L legal_array_index OP_BRA_R .  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_SEMI, OP_COMA, OP_DOT]

    OP_ASSIGN  shift, and go to state 239
    OP_MEAN    shift, and go to state 240

    OP_ASSIGN  [reduce using rule 69 (expr)]
    $default   reduce using rule 69 (expr)


State 234

    3 final_program: program main main_program KW_ENDDEF OP_SEMI . program
    4              | program main main_program KW_ENDDEF OP_SEMI .  [$end]
    8 program: . global_declarations
    9        | . program global_declarations
   10 global_declarations: . var_declarations
   11                    | . func_declaration function_code KW_RETURN OP_SEMI KW_ENDDEF OP_SEMI
   12                    | . func_declaration function_code KW_RETURN expr OP_SEMI KW_ENDDEF OP_SEMI
   13                    | . func_declaration KW_RETURN expr OP_SEMI KW_ENDDEF OP_SEMI
   14                    | . func_declaration function_code KW_ENDDEF OP_SEMI
   15                    | . KW_COMP TK_IDENT OP_MEAN comp_code KW_ENDCOMP OP_SEMI
   16 func_declaration: . KW_DEF TK_IDENT OP_PAR_L func_parameters OP_PAR_R OP_MINUS OP_MORE types OP_MEAN
   17                 | . KW_DEF TK_IDENT OP_PAR_L func_parameters OP_PAR_R OP_MINUS OP_MORE KW_VOID OP_MEAN
   18                 | . KW_DEF TK_IDENT OP_PAR_L func_parameters OP_PAR_R OP_MEAN
   19                 | . KW_DEF TK_IDENT OP_PAR_L OP_PAR_R OP_MINUS OP_MORE types OP_MEAN
   20                 | . KW_DEF TK_IDENT OP_PAR_L OP_PAR_R OP_MEAN
   38 var_declarations: . variable_types OP_ASSIGN expr OP_SEMI
   39                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN expr OP_SEMI
   40                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   41                 | . variable_types OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   42                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_MEAN types OP_SEMI
   43                 | . comp_types_of_declarations OP_MEAN types OP_SEMI
   44                 | . KW_CONST comp_types_of_declarations OP_ASSIGN data_types OP_MEAN types OP_SEMI
   45                 | . KW_CONST comp_types_of_declarations OP_ASSIGN operators data_types OP_MEAN types OP_SEMI
   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   56 comp_types_of_declarations: . variable_types
   57                           | . comp_types_of_declarations OP_COMA variable_types
   58                           | . comp_types_of_declarations OP_COMA variable_types OP_BRA_L legal_array_index OP_BRA_R

    TK_IDENT  shift, and go to state 1
    KW_HASH   shift, and go to state 2
    KW_DEF    shift, and go to state 226
    KW_CONST  shift, and go to state 4
    KW_COMP   shift, and go to state 5

    $default  reduce using rule 4 (final_program)

    program                     go to state 267
    global_declarations         go to state 11
    func_declaration            go to state 12
    var_declarations            go to state 13
    variable_types              go to state 14
    comp_types_of_declarations  go to state 15


State 235

   13 global_declarations: func_declaration KW_RETURN expr OP_SEMI KW_ENDDEF . OP_SEMI

    OP_SEMI  shift, and go to state 268


State 236

   11 global_declarations: func_declaration function_code KW_RETURN OP_SEMI KW_ENDDEF . OP_SEMI

    OP_SEMI  shift, and go to state 269


State 237

   12 global_declarations: func_declaration function_code KW_RETURN expr OP_SEMI . KW_ENDDEF OP_SEMI

    KW_ENDDEF  shift, and go to state 270


State 238

   41 var_declarations: variable_types OP_ASSIGN variable_types OP_BRA_L legal_array_index . OP_BRA_R OP_SEMI
   69 expr: variable_types OP_BRA_L legal_array_index . OP_BRA_R

    OP_BRA_R  shift, and go to state 271


State 239

   39 var_declarations: variable_types OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN . expr OP_SEMI
   40                 | variable_types OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   59 expr: . %empty  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_SEMI, OP_COMA, OP_DOT]
   60     | . TK_STRING
   61     | . TK_INT
   62     | . TK_REAL
   63     | . KW_TRUE
   64     | . KW_FALSE
   65     | . variable_types OP_PAR_L OP_PAR_R
   66     | . variable_types OP_PAR_L expr OP_PAR_R
   67     | . operators expr
   68     | . variable_types
   69     | . variable_types OP_BRA_L legal_array_index OP_BRA_R
   70     | . variable_types OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | . variable_types OP_BRA_L variable_types OP_BRA_R
   72     | . OP_POINTER expr
   73     | . expr OP_COMA expr
   74     | . expr OP_DOT expr
   75     | . expr OP_PLUS expr
   76     | . expr OP_MINUS expr
   77     | . expr OP_MUL expr
   78     | . expr OP_DIV expr
   79     | . expr OP_MOD expr
   80     | . expr OP_EQ expr
   81     | . expr OP_INEQ expr
   82     | . expr OP_LESS expr
   83     | . expr OP_EQLESS expr
   84     | . expr OP_MORE expr
   85     | . expr OP_EQMORE expr
   86     | . expr OP_ASSIGN expr
   87     | . expr KW_AND expr
   88     | . expr KW_OR expr
   89     | . expr KW_NOT expr
   90     | . expr OP_PLUSEQ expr
   91     | . expr OP_MINUSEQ expr
   92     | . expr OP_MULEQ expr
   93     | . expr OP_DIVEQ expr
   94     | . expr OP_MODEQ expr
   95     | . OP_PAR_L expr OP_PAR_R
   96     | . OP_BRA_L expr OP_BRA_L
   97     | . OP_SEMI
  108 operators: . OP_PLUS
  109          | . OP_MINUS
  110          | . OP_MUL
  111          | . OP_DIV
  112          | . OP_MOD
  113          | . OP_POWER
  114          | . OP_EQ
  115          | . OP_INEQ
  116          | . OP_LESS
  117          | . OP_EQLESS
  118          | . OP_MORE
  119          | . OP_EQMORE
  120          | . OP_ASSIGN
  121          | . OP_PLUSEQ
  122          | . OP_MINUSEQ
  123          | . OP_MULEQ
  124          | . OP_DIVEQ
  125          | . OP_MODEQ

    TK_STRING   shift, and go to state 23
    TK_IDENT    shift, and go to state 1
    TK_INT      shift, and go to state 24
    TK_REAL     shift, and go to state 25
    KW_HASH     shift, and go to state 2
    KW_FALSE    shift, and go to state 27
    KW_TRUE     shift, and go to state 32
    OP_PLUS     shift, and go to state 33
    OP_MINUS    shift, and go to state 34
    OP_MUL      shift, and go to state 35
    OP_DIV      shift, and go to state 36
    OP_MOD      shift, and go to state 37
    OP_POWER    shift, and go to state 38
    OP_EQ       shift, and go to state 39
    OP_INEQ     shift, and go to state 40
    OP_LESS     shift, and go to state 41
    OP_EQLESS   shift, and go to state 42
    OP_MORE     shift, and go to state 43
    OP_EQMORE   shift, and go to state 44
    OP_ASSIGN   shift, and go to state 45
    OP_PLUSEQ   shift, and go to state 46
    OP_MINUSEQ  shift, and go to state 47
    OP_MULEQ    shift, and go to state 48
    OP_DIVEQ    shift, and go to state 49
    OP_MODEQ    shift, and go to state 50
    OP_POINTER  shift, and go to state 51
    OP_PAR_L    shift, and go to state 52
    OP_SEMI     shift, and go to state 53
    OP_BRA_L    shift, and go to state 54

    OP_PLUS     [reduce using rule 59 (expr)]
    OP_MINUS    [reduce using rule 59 (expr)]
    OP_MUL      [reduce using rule 59 (expr)]
    OP_DIV      [reduce using rule 59 (expr)]
    OP_MOD      [reduce using rule 59 (expr)]
    OP_EQ       [reduce using rule 59 (expr)]
    OP_INEQ     [reduce using rule 59 (expr)]
    OP_LESS     [reduce using rule 59 (expr)]
    OP_EQLESS   [reduce using rule 59 (expr)]
    OP_MORE     [reduce using rule 59 (expr)]
    OP_EQMORE   [reduce using rule 59 (expr)]
    OP_ASSIGN   [reduce using rule 59 (expr)]
    OP_PLUSEQ   [reduce using rule 59 (expr)]
    OP_MINUSEQ  [reduce using rule 59 (expr)]
    OP_MULEQ    [reduce using rule 59 (expr)]
    OP_DIVEQ    [reduce using rule 59 (expr)]
    OP_MODEQ    [reduce using rule 59 (expr)]
    OP_SEMI     [reduce using rule 59 (expr)]
    $default    reduce using rule 59 (expr)

    variable_types  go to state 272
    expr            go to state 273
    operators       go to state 63


State 240

   42 var_declarations: variable_types OP_BRA_L legal_array_index OP_BRA_R OP_MEAN . types OP_SEMI
  103 types: . KW_STR
  104      | . KW_INTEGER
  105      | . KW_SCALAR
  106      | . KW_BOOLEAN
  107      | . TK_IDENT

    TK_IDENT    shift, and go to state 129
    KW_INTEGER  shift, and go to state 130
    KW_SCALAR   shift, and go to state 131
    KW_STR      shift, and go to state 132
    KW_BOOLEAN  shift, and go to state 133

    types  go to state 274


State 241

   58 comp_types_of_declarations: comp_types_of_declarations OP_COMA variable_types OP_BRA_L legal_array_index . OP_BRA_R

    OP_BRA_R  shift, and go to state 275


State 242

   24 func_parameters: TK_IDENT OP_BRA_L OP_BRA_R . OP_MEAN types

    OP_MEAN  shift, and go to state 276


State 243

   22 func_parameters: TK_IDENT OP_MEAN types .

    $default  reduce using rule 22 (func_parameters)


State 244

   19 func_declaration: KW_DEF TK_IDENT OP_PAR_L OP_PAR_R OP_MINUS OP_MORE . types OP_MEAN
  103 types: . KW_STR
  104      | . KW_INTEGER
  105      | . KW_SCALAR
  106      | . KW_BOOLEAN
  107      | . TK_IDENT

    TK_IDENT    shift, and go to state 129
    KW_INTEGER  shift, and go to state 130
    KW_SCALAR   shift, and go to state 131
    KW_STR      shift, and go to state 132
    KW_BOOLEAN  shift, and go to state 133

    types  go to state 277


State 245

   16 func_declaration: KW_DEF TK_IDENT OP_PAR_L func_parameters OP_PAR_R OP_MINUS . OP_MORE types OP_MEAN
   17                 | KW_DEF TK_IDENT OP_PAR_L func_parameters OP_PAR_R OP_MINUS . OP_MORE KW_VOID OP_MEAN

    OP_MORE  shift, and go to state 278


State 246

   18 func_declaration: KW_DEF TK_IDENT OP_PAR_L func_parameters OP_PAR_R OP_MEAN .

    $default  reduce using rule 18 (func_declaration)


State 247

   23 func_parameters: func_parameters OP_COMA TK_IDENT . OP_MEAN types
   25                | func_parameters OP_COMA TK_IDENT . OP_BRA_L OP_BRA_R OP_MEAN types

    OP_BRA_L  shift, and go to state 279
    OP_MEAN   shift, and go to state 280


State 248

   44 var_declarations: KW_CONST comp_types_of_declarations OP_ASSIGN data_types OP_MEAN types . OP_SEMI

    OP_SEMI  shift, and go to state 281


State 249

   45 var_declarations: KW_CONST comp_types_of_declarations OP_ASSIGN operators data_types OP_MEAN . types OP_SEMI
  103 types: . KW_STR
  104      | . KW_INTEGER
  105      | . KW_SCALAR
  106      | . KW_BOOLEAN
  107      | . TK_IDENT

    TK_IDENT    shift, and go to state 129
    KW_INTEGER  shift, and go to state 130
    KW_SCALAR   shift, and go to state 131
    KW_STR      shift, and go to state 132
    KW_BOOLEAN  shift, and go to state 133

    types  go to state 282


State 250

   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   59 expr: . %empty  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_SEMI, OP_COMA, OP_DOT]
   60     | . TK_STRING
   61     | . TK_INT
   62     | . TK_REAL
   63     | . KW_TRUE
   64     | . KW_FALSE
   65     | . variable_types OP_PAR_L OP_PAR_R
   66     | . variable_types OP_PAR_L expr OP_PAR_R
   67     | . operators expr
   68     | . variable_types
   69     | . variable_types OP_BRA_L legal_array_index OP_BRA_R
   70     | . variable_types OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | . variable_types OP_BRA_L variable_types OP_BRA_R
   72     | . OP_POINTER expr
   73     | . expr OP_COMA expr
   74     | . expr OP_DOT expr
   75     | . expr OP_PLUS expr
   76     | . expr OP_MINUS expr
   77     | . expr OP_MUL expr
   78     | . expr OP_DIV expr
   79     | . expr OP_MOD expr
   80     | . expr OP_EQ expr
   81     | . expr OP_INEQ expr
   82     | . expr OP_LESS expr
   83     | . expr OP_EQLESS expr
   84     | . expr OP_MORE expr
   85     | . expr OP_EQMORE expr
   86     | . expr OP_ASSIGN expr
   87     | . expr KW_AND expr
   88     | . expr KW_OR expr
   89     | . expr KW_NOT expr
   90     | . expr OP_PLUSEQ expr
   91     | . expr OP_MINUSEQ expr
   92     | . expr OP_MULEQ expr
   93     | . expr OP_DIVEQ expr
   94     | . expr OP_MODEQ expr
   95     | . OP_PAR_L expr OP_PAR_R
   96     | . OP_BRA_L expr OP_BRA_L
   97     | . OP_SEMI
  108 operators: . OP_PLUS
  109          | . OP_MINUS
  110          | . OP_MUL
  111          | . OP_DIV
  112          | . OP_MOD
  113          | . OP_POWER
  114          | . OP_EQ
  115          | . OP_INEQ
  116          | . OP_LESS
  117          | . OP_EQLESS
  118          | . OP_MORE
  119          | . OP_EQMORE
  120          | . OP_ASSIGN
  121          | . OP_PLUSEQ
  122          | . OP_MINUSEQ
  123          | . OP_MULEQ
  124          | . OP_DIVEQ
  125          | . OP_MODEQ
  135 comp_var_declarations: KW_HASH TK_IDENT OP_ASSIGN . expr OP_SEMI
  138                      | KW_HASH TK_IDENT OP_ASSIGN . TK_IDENT OP_BRA_L legal_array_index OP_BRA_R OP_SEMI

    TK_STRING   shift, and go to state 23
    TK_IDENT    shift, and go to state 283
    TK_INT      shift, and go to state 24
    TK_REAL     shift, and go to state 25
    KW_HASH     shift, and go to state 2
    KW_FALSE    shift, and go to state 27
    KW_TRUE     shift, and go to state 32
    OP_PLUS     shift, and go to state 33
    OP_MINUS    shift, and go to state 34
    OP_MUL      shift, and go to state 35
    OP_DIV      shift, and go to state 36
    OP_MOD      shift, and go to state 37
    OP_POWER    shift, and go to state 38
    OP_EQ       shift, and go to state 39
    OP_INEQ     shift, and go to state 40
    OP_LESS     shift, and go to state 41
    OP_EQLESS   shift, and go to state 42
    OP_MORE     shift, and go to state 43
    OP_EQMORE   shift, and go to state 44
    OP_ASSIGN   shift, and go to state 45
    OP_PLUSEQ   shift, and go to state 46
    OP_MINUSEQ  shift, and go to state 47
    OP_MULEQ    shift, and go to state 48
    OP_DIVEQ    shift, and go to state 49
    OP_MODEQ    shift, and go to state 50
    OP_POINTER  shift, and go to state 51
    OP_PAR_L    shift, and go to state 52
    OP_SEMI     shift, and go to state 53
    OP_BRA_L    shift, and go to state 54

    OP_PLUS     [reduce using rule 59 (expr)]
    OP_MINUS    [reduce using rule 59 (expr)]
    OP_MUL      [reduce using rule 59 (expr)]
    OP_DIV      [reduce using rule 59 (expr)]
    OP_MOD      [reduce using rule 59 (expr)]
    OP_EQ       [reduce using rule 59 (expr)]
    OP_INEQ     [reduce using rule 59 (expr)]
    OP_LESS     [reduce using rule 59 (expr)]
    OP_EQLESS   [reduce using rule 59 (expr)]
    OP_MORE     [reduce using rule 59 (expr)]
    OP_EQMORE   [reduce using rule 59 (expr)]
    OP_ASSIGN   [reduce using rule 59 (expr)]
    OP_PLUSEQ   [reduce using rule 59 (expr)]
    OP_MINUSEQ  [reduce using rule 59 (expr)]
    OP_MULEQ    [reduce using rule 59 (expr)]
    OP_DIVEQ    [reduce using rule 59 (expr)]
    OP_MODEQ    [reduce using rule 59 (expr)]
    OP_SEMI     [reduce using rule 59 (expr)]
    $default    reduce using rule 59 (expr)

    variable_types  go to state 82
    expr            go to state 284
    operators       go to state 63


State 251

   98 legal_array_index: . TK_INT
   99                  | . TK_IDENT
  136 comp_var_declarations: KW_HASH TK_IDENT OP_BRA_L . legal_array_index OP_BRA_R OP_ASSIGN expr OP_SEMI
  137                      | KW_HASH TK_IDENT OP_BRA_L . legal_array_index OP_BRA_R OP_ASSIGN KW_HASH TK_IDENT OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
  139                      | KW_HASH TK_IDENT OP_BRA_L . legal_array_index OP_BRA_R OP_MEAN types OP_SEMI

    TK_IDENT  shift, and go to state 125
    TK_INT    shift, and go to state 126

    legal_array_index  go to state 285


State 252

   21 func_parameters: . %empty  [OP_PAR_R, OP_COMA]
   22                | . TK_IDENT OP_MEAN types
   23                | . func_parameters OP_COMA TK_IDENT OP_MEAN types
   24                | . TK_IDENT OP_BRA_L OP_BRA_R OP_MEAN types
   25                | . func_parameters OP_COMA TK_IDENT OP_BRA_L OP_BRA_R OP_MEAN types
  149 comp_func_declaration: KW_DEF TK_IDENT OP_PAR_L . func_parameters OP_PAR_R OP_MINUS OP_MORE types OP_MEAN
  150                      | KW_DEF TK_IDENT OP_PAR_L . func_parameters OP_PAR_R OP_MEAN
  151                      | KW_DEF TK_IDENT OP_PAR_L . OP_PAR_R OP_MINUS OP_MORE types OP_MEAN
  152                      | KW_DEF TK_IDENT OP_PAR_L . OP_PAR_R OP_MEAN

    TK_IDENT  shift, and go to state 135
    OP_PAR_R  shift, and go to state 286

    OP_PAR_R  [reduce using rule 21 (func_parameters)]
    $default  reduce using rule 21 (func_parameters)

    func_parameters  go to state 287


State 253

  143 comp_initialise_types_of_declarations: KW_HASH TK_IDENT .

    $default  reduce using rule 143 (comp_initialise_types_of_declarations)


State 254

  100 data_types: . TK_INT
  101           | . TK_STRING
  102           | . TK_REAL
  108 operators: . OP_PLUS
  109          | . OP_MINUS
  110          | . OP_MUL
  111          | . OP_DIV
  112          | . OP_MOD
  113          | . OP_POWER
  114          | . OP_EQ
  115          | . OP_INEQ
  116          | . OP_LESS
  117          | . OP_EQLESS
  118          | . OP_MORE
  119          | . OP_EQMORE
  120          | . OP_ASSIGN
  121          | . OP_PLUSEQ
  122          | . OP_MINUSEQ
  123          | . OP_MULEQ
  124          | . OP_DIVEQ
  125          | . OP_MODEQ
  141 comp_var_declarations: KW_CONST comp_initialise_types_of_declarations OP_ASSIGN . data_types OP_MEAN types OP_SEMI
  142                      | KW_CONST comp_initialise_types_of_declarations OP_ASSIGN . operators data_types OP_MEAN types OP_SEMI

    TK_STRING   shift, and go to state 139
    TK_INT      shift, and go to state 140
    TK_REAL     shift, and go to state 141
    OP_PLUS     shift, and go to state 33
    OP_MINUS    shift, and go to state 34
    OP_MUL      shift, and go to state 35
    OP_DIV      shift, and go to state 36
    OP_MOD      shift, and go to state 37
    OP_POWER    shift, and go to state 38
    OP_EQ       shift, and go to state 39
    OP_INEQ     shift, and go to state 40
    OP_LESS     shift, and go to state 41
    OP_EQLESS   shift, and go to state 42
    OP_MORE     shift, and go to state 43
    OP_EQMORE   shift, and go to state 44
    OP_ASSIGN   shift, and go to state 45
    OP_PLUSEQ   shift, and go to state 46
    OP_MINUSEQ  shift, and go to state 47
    OP_MULEQ    shift, and go to state 48
    OP_DIVEQ    shift, and go to state 49
    OP_MODEQ    shift, and go to state 50

    data_types  go to state 288
    operators   go to state 289


State 255

   15 global_declarations: KW_COMP TK_IDENT OP_MEAN comp_code KW_ENDCOMP OP_SEMI .

    $default  reduce using rule 15 (global_declarations)


State 256

  144 comp_initialise_types_of_declarations: comp_initialise_types_of_declarations OP_COMA KW_HASH . TK_IDENT
  145                                      | comp_initialise_types_of_declarations OP_COMA KW_HASH . TK_IDENT OP_BRA_L legal_array_index OP_BRA_R

    TK_IDENT  shift, and go to state 290


State 257

  140 comp_var_declarations: comp_initialise_types_of_declarations OP_MEAN types . OP_SEMI

    OP_SEMI  shift, and go to state 291


State 258

   73 expr: expr . OP_COMA expr
   74     | expr . OP_DOT expr
   75     | expr . OP_PLUS expr
   76     | expr . OP_MINUS expr
   77     | expr . OP_MUL expr
   78     | expr . OP_DIV expr
   79     | expr . OP_MOD expr
   80     | expr . OP_EQ expr
   81     | expr . OP_INEQ expr
   82     | expr . OP_LESS expr
   83     | expr . OP_EQLESS expr
   84     | expr . OP_MORE expr
   85     | expr . OP_EQMORE expr
   86     | expr . OP_ASSIGN expr
   87     | expr . KW_AND expr
   88     | expr . KW_OR expr
   89     | expr . KW_NOT expr
   90     | expr . OP_PLUSEQ expr
   91     | expr . OP_MINUSEQ expr
   92     | expr . OP_MULEQ expr
   93     | expr . OP_DIVEQ expr
   94     | expr . OP_MODEQ expr
  132 comp_local_declarations: comp_func_declaration KW_RETURN expr . OP_SEMI KW_ENDDEF OP_SEMI

    KW_NOT      shift, and go to state 94
    KW_AND      shift, and go to state 95
    KW_OR       shift, and go to state 96
    OP_PLUS     shift, and go to state 97
    OP_MINUS    shift, and go to state 98
    OP_MUL      shift, and go to state 99
    OP_DIV      shift, and go to state 100
    OP_MOD      shift, and go to state 101
    OP_EQ       shift, and go to state 102
    OP_INEQ     shift, and go to state 103
    OP_LESS     shift, and go to state 104
    OP_EQLESS   shift, and go to state 105
    OP_MORE     shift, and go to state 106
    OP_EQMORE   shift, and go to state 107
    OP_ASSIGN   shift, and go to state 108
    OP_PLUSEQ   shift, and go to state 109
    OP_MINUSEQ  shift, and go to state 110
    OP_MULEQ    shift, and go to state 111
    OP_DIVEQ    shift, and go to state 112
    OP_MODEQ    shift, and go to state 113
    OP_SEMI     shift, and go to state 292
    OP_COMA     shift, and go to state 115
    OP_DOT      shift, and go to state 116


State 259

  133 comp_local_declarations: comp_func_declaration comp_function_code KW_ENDDEF . OP_SEMI

    OP_SEMI  shift, and go to state 293


State 260

   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   59 expr: . %empty  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_SEMI, OP_COMA, OP_DOT]
   60     | . TK_STRING
   61     | . TK_INT
   62     | . TK_REAL
   63     | . KW_TRUE
   64     | . KW_FALSE
   65     | . variable_types OP_PAR_L OP_PAR_R
   66     | . variable_types OP_PAR_L expr OP_PAR_R
   67     | . operators expr
   68     | . variable_types
   69     | . variable_types OP_BRA_L legal_array_index OP_BRA_R
   70     | . variable_types OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | . variable_types OP_BRA_L variable_types OP_BRA_R
   72     | . OP_POINTER expr
   73     | . expr OP_COMA expr
   74     | . expr OP_DOT expr
   75     | . expr OP_PLUS expr
   76     | . expr OP_MINUS expr
   77     | . expr OP_MUL expr
   78     | . expr OP_DIV expr
   79     | . expr OP_MOD expr
   80     | . expr OP_EQ expr
   81     | . expr OP_INEQ expr
   82     | . expr OP_LESS expr
   83     | . expr OP_EQLESS expr
   84     | . expr OP_MORE expr
   85     | . expr OP_EQMORE expr
   86     | . expr OP_ASSIGN expr
   87     | . expr KW_AND expr
   88     | . expr KW_OR expr
   89     | . expr KW_NOT expr
   90     | . expr OP_PLUSEQ expr
   91     | . expr OP_MINUSEQ expr
   92     | . expr OP_MULEQ expr
   93     | . expr OP_DIVEQ expr
   94     | . expr OP_MODEQ expr
   95     | . OP_PAR_L expr OP_PAR_R
   96     | . OP_BRA_L expr OP_BRA_L
   97     | . OP_SEMI
  108 operators: . OP_PLUS
  109          | . OP_MINUS
  110          | . OP_MUL
  111          | . OP_DIV
  112          | . OP_MOD
  113          | . OP_POWER
  114          | . OP_EQ
  115          | . OP_INEQ
  116          | . OP_LESS
  117          | . OP_EQLESS
  118          | . OP_MORE
  119          | . OP_EQMORE
  120          | . OP_ASSIGN
  121          | . OP_PLUSEQ
  122          | . OP_MINUSEQ
  123          | . OP_MULEQ
  124          | . OP_DIVEQ
  125          | . OP_MODEQ
  130 comp_local_declarations: comp_func_declaration comp_function_code KW_RETURN . OP_SEMI KW_ENDDEF OP_SEMI
  131                        | comp_func_declaration comp_function_code KW_RETURN . expr OP_SEMI KW_ENDDEF OP_SEMI

    TK_STRING   shift, and go to state 23
    TK_IDENT    shift, and go to state 1
    TK_INT      shift, and go to state 24
    TK_REAL     shift, and go to state 25
    KW_HASH     shift, and go to state 2
    KW_FALSE    shift, and go to state 27
    KW_TRUE     shift, and go to state 32
    OP_PLUS     shift, and go to state 33
    OP_MINUS    shift, and go to state 34
    OP_MUL      shift, and go to state 35
    OP_DIV      shift, and go to state 36
    OP_MOD      shift, and go to state 37
    OP_POWER    shift, and go to state 38
    OP_EQ       shift, and go to state 39
    OP_INEQ     shift, and go to state 40
    OP_LESS     shift, and go to state 41
    OP_EQLESS   shift, and go to state 42
    OP_MORE     shift, and go to state 43
    OP_EQMORE   shift, and go to state 44
    OP_ASSIGN   shift, and go to state 45
    OP_PLUSEQ   shift, and go to state 46
    OP_MINUSEQ  shift, and go to state 47
    OP_MULEQ    shift, and go to state 48
    OP_DIVEQ    shift, and go to state 49
    OP_MODEQ    shift, and go to state 50
    OP_POINTER  shift, and go to state 51
    OP_PAR_L    shift, and go to state 52
    OP_SEMI     shift, and go to state 294
    OP_BRA_L    shift, and go to state 54

    OP_PLUS     [reduce using rule 59 (expr)]
    OP_MINUS    [reduce using rule 59 (expr)]
    OP_MUL      [reduce using rule 59 (expr)]
    OP_DIV      [reduce using rule 59 (expr)]
    OP_MOD      [reduce using rule 59 (expr)]
    OP_EQ       [reduce using rule 59 (expr)]
    OP_INEQ     [reduce using rule 59 (expr)]
    OP_LESS     [reduce using rule 59 (expr)]
    OP_EQLESS   [reduce using rule 59 (expr)]
    OP_MORE     [reduce using rule 59 (expr)]
    OP_EQMORE   [reduce using rule 59 (expr)]
    OP_ASSIGN   [reduce using rule 59 (expr)]
    OP_PLUSEQ   [reduce using rule 59 (expr)]
    OP_MINUSEQ  [reduce using rule 59 (expr)]
    OP_MULEQ    [reduce using rule 59 (expr)]
    OP_DIVEQ    [reduce using rule 59 (expr)]
    OP_MODEQ    [reduce using rule 59 (expr)]
    OP_SEMI     [reduce using rule 59 (expr)]
    $default    reduce using rule 59 (expr)

    variable_types  go to state 82
    expr            go to state 295
    operators       go to state 63


State 261

  148 comp_function_code: comp_function_code local_declarations .

    $default  reduce using rule 148 (comp_function_code)


State 262

   29 main_program: . local_declarations
   30             | . main_program local_declarations
   31 local_declarations: . var_declarations
   32                   | . expr OP_SEMI
   33                   | . conditions KW_ENDIF OP_SEMI
   34                   | . while_loop KW_ENDWHILE OP_SEMI
   35                   | . for_loop KW_ENDFOR OP_SEMI
   36                   | . KW_BREAK OP_SEMI
   37                   | . KW_CONTINUE OP_SEMI
   38 var_declarations: . variable_types OP_ASSIGN expr OP_SEMI
   39                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN expr OP_SEMI
   40                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   41                 | . variable_types OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   42                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_MEAN types OP_SEMI
   43                 | . comp_types_of_declarations OP_MEAN types OP_SEMI
   44                 | . KW_CONST comp_types_of_declarations OP_ASSIGN data_types OP_MEAN types OP_SEMI
   45                 | . KW_CONST comp_types_of_declarations OP_ASSIGN operators data_types OP_MEAN types OP_SEMI
   46 conditions: . KW_IF OP_PAR_L expr OP_PAR_R OP_MEAN main_program
   46           | KW_IF OP_PAR_L expr OP_PAR_R OP_MEAN . main_program
   47           | . KW_IF OP_PAR_L expr OP_PAR_R OP_MEAN comp_function_code
   47           | KW_IF OP_PAR_L expr OP_PAR_R OP_MEAN . comp_function_code
   48           | . conditions KW_ELSE OP_MEAN main_program
   49 while_loop: . KW_WHILE OP_PAR_L expr OP_PAR_R OP_MEAN main_program
   50           | . KW_WHILE OP_PAR_L expr OP_PAR_R OP_MEAN comp_function_code
   51 for_loop: . KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_BRA_R OP_MEAN main_program
   52         | . KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_BRA_R OP_MEAN comp_function_code
   53         | . KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_MEAN expr OP_BRA_R OP_MEAN main_program
   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   56 comp_types_of_declarations: . variable_types
   57                           | . comp_types_of_declarations OP_COMA variable_types
   58                           | . comp_types_of_declarations OP_COMA variable_types OP_BRA_L legal_array_index OP_BRA_R
   59 expr: . %empty  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_SEMI, OP_COMA, OP_DOT]
   60     | . TK_STRING
   61     | . TK_INT
   62     | . TK_REAL
   63     | . KW_TRUE
   64     | . KW_FALSE
   65     | . variable_types OP_PAR_L OP_PAR_R
   66     | . variable_types OP_PAR_L expr OP_PAR_R
   67     | . operators expr
   68     | . variable_types
   69     | . variable_types OP_BRA_L legal_array_index OP_BRA_R
   70     | . variable_types OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | . variable_types OP_BRA_L variable_types OP_BRA_R
   72     | . OP_POINTER expr
   73     | . expr OP_COMA expr
   74     | . expr OP_DOT expr
   75     | . expr OP_PLUS expr
   76     | . expr OP_MINUS expr
   77     | . expr OP_MUL expr
   78     | . expr OP_DIV expr
   79     | . expr OP_MOD expr
   80     | . expr OP_EQ expr
   81     | . expr OP_INEQ expr
   82     | . expr OP_LESS expr
   83     | . expr OP_EQLESS expr
   84     | . expr OP_MORE expr
   85     | . expr OP_EQMORE expr
   86     | . expr OP_ASSIGN expr
   87     | . expr KW_AND expr
   88     | . expr KW_OR expr
   89     | . expr KW_NOT expr
   90     | . expr OP_PLUSEQ expr
   91     | . expr OP_MINUSEQ expr
   92     | . expr OP_MULEQ expr
   93     | . expr OP_DIVEQ expr
   94     | . expr OP_MODEQ expr
   95     | . OP_PAR_L expr OP_PAR_R
   96     | . OP_BRA_L expr OP_BRA_L
   97     | . OP_SEMI
  108 operators: . OP_PLUS
  109          | . OP_MINUS
  110          | . OP_MUL
  111          | . OP_DIV
  112          | . OP_MOD
  113          | . OP_POWER
  114          | . OP_EQ
  115          | . OP_INEQ
  116          | . OP_LESS
  117          | . OP_EQLESS
  118          | . OP_MORE
  119          | . OP_EQMORE
  120          | . OP_ASSIGN
  121          | . OP_PLUSEQ
  122          | . OP_MINUSEQ
  123          | . OP_MULEQ
  124          | . OP_DIVEQ
  125          | . OP_MODEQ
  146 comp_function_code: . %empty  [TK_STRING, TK_IDENT, TK_INT, TK_REAL, KW_HASH, KW_IF, KW_ELSE, KW_FALSE, KW_FOR, KW_BREAK, KW_CONST, KW_CONTINUE, KW_NOT, KW_WHILE, KW_AND, KW_TRUE, KW_ENDIF, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_POWER, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_POINTER, OP_PAR_L, OP_SEMI, OP_COMA, OP_BRA_L, OP_DOT]
  147                   | . local_declarations
  148                   | . comp_function_code local_declarations

    TK_STRING    shift, and go to state 23
    TK_IDENT     shift, and go to state 1
    TK_INT       shift, and go to state 24
    TK_REAL      shift, and go to state 25
    KW_HASH      shift, and go to state 2
    KW_IF        shift, and go to state 26
    KW_FALSE     shift, and go to state 27
    KW_FOR       shift, and go to state 28
    KW_BREAK     shift, and go to state 29
    KW_CONST     shift, and go to state 4
    KW_CONTINUE  shift, and go to state 30
    KW_WHILE     shift, and go to state 31
    KW_TRUE      shift, and go to state 32
    OP_PLUS      shift, and go to state 33
    OP_MINUS     shift, and go to state 34
    OP_MUL       shift, and go to state 35
    OP_DIV       shift, and go to state 36
    OP_MOD       shift, and go to state 37
    OP_POWER     shift, and go to state 38
    OP_EQ        shift, and go to state 39
    OP_INEQ      shift, and go to state 40
    OP_LESS      shift, and go to state 41
    OP_EQLESS    shift, and go to state 42
    OP_MORE      shift, and go to state 43
    OP_EQMORE    shift, and go to state 44
    OP_ASSIGN    shift, and go to state 45
    OP_PLUSEQ    shift, and go to state 46
    OP_MINUSEQ   shift, and go to state 47
    OP_MULEQ     shift, and go to state 48
    OP_DIVEQ     shift, and go to state 49
    OP_MODEQ     shift, and go to state 50
    OP_POINTER   shift, and go to state 51
    OP_PAR_L     shift, and go to state 52
    OP_SEMI      shift, and go to state 53
    OP_BRA_L     shift, and go to state 54

    TK_STRING    [reduce using rule 146 (comp_function_code)]
    TK_IDENT     [reduce using rule 146 (comp_function_code)]
    TK_INT       [reduce using rule 146 (comp_function_code)]
    TK_REAL      [reduce using rule 146 (comp_function_code)]
    KW_HASH      [reduce using rule 146 (comp_function_code)]
    KW_IF        [reduce using rule 146 (comp_function_code)]
    KW_ELSE      reduce using rule 146 (comp_function_code)
    KW_FALSE     [reduce using rule 146 (comp_function_code)]
    KW_FOR       [reduce using rule 146 (comp_function_code)]
    KW_BREAK     [reduce using rule 146 (comp_function_code)]
    KW_CONST     [reduce using rule 146 (comp_function_code)]
    KW_CONTINUE  [reduce using rule 146 (comp_function_code)]
    KW_NOT       reduce using rule 59 (expr)
    KW_NOT       [reduce using rule 146 (comp_function_code)]
    KW_WHILE     [reduce using rule 146 (comp_function_code)]
    KW_AND       reduce using rule 59 (expr)
    KW_AND       [reduce using rule 146 (comp_function_code)]
    KW_TRUE      [reduce using rule 146 (comp_function_code)]
    KW_ENDIF     reduce using rule 146 (comp_function_code)
    KW_OR        reduce using rule 59 (expr)
    KW_OR        [reduce using rule 146 (comp_function_code)]
    OP_PLUS      [reduce using rule 59 (expr)]
    OP_PLUS      [reduce using rule 146 (comp_function_code)]
    OP_MINUS     [reduce using rule 59 (expr)]
    OP_MINUS     [reduce using rule 146 (comp_function_code)]
    OP_MUL       [reduce using rule 59 (expr)]
    OP_MUL       [reduce using rule 146 (comp_function_code)]
    OP_DIV       [reduce using rule 59 (expr)]
    OP_DIV       [reduce using rule 146 (comp_function_code)]
    OP_MOD       [reduce using rule 59 (expr)]
    OP_MOD       [reduce using rule 146 (comp_function_code)]
    OP_POWER     [reduce using rule 146 (comp_function_code)]
    OP_EQ        [reduce using rule 59 (expr)]
    OP_EQ        [reduce using rule 146 (comp_function_code)]
    OP_INEQ      [reduce using rule 59 (expr)]
    OP_INEQ      [reduce using rule 146 (comp_function_code)]
    OP_LESS      [reduce using rule 59 (expr)]
    OP_LESS      [reduce using rule 146 (comp_function_code)]
    OP_EQLESS    [reduce using rule 59 (expr)]
    OP_EQLESS    [reduce using rule 146 (comp_function_code)]
    OP_MORE      [reduce using rule 59 (expr)]
    OP_MORE      [reduce using rule 146 (comp_function_code)]
    OP_EQMORE    [reduce using rule 59 (expr)]
    OP_EQMORE    [reduce using rule 146 (comp_function_code)]
    OP_ASSIGN    [reduce using rule 59 (expr)]
    OP_ASSIGN    [reduce using rule 146 (comp_function_code)]
    OP_PLUSEQ    [reduce using rule 59 (expr)]
    OP_PLUSEQ    [reduce using rule 146 (comp_function_code)]
    OP_MINUSEQ   [reduce using rule 59 (expr)]
    OP_MINUSEQ   [reduce using rule 146 (comp_function_code)]
    OP_MULEQ     [reduce using rule 59 (expr)]
    OP_MULEQ     [reduce using rule 146 (comp_function_code)]
    OP_DIVEQ     [reduce using rule 59 (expr)]
    OP_DIVEQ     [reduce using rule 146 (comp_function_code)]
    OP_MODEQ     [reduce using rule 59 (expr)]
    OP_MODEQ     [reduce using rule 146 (comp_function_code)]
    OP_POINTER   [reduce using rule 146 (comp_function_code)]
    OP_PAR_L     [reduce using rule 146 (comp_function_code)]
    OP_SEMI      [reduce using rule 59 (expr)]
    OP_SEMI      [reduce using rule 146 (comp_function_code)]
    OP_COMA      reduce using rule 59 (expr)
    OP_COMA      [reduce using rule 146 (comp_function_code)]
    OP_BRA_L     [reduce using rule 146 (comp_function_code)]
    OP_DOT       reduce using rule 59 (expr)
    OP_DOT       [reduce using rule 146 (comp_function_code)]
    $default     reduce using rule 59 (expr)

    main_program                go to state 296
    local_declarations          go to state 297
    var_declarations            go to state 57
    conditions                  go to state 58
    while_loop                  go to state 59
    for_loop                    go to state 60
    variable_types              go to state 61
    comp_types_of_declarations  go to state 15
    expr                        go to state 62
    operators                   go to state 63
    comp_function_code          go to state 298


State 263

   51 for_loop: KW_FOR TK_IDENT KW_IN OP_BRA_L expr . OP_MEAN expr OP_BRA_R OP_MEAN main_program
   52         | KW_FOR TK_IDENT KW_IN OP_BRA_L expr . OP_MEAN expr OP_BRA_R OP_MEAN comp_function_code
   53         | KW_FOR TK_IDENT KW_IN OP_BRA_L expr . OP_MEAN expr OP_MEAN expr OP_BRA_R OP_MEAN main_program
   73 expr: expr . OP_COMA expr
   74     | expr . OP_DOT expr
   75     | expr . OP_PLUS expr
   76     | expr . OP_MINUS expr
   77     | expr . OP_MUL expr
   78     | expr . OP_DIV expr
   79     | expr . OP_MOD expr
   80     | expr . OP_EQ expr
   81     | expr . OP_INEQ expr
   82     | expr . OP_LESS expr
   83     | expr . OP_EQLESS expr
   84     | expr . OP_MORE expr
   85     | expr . OP_EQMORE expr
   86     | expr . OP_ASSIGN expr
   87     | expr . KW_AND expr
   88     | expr . KW_OR expr
   89     | expr . KW_NOT expr
   90     | expr . OP_PLUSEQ expr
   91     | expr . OP_MINUSEQ expr
   92     | expr . OP_MULEQ expr
   93     | expr . OP_DIVEQ expr
   94     | expr . OP_MODEQ expr

    KW_NOT      shift, and go to state 94
    KW_AND      shift, and go to state 95
    KW_OR       shift, and go to state 96
    OP_PLUS     shift, and go to state 97
    OP_MINUS    shift, and go to state 98
    OP_MUL      shift, and go to state 99
    OP_DIV      shift, and go to state 100
    OP_MOD      shift, and go to state 101
    OP_EQ       shift, and go to state 102
    OP_INEQ     shift, and go to state 103
    OP_LESS     shift, and go to state 104
    OP_EQLESS   shift, and go to state 105
    OP_MORE     shift, and go to state 106
    OP_EQMORE   shift, and go to state 107
    OP_ASSIGN   shift, and go to state 108
    OP_PLUSEQ   shift, and go to state 109
    OP_MINUSEQ  shift, and go to state 110
    OP_MULEQ    shift, and go to state 111
    OP_DIVEQ    shift, and go to state 112
    OP_MODEQ    shift, and go to state 113
    OP_COMA     shift, and go to state 115
    OP_DOT      shift, and go to state 116
    OP_MEAN     shift, and go to state 299


State 264

   29 main_program: . local_declarations
   30             | . main_program local_declarations
   31 local_declarations: . var_declarations
   32                   | . expr OP_SEMI
   33                   | . conditions KW_ENDIF OP_SEMI
   34                   | . while_loop KW_ENDWHILE OP_SEMI
   35                   | . for_loop KW_ENDFOR OP_SEMI
   36                   | . KW_BREAK OP_SEMI
   37                   | . KW_CONTINUE OP_SEMI
   38 var_declarations: . variable_types OP_ASSIGN expr OP_SEMI
   39                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN expr OP_SEMI
   40                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   41                 | . variable_types OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   42                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_MEAN types OP_SEMI
   43                 | . comp_types_of_declarations OP_MEAN types OP_SEMI
   44                 | . KW_CONST comp_types_of_declarations OP_ASSIGN data_types OP_MEAN types OP_SEMI
   45                 | . KW_CONST comp_types_of_declarations OP_ASSIGN operators data_types OP_MEAN types OP_SEMI
   46 conditions: . KW_IF OP_PAR_L expr OP_PAR_R OP_MEAN main_program
   47           | . KW_IF OP_PAR_L expr OP_PAR_R OP_MEAN comp_function_code
   48           | . conditions KW_ELSE OP_MEAN main_program
   49 while_loop: . KW_WHILE OP_PAR_L expr OP_PAR_R OP_MEAN main_program
   49           | KW_WHILE OP_PAR_L expr OP_PAR_R OP_MEAN . main_program
   50           | . KW_WHILE OP_PAR_L expr OP_PAR_R OP_MEAN comp_function_code
   50           | KW_WHILE OP_PAR_L expr OP_PAR_R OP_MEAN . comp_function_code
   51 for_loop: . KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_BRA_R OP_MEAN main_program
   52         | . KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_BRA_R OP_MEAN comp_function_code
   53         | . KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_MEAN expr OP_BRA_R OP_MEAN main_program
   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   56 comp_types_of_declarations: . variable_types
   57                           | . comp_types_of_declarations OP_COMA variable_types
   58                           | . comp_types_of_declarations OP_COMA variable_types OP_BRA_L legal_array_index OP_BRA_R
   59 expr: . %empty  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_SEMI, OP_COMA, OP_DOT]
   60     | . TK_STRING
   61     | . TK_INT
   62     | . TK_REAL
   63     | . KW_TRUE
   64     | . KW_FALSE
   65     | . variable_types OP_PAR_L OP_PAR_R
   66     | . variable_types OP_PAR_L expr OP_PAR_R
   67     | . operators expr
   68     | . variable_types
   69     | . variable_types OP_BRA_L legal_array_index OP_BRA_R
   70     | . variable_types OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | . variable_types OP_BRA_L variable_types OP_BRA_R
   72     | . OP_POINTER expr
   73     | . expr OP_COMA expr
   74     | . expr OP_DOT expr
   75     | . expr OP_PLUS expr
   76     | . expr OP_MINUS expr
   77     | . expr OP_MUL expr
   78     | . expr OP_DIV expr
   79     | . expr OP_MOD expr
   80     | . expr OP_EQ expr
   81     | . expr OP_INEQ expr
   82     | . expr OP_LESS expr
   83     | . expr OP_EQLESS expr
   84     | . expr OP_MORE expr
   85     | . expr OP_EQMORE expr
   86     | . expr OP_ASSIGN expr
   87     | . expr KW_AND expr
   88     | . expr KW_OR expr
   89     | . expr KW_NOT expr
   90     | . expr OP_PLUSEQ expr
   91     | . expr OP_MINUSEQ expr
   92     | . expr OP_MULEQ expr
   93     | . expr OP_DIVEQ expr
   94     | . expr OP_MODEQ expr
   95     | . OP_PAR_L expr OP_PAR_R
   96     | . OP_BRA_L expr OP_BRA_L
   97     | . OP_SEMI
  108 operators: . OP_PLUS
  109          | . OP_MINUS
  110          | . OP_MUL
  111          | . OP_DIV
  112          | . OP_MOD
  113          | . OP_POWER
  114          | . OP_EQ
  115          | . OP_INEQ
  116          | . OP_LESS
  117          | . OP_EQLESS
  118          | . OP_MORE
  119          | . OP_EQMORE
  120          | . OP_ASSIGN
  121          | . OP_PLUSEQ
  122          | . OP_MINUSEQ
  123          | . OP_MULEQ
  124          | . OP_DIVEQ
  125          | . OP_MODEQ
  146 comp_function_code: . %empty  [TK_STRING, TK_IDENT, TK_INT, TK_REAL, KW_HASH, KW_IF, KW_FALSE, KW_FOR, KW_BREAK, KW_CONST, KW_CONTINUE, KW_NOT, KW_WHILE, KW_AND, KW_TRUE, KW_ENDWHILE, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_POWER, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_POINTER, OP_PAR_L, OP_SEMI, OP_COMA, OP_BRA_L, OP_DOT]
  147                   | . local_declarations
  148                   | . comp_function_code local_declarations

    TK_STRING    shift, and go to state 23
    TK_IDENT     shift, and go to state 1
    TK_INT       shift, and go to state 24
    TK_REAL      shift, and go to state 25
    KW_HASH      shift, and go to state 2
    KW_IF        shift, and go to state 26
    KW_FALSE     shift, and go to state 27
    KW_FOR       shift, and go to state 28
    KW_BREAK     shift, and go to state 29
    KW_CONST     shift, and go to state 4
    KW_CONTINUE  shift, and go to state 30
    KW_WHILE     shift, and go to state 31
    KW_TRUE      shift, and go to state 32
    OP_PLUS      shift, and go to state 33
    OP_MINUS     shift, and go to state 34
    OP_MUL       shift, and go to state 35
    OP_DIV       shift, and go to state 36
    OP_MOD       shift, and go to state 37
    OP_POWER     shift, and go to state 38
    OP_EQ        shift, and go to state 39
    OP_INEQ      shift, and go to state 40
    OP_LESS      shift, and go to state 41
    OP_EQLESS    shift, and go to state 42
    OP_MORE      shift, and go to state 43
    OP_EQMORE    shift, and go to state 44
    OP_ASSIGN    shift, and go to state 45
    OP_PLUSEQ    shift, and go to state 46
    OP_MINUSEQ   shift, and go to state 47
    OP_MULEQ     shift, and go to state 48
    OP_DIVEQ     shift, and go to state 49
    OP_MODEQ     shift, and go to state 50
    OP_POINTER   shift, and go to state 51
    OP_PAR_L     shift, and go to state 52
    OP_SEMI      shift, and go to state 53
    OP_BRA_L     shift, and go to state 54

    TK_STRING    [reduce using rule 146 (comp_function_code)]
    TK_IDENT     [reduce using rule 146 (comp_function_code)]
    TK_INT       [reduce using rule 146 (comp_function_code)]
    TK_REAL      [reduce using rule 146 (comp_function_code)]
    KW_HASH      [reduce using rule 146 (comp_function_code)]
    KW_IF        [reduce using rule 146 (comp_function_code)]
    KW_FALSE     [reduce using rule 146 (comp_function_code)]
    KW_FOR       [reduce using rule 146 (comp_function_code)]
    KW_BREAK     [reduce using rule 146 (comp_function_code)]
    KW_CONST     [reduce using rule 146 (comp_function_code)]
    KW_CONTINUE  [reduce using rule 146 (comp_function_code)]
    KW_NOT       reduce using rule 59 (expr)
    KW_NOT       [reduce using rule 146 (comp_function_code)]
    KW_WHILE     [reduce using rule 146 (comp_function_code)]
    KW_AND       reduce using rule 59 (expr)
    KW_AND       [reduce using rule 146 (comp_function_code)]
    KW_TRUE      [reduce using rule 146 (comp_function_code)]
    KW_ENDWHILE  reduce using rule 146 (comp_function_code)
    KW_OR        reduce using rule 59 (expr)
    KW_OR        [reduce using rule 146 (comp_function_code)]
    OP_PLUS      [reduce using rule 59 (expr)]
    OP_PLUS      [reduce using rule 146 (comp_function_code)]
    OP_MINUS     [reduce using rule 59 (expr)]
    OP_MINUS     [reduce using rule 146 (comp_function_code)]
    OP_MUL       [reduce using rule 59 (expr)]
    OP_MUL       [reduce using rule 146 (comp_function_code)]
    OP_DIV       [reduce using rule 59 (expr)]
    OP_DIV       [reduce using rule 146 (comp_function_code)]
    OP_MOD       [reduce using rule 59 (expr)]
    OP_MOD       [reduce using rule 146 (comp_function_code)]
    OP_POWER     [reduce using rule 146 (comp_function_code)]
    OP_EQ        [reduce using rule 59 (expr)]
    OP_EQ        [reduce using rule 146 (comp_function_code)]
    OP_INEQ      [reduce using rule 59 (expr)]
    OP_INEQ      [reduce using rule 146 (comp_function_code)]
    OP_LESS      [reduce using rule 59 (expr)]
    OP_LESS      [reduce using rule 146 (comp_function_code)]
    OP_EQLESS    [reduce using rule 59 (expr)]
    OP_EQLESS    [reduce using rule 146 (comp_function_code)]
    OP_MORE      [reduce using rule 59 (expr)]
    OP_MORE      [reduce using rule 146 (comp_function_code)]
    OP_EQMORE    [reduce using rule 59 (expr)]
    OP_EQMORE    [reduce using rule 146 (comp_function_code)]
    OP_ASSIGN    [reduce using rule 59 (expr)]
    OP_ASSIGN    [reduce using rule 146 (comp_function_code)]
    OP_PLUSEQ    [reduce using rule 59 (expr)]
    OP_PLUSEQ    [reduce using rule 146 (comp_function_code)]
    OP_MINUSEQ   [reduce using rule 59 (expr)]
    OP_MINUSEQ   [reduce using rule 146 (comp_function_code)]
    OP_MULEQ     [reduce using rule 59 (expr)]
    OP_MULEQ     [reduce using rule 146 (comp_function_code)]
    OP_DIVEQ     [reduce using rule 59 (expr)]
    OP_DIVEQ     [reduce using rule 146 (comp_function_code)]
    OP_MODEQ     [reduce using rule 59 (expr)]
    OP_MODEQ     [reduce using rule 146 (comp_function_code)]
    OP_POINTER   [reduce using rule 146 (comp_function_code)]
    OP_PAR_L     [reduce using rule 146 (comp_function_code)]
    OP_SEMI      [reduce using rule 59 (expr)]
    OP_SEMI      [reduce using rule 146 (comp_function_code)]
    OP_COMA      reduce using rule 59 (expr)
    OP_COMA      [reduce using rule 146 (comp_function_code)]
    OP_BRA_L     [reduce using rule 146 (comp_function_code)]
    OP_DOT       reduce using rule 59 (expr)
    OP_DOT       [reduce using rule 146 (comp_function_code)]
    $default     reduce using rule 59 (expr)

    main_program                go to state 300
    local_declarations          go to state 297
    var_declarations            go to state 57
    conditions                  go to state 58
    while_loop                  go to state 59
    for_loop                    go to state 60
    variable_types              go to state 61
    comp_types_of_declarations  go to state 15
    expr                        go to state 62
    operators                   go to state 63
    comp_function_code          go to state 301


State 265

   69 expr: variable_types OP_BRA_L legal_array_index OP_BRA_R .

    $default  reduce using rule 69 (expr)


State 266

   70 expr: variable_types OP_BRA_L KW_HASH legal_array_index OP_BRA_R .

    $default  reduce using rule 70 (expr)


State 267

    3 final_program: program main main_program KW_ENDDEF OP_SEMI program .  [$end]
    9 program: program . global_declarations
   10 global_declarations: . var_declarations
   11                    | . func_declaration function_code KW_RETURN OP_SEMI KW_ENDDEF OP_SEMI
   12                    | . func_declaration function_code KW_RETURN expr OP_SEMI KW_ENDDEF OP_SEMI
   13                    | . func_declaration KW_RETURN expr OP_SEMI KW_ENDDEF OP_SEMI
   14                    | . func_declaration function_code KW_ENDDEF OP_SEMI
   15                    | . KW_COMP TK_IDENT OP_MEAN comp_code KW_ENDCOMP OP_SEMI
   16 func_declaration: . KW_DEF TK_IDENT OP_PAR_L func_parameters OP_PAR_R OP_MINUS OP_MORE types OP_MEAN
   17                 | . KW_DEF TK_IDENT OP_PAR_L func_parameters OP_PAR_R OP_MINUS OP_MORE KW_VOID OP_MEAN
   18                 | . KW_DEF TK_IDENT OP_PAR_L func_parameters OP_PAR_R OP_MEAN
   19                 | . KW_DEF TK_IDENT OP_PAR_L OP_PAR_R OP_MINUS OP_MORE types OP_MEAN
   20                 | . KW_DEF TK_IDENT OP_PAR_L OP_PAR_R OP_MEAN
   38 var_declarations: . variable_types OP_ASSIGN expr OP_SEMI
   39                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN expr OP_SEMI
   40                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   41                 | . variable_types OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   42                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_MEAN types OP_SEMI
   43                 | . comp_types_of_declarations OP_MEAN types OP_SEMI
   44                 | . KW_CONST comp_types_of_declarations OP_ASSIGN data_types OP_MEAN types OP_SEMI
   45                 | . KW_CONST comp_types_of_declarations OP_ASSIGN operators data_types OP_MEAN types OP_SEMI
   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   56 comp_types_of_declarations: . variable_types
   57                           | . comp_types_of_declarations OP_COMA variable_types
   58                           | . comp_types_of_declarations OP_COMA variable_types OP_BRA_L legal_array_index OP_BRA_R

    TK_IDENT  shift, and go to state 1
    KW_HASH   shift, and go to state 2
    KW_DEF    shift, and go to state 226
    KW_CONST  shift, and go to state 4
    KW_COMP   shift, and go to state 5

    $default  reduce using rule 3 (final_program)

    global_declarations         go to state 65
    func_declaration            go to state 12
    var_declarations            go to state 13
    variable_types              go to state 14
    comp_types_of_declarations  go to state 15


State 268

   13 global_declarations: func_declaration KW_RETURN expr OP_SEMI KW_ENDDEF OP_SEMI .

    $default  reduce using rule 13 (global_declarations)


State 269

   11 global_declarations: func_declaration function_code KW_RETURN OP_SEMI KW_ENDDEF OP_SEMI .

    $default  reduce using rule 11 (global_declarations)


State 270

   12 global_declarations: func_declaration function_code KW_RETURN expr OP_SEMI KW_ENDDEF . OP_SEMI

    OP_SEMI  shift, and go to state 302


State 271

   41 var_declarations: variable_types OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R . OP_SEMI
   69 expr: variable_types OP_BRA_L legal_array_index OP_BRA_R .  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_SEMI, OP_COMA, OP_DOT]

    OP_SEMI  shift, and go to state 303

    OP_SEMI   [reduce using rule 69 (expr)]
    $default  reduce using rule 69 (expr)


State 272

   40 var_declarations: variable_types OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN variable_types . OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   65 expr: variable_types . OP_PAR_L OP_PAR_R
   66     | variable_types . OP_PAR_L expr OP_PAR_R
   68     | variable_types .  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_SEMI, OP_COMA, OP_DOT]
   69     | variable_types . OP_BRA_L legal_array_index OP_BRA_R
   70     | variable_types . OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | variable_types . OP_BRA_L variable_types OP_BRA_R

    OP_PAR_L  shift, and go to state 92
    OP_BRA_L  shift, and go to state 304

    $default  reduce using rule 68 (expr)


State 273

   39 var_declarations: variable_types OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN expr . OP_SEMI
   73 expr: expr . OP_COMA expr
   74     | expr . OP_DOT expr
   75     | expr . OP_PLUS expr
   76     | expr . OP_MINUS expr
   77     | expr . OP_MUL expr
   78     | expr . OP_DIV expr
   79     | expr . OP_MOD expr
   80     | expr . OP_EQ expr
   81     | expr . OP_INEQ expr
   82     | expr . OP_LESS expr
   83     | expr . OP_EQLESS expr
   84     | expr . OP_MORE expr
   85     | expr . OP_EQMORE expr
   86     | expr . OP_ASSIGN expr
   87     | expr . KW_AND expr
   88     | expr . KW_OR expr
   89     | expr . KW_NOT expr
   90     | expr . OP_PLUSEQ expr
   91     | expr . OP_MINUSEQ expr
   92     | expr . OP_MULEQ expr
   93     | expr . OP_DIVEQ expr
   94     | expr . OP_MODEQ expr

    KW_NOT      shift, and go to state 94
    KW_AND      shift, and go to state 95
    KW_OR       shift, and go to state 96
    OP_PLUS     shift, and go to state 97
    OP_MINUS    shift, and go to state 98
    OP_MUL      shift, and go to state 99
    OP_DIV      shift, and go to state 100
    OP_MOD      shift, and go to state 101
    OP_EQ       shift, and go to state 102
    OP_INEQ     shift, and go to state 103
    OP_LESS     shift, and go to state 104
    OP_EQLESS   shift, and go to state 105
    OP_MORE     shift, and go to state 106
    OP_EQMORE   shift, and go to state 107
    OP_ASSIGN   shift, and go to state 108
    OP_PLUSEQ   shift, and go to state 109
    OP_MINUSEQ  shift, and go to state 110
    OP_MULEQ    shift, and go to state 111
    OP_DIVEQ    shift, and go to state 112
    OP_MODEQ    shift, and go to state 113
    OP_SEMI     shift, and go to state 305
    OP_COMA     shift, and go to state 115
    OP_DOT      shift, and go to state 116


State 274

   42 var_declarations: variable_types OP_BRA_L legal_array_index OP_BRA_R OP_MEAN types . OP_SEMI

    OP_SEMI  shift, and go to state 306


State 275

   58 comp_types_of_declarations: comp_types_of_declarations OP_COMA variable_types OP_BRA_L legal_array_index OP_BRA_R .

    $default  reduce using rule 58 (comp_types_of_declarations)


State 276

   24 func_parameters: TK_IDENT OP_BRA_L OP_BRA_R OP_MEAN . types
  103 types: . KW_STR
  104      | . KW_INTEGER
  105      | . KW_SCALAR
  106      | . KW_BOOLEAN
  107      | . TK_IDENT

    TK_IDENT    shift, and go to state 129
    KW_INTEGER  shift, and go to state 130
    KW_SCALAR   shift, and go to state 131
    KW_STR      shift, and go to state 132
    KW_BOOLEAN  shift, and go to state 133

    types  go to state 307


State 277

   19 func_declaration: KW_DEF TK_IDENT OP_PAR_L OP_PAR_R OP_MINUS OP_MORE types . OP_MEAN

    OP_MEAN  shift, and go to state 308


State 278

   16 func_declaration: KW_DEF TK_IDENT OP_PAR_L func_parameters OP_PAR_R OP_MINUS OP_MORE . types OP_MEAN
   17                 | KW_DEF TK_IDENT OP_PAR_L func_parameters OP_PAR_R OP_MINUS OP_MORE . KW_VOID OP_MEAN
  103 types: . KW_STR
  104      | . KW_INTEGER
  105      | . KW_SCALAR
  106      | . KW_BOOLEAN
  107      | . TK_IDENT

    TK_IDENT    shift, and go to state 129
    KW_INTEGER  shift, and go to state 130
    KW_SCALAR   shift, and go to state 131
    KW_STR      shift, and go to state 132
    KW_BOOLEAN  shift, and go to state 133
    KW_VOID     shift, and go to state 309

    types  go to state 310


State 279

   25 func_parameters: func_parameters OP_COMA TK_IDENT OP_BRA_L . OP_BRA_R OP_MEAN types

    OP_BRA_R  shift, and go to state 311


State 280

   23 func_parameters: func_parameters OP_COMA TK_IDENT OP_MEAN . types
  103 types: . KW_STR
  104      | . KW_INTEGER
  105      | . KW_SCALAR
  106      | . KW_BOOLEAN
  107      | . TK_IDENT

    TK_IDENT    shift, and go to state 129
    KW_INTEGER  shift, and go to state 130
    KW_SCALAR   shift, and go to state 131
    KW_STR      shift, and go to state 132
    KW_BOOLEAN  shift, and go to state 133

    types  go to state 312


State 281

   44 var_declarations: KW_CONST comp_types_of_declarations OP_ASSIGN data_types OP_MEAN types OP_SEMI .

    $default  reduce using rule 44 (var_declarations)


State 282

   45 var_declarations: KW_CONST comp_types_of_declarations OP_ASSIGN operators data_types OP_MEAN types . OP_SEMI

    OP_SEMI  shift, and go to state 313


State 283

   54 variable_types: TK_IDENT .  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_PAR_L, OP_SEMI, OP_COMA, OP_BRA_L, OP_DOT]
  138 comp_var_declarations: KW_HASH TK_IDENT OP_ASSIGN TK_IDENT . OP_BRA_L legal_array_index OP_BRA_R OP_SEMI

    OP_BRA_L  shift, and go to state 314

    OP_BRA_L  [reduce using rule 54 (variable_types)]
    $default  reduce using rule 54 (variable_types)


State 284

   73 expr: expr . OP_COMA expr
   74     | expr . OP_DOT expr
   75     | expr . OP_PLUS expr
   76     | expr . OP_MINUS expr
   77     | expr . OP_MUL expr
   78     | expr . OP_DIV expr
   79     | expr . OP_MOD expr
   80     | expr . OP_EQ expr
   81     | expr . OP_INEQ expr
   82     | expr . OP_LESS expr
   83     | expr . OP_EQLESS expr
   84     | expr . OP_MORE expr
   85     | expr . OP_EQMORE expr
   86     | expr . OP_ASSIGN expr
   87     | expr . KW_AND expr
   88     | expr . KW_OR expr
   89     | expr . KW_NOT expr
   90     | expr . OP_PLUSEQ expr
   91     | expr . OP_MINUSEQ expr
   92     | expr . OP_MULEQ expr
   93     | expr . OP_DIVEQ expr
   94     | expr . OP_MODEQ expr
  135 comp_var_declarations: KW_HASH TK_IDENT OP_ASSIGN expr . OP_SEMI

    KW_NOT      shift, and go to state 94
    KW_AND      shift, and go to state 95
    KW_OR       shift, and go to state 96
    OP_PLUS     shift, and go to state 97
    OP_MINUS    shift, and go to state 98
    OP_MUL      shift, and go to state 99
    OP_DIV      shift, and go to state 100
    OP_MOD      shift, and go to state 101
    OP_EQ       shift, and go to state 102
    OP_INEQ     shift, and go to state 103
    OP_LESS     shift, and go to state 104
    OP_EQLESS   shift, and go to state 105
    OP_MORE     shift, and go to state 106
    OP_EQMORE   shift, and go to state 107
    OP_ASSIGN   shift, and go to state 108
    OP_PLUSEQ   shift, and go to state 109
    OP_MINUSEQ  shift, and go to state 110
    OP_MULEQ    shift, and go to state 111
    OP_DIVEQ    shift, and go to state 112
    OP_MODEQ    shift, and go to state 113
    OP_SEMI     shift, and go to state 315
    OP_COMA     shift, and go to state 115
    OP_DOT      shift, and go to state 116


State 285

  136 comp_var_declarations: KW_HASH TK_IDENT OP_BRA_L legal_array_index . OP_BRA_R OP_ASSIGN expr OP_SEMI
  137                      | KW_HASH TK_IDENT OP_BRA_L legal_array_index . OP_BRA_R OP_ASSIGN KW_HASH TK_IDENT OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
  139                      | KW_HASH TK_IDENT OP_BRA_L legal_array_index . OP_BRA_R OP_MEAN types OP_SEMI

    OP_BRA_R  shift, and go to state 316


State 286

  151 comp_func_declaration: KW_DEF TK_IDENT OP_PAR_L OP_PAR_R . OP_MINUS OP_MORE types OP_MEAN
  152                      | KW_DEF TK_IDENT OP_PAR_L OP_PAR_R . OP_MEAN

    OP_MINUS  shift, and go to state 317
    OP_MEAN   shift, and go to state 318


State 287

   23 func_parameters: func_parameters . OP_COMA TK_IDENT OP_MEAN types
   25                | func_parameters . OP_COMA TK_IDENT OP_BRA_L OP_BRA_R OP_MEAN types
  149 comp_func_declaration: KW_DEF TK_IDENT OP_PAR_L func_parameters . OP_PAR_R OP_MINUS OP_MORE types OP_MEAN
  150                      | KW_DEF TK_IDENT OP_PAR_L func_parameters . OP_PAR_R OP_MEAN

    OP_PAR_R  shift, and go to state 319
    OP_COMA   shift, and go to state 207


State 288

  141 comp_var_declarations: KW_CONST comp_initialise_types_of_declarations OP_ASSIGN data_types . OP_MEAN types OP_SEMI

    OP_MEAN  shift, and go to state 320


State 289

  100 data_types: . TK_INT
  101           | . TK_STRING
  102           | . TK_REAL
  142 comp_var_declarations: KW_CONST comp_initialise_types_of_declarations OP_ASSIGN operators . data_types OP_MEAN types OP_SEMI

    TK_STRING  shift, and go to state 139
    TK_INT     shift, and go to state 140
    TK_REAL    shift, and go to state 141

    data_types  go to state 321


State 290

  144 comp_initialise_types_of_declarations: comp_initialise_types_of_declarations OP_COMA KW_HASH TK_IDENT .  [OP_ASSIGN, OP_COMA, OP_MEAN]
  145                                      | comp_initialise_types_of_declarations OP_COMA KW_HASH TK_IDENT . OP_BRA_L legal_array_index OP_BRA_R

    OP_BRA_L  shift, and go to state 322

    $default  reduce using rule 144 (comp_initialise_types_of_declarations)


State 291

  140 comp_var_declarations: comp_initialise_types_of_declarations OP_MEAN types OP_SEMI .

    $default  reduce using rule 140 (comp_var_declarations)


State 292

  132 comp_local_declarations: comp_func_declaration KW_RETURN expr OP_SEMI . KW_ENDDEF OP_SEMI

    KW_ENDDEF  shift, and go to state 323


State 293

  133 comp_local_declarations: comp_func_declaration comp_function_code KW_ENDDEF OP_SEMI .

    $default  reduce using rule 133 (comp_local_declarations)


State 294

   97 expr: OP_SEMI .  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_SEMI, OP_COMA, OP_DOT]
  130 comp_local_declarations: comp_func_declaration comp_function_code KW_RETURN OP_SEMI . KW_ENDDEF OP_SEMI

    KW_ENDDEF  shift, and go to state 324

    $default  reduce using rule 97 (expr)


State 295

   73 expr: expr . OP_COMA expr
   74     | expr . OP_DOT expr
   75     | expr . OP_PLUS expr
   76     | expr . OP_MINUS expr
   77     | expr . OP_MUL expr
   78     | expr . OP_DIV expr
   79     | expr . OP_MOD expr
   80     | expr . OP_EQ expr
   81     | expr . OP_INEQ expr
   82     | expr . OP_LESS expr
   83     | expr . OP_EQLESS expr
   84     | expr . OP_MORE expr
   85     | expr . OP_EQMORE expr
   86     | expr . OP_ASSIGN expr
   87     | expr . KW_AND expr
   88     | expr . KW_OR expr
   89     | expr . KW_NOT expr
   90     | expr . OP_PLUSEQ expr
   91     | expr . OP_MINUSEQ expr
   92     | expr . OP_MULEQ expr
   93     | expr . OP_DIVEQ expr
   94     | expr . OP_MODEQ expr
  131 comp_local_declarations: comp_func_declaration comp_function_code KW_RETURN expr . OP_SEMI KW_ENDDEF OP_SEMI

    KW_NOT      shift, and go to state 94
    KW_AND      shift, and go to state 95
    KW_OR       shift, and go to state 96
    OP_PLUS     shift, and go to state 97
    OP_MINUS    shift, and go to state 98
    OP_MUL      shift, and go to state 99
    OP_DIV      shift, and go to state 100
    OP_MOD      shift, and go to state 101
    OP_EQ       shift, and go to state 102
    OP_INEQ     shift, and go to state 103
    OP_LESS     shift, and go to state 104
    OP_EQLESS   shift, and go to state 105
    OP_MORE     shift, and go to state 106
    OP_EQMORE   shift, and go to state 107
    OP_ASSIGN   shift, and go to state 108
    OP_PLUSEQ   shift, and go to state 109
    OP_MINUSEQ  shift, and go to state 110
    OP_MULEQ    shift, and go to state 111
    OP_DIVEQ    shift, and go to state 112
    OP_MODEQ    shift, and go to state 113
    OP_SEMI     shift, and go to state 325
    OP_COMA     shift, and go to state 115
    OP_DOT      shift, and go to state 116


State 296

   30 main_program: main_program . local_declarations
   31 local_declarations: . var_declarations
   32                   | . expr OP_SEMI
   33                   | . conditions KW_ENDIF OP_SEMI
   34                   | . while_loop KW_ENDWHILE OP_SEMI
   35                   | . for_loop KW_ENDFOR OP_SEMI
   36                   | . KW_BREAK OP_SEMI
   37                   | . KW_CONTINUE OP_SEMI
   38 var_declarations: . variable_types OP_ASSIGN expr OP_SEMI
   39                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN expr OP_SEMI
   40                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   41                 | . variable_types OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   42                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_MEAN types OP_SEMI
   43                 | . comp_types_of_declarations OP_MEAN types OP_SEMI
   44                 | . KW_CONST comp_types_of_declarations OP_ASSIGN data_types OP_MEAN types OP_SEMI
   45                 | . KW_CONST comp_types_of_declarations OP_ASSIGN operators data_types OP_MEAN types OP_SEMI
   46 conditions: . KW_IF OP_PAR_L expr OP_PAR_R OP_MEAN main_program
   46           | KW_IF OP_PAR_L expr OP_PAR_R OP_MEAN main_program .  [KW_ELSE, KW_ENDIF]
   47           | . KW_IF OP_PAR_L expr OP_PAR_R OP_MEAN comp_function_code
   48           | . conditions KW_ELSE OP_MEAN main_program
   49 while_loop: . KW_WHILE OP_PAR_L expr OP_PAR_R OP_MEAN main_program
   50           | . KW_WHILE OP_PAR_L expr OP_PAR_R OP_MEAN comp_function_code
   51 for_loop: . KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_BRA_R OP_MEAN main_program
   52         | . KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_BRA_R OP_MEAN comp_function_code
   53         | . KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_MEAN expr OP_BRA_R OP_MEAN main_program
   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   56 comp_types_of_declarations: . variable_types
   57                           | . comp_types_of_declarations OP_COMA variable_types
   58                           | . comp_types_of_declarations OP_COMA variable_types OP_BRA_L legal_array_index OP_BRA_R
   59 expr: . %empty  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_SEMI, OP_COMA, OP_DOT]
   60     | . TK_STRING
   61     | . TK_INT
   62     | . TK_REAL
   63     | . KW_TRUE
   64     | . KW_FALSE
   65     | . variable_types OP_PAR_L OP_PAR_R
   66     | . variable_types OP_PAR_L expr OP_PAR_R
   67     | . operators expr
   68     | . variable_types
   69     | . variable_types OP_BRA_L legal_array_index OP_BRA_R
   70     | . variable_types OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | . variable_types OP_BRA_L variable_types OP_BRA_R
   72     | . OP_POINTER expr
   73     | . expr OP_COMA expr
   74     | . expr OP_DOT expr
   75     | . expr OP_PLUS expr
   76     | . expr OP_MINUS expr
   77     | . expr OP_MUL expr
   78     | . expr OP_DIV expr
   79     | . expr OP_MOD expr
   80     | . expr OP_EQ expr
   81     | . expr OP_INEQ expr
   82     | . expr OP_LESS expr
   83     | . expr OP_EQLESS expr
   84     | . expr OP_MORE expr
   85     | . expr OP_EQMORE expr
   86     | . expr OP_ASSIGN expr
   87     | . expr KW_AND expr
   88     | . expr KW_OR expr
   89     | . expr KW_NOT expr
   90     | . expr OP_PLUSEQ expr
   91     | . expr OP_MINUSEQ expr
   92     | . expr OP_MULEQ expr
   93     | . expr OP_DIVEQ expr
   94     | . expr OP_MODEQ expr
   95     | . OP_PAR_L expr OP_PAR_R
   96     | . OP_BRA_L expr OP_BRA_L
   97     | . OP_SEMI
  108 operators: . OP_PLUS
  109          | . OP_MINUS
  110          | . OP_MUL
  111          | . OP_DIV
  112          | . OP_MOD
  113          | . OP_POWER
  114          | . OP_EQ
  115          | . OP_INEQ
  116          | . OP_LESS
  117          | . OP_EQLESS
  118          | . OP_MORE
  119          | . OP_EQMORE
  120          | . OP_ASSIGN
  121          | . OP_PLUSEQ
  122          | . OP_MINUSEQ
  123          | . OP_MULEQ
  124          | . OP_DIVEQ
  125          | . OP_MODEQ

    TK_STRING    shift, and go to state 23
    TK_IDENT     shift, and go to state 1
    TK_INT       shift, and go to state 24
    TK_REAL      shift, and go to state 25
    KW_HASH      shift, and go to state 2
    KW_IF        shift, and go to state 26
    KW_FALSE     shift, and go to state 27
    KW_FOR       shift, and go to state 28
    KW_BREAK     shift, and go to state 29
    KW_CONST     shift, and go to state 4
    KW_CONTINUE  shift, and go to state 30
    KW_WHILE     shift, and go to state 31
    KW_TRUE      shift, and go to state 32
    OP_PLUS      shift, and go to state 33
    OP_MINUS     shift, and go to state 34
    OP_MUL       shift, and go to state 35
    OP_DIV       shift, and go to state 36
    OP_MOD       shift, and go to state 37
    OP_POWER     shift, and go to state 38
    OP_EQ        shift, and go to state 39
    OP_INEQ      shift, and go to state 40
    OP_LESS      shift, and go to state 41
    OP_EQLESS    shift, and go to state 42
    OP_MORE      shift, and go to state 43
    OP_EQMORE    shift, and go to state 44
    OP_ASSIGN    shift, and go to state 45
    OP_PLUSEQ    shift, and go to state 46
    OP_MINUSEQ   shift, and go to state 47
    OP_MULEQ     shift, and go to state 48
    OP_DIVEQ     shift, and go to state 49
    OP_MODEQ     shift, and go to state 50
    OP_POINTER   shift, and go to state 51
    OP_PAR_L     shift, and go to state 52
    OP_SEMI      shift, and go to state 53
    OP_BRA_L     shift, and go to state 54

    KW_ELSE     reduce using rule 46 (conditions)
    KW_ENDIF    reduce using rule 46 (conditions)
    OP_PLUS     [reduce using rule 59 (expr)]
    OP_MINUS    [reduce using rule 59 (expr)]
    OP_MUL      [reduce using rule 59 (expr)]
    OP_DIV      [reduce using rule 59 (expr)]
    OP_MOD      [reduce using rule 59 (expr)]
    OP_EQ       [reduce using rule 59 (expr)]
    OP_INEQ     [reduce using rule 59 (expr)]
    OP_LESS     [reduce using rule 59 (expr)]
    OP_EQLESS   [reduce using rule 59 (expr)]
    OP_MORE     [reduce using rule 59 (expr)]
    OP_EQMORE   [reduce using rule 59 (expr)]
    OP_ASSIGN   [reduce using rule 59 (expr)]
    OP_PLUSEQ   [reduce using rule 59 (expr)]
    OP_MINUSEQ  [reduce using rule 59 (expr)]
    OP_MULEQ    [reduce using rule 59 (expr)]
    OP_DIVEQ    [reduce using rule 59 (expr)]
    OP_MODEQ    [reduce using rule 59 (expr)]
    OP_SEMI     [reduce using rule 59 (expr)]
    $default    reduce using rule 59 (expr)

    local_declarations          go to state 87
    var_declarations            go to state 57
    conditions                  go to state 58
    while_loop                  go to state 59
    for_loop                    go to state 60
    variable_types              go to state 61
    comp_types_of_declarations  go to state 15
    expr                        go to state 62
    operators                   go to state 63


State 297

   29 main_program: local_declarations .  [TK_STRING, TK_IDENT, TK_INT, TK_REAL, KW_HASH, KW_IF, KW_ELSE, KW_FALSE, KW_FOR, KW_BREAK, KW_CONST, KW_CONTINUE, KW_ENDFOR, KW_NOT, KW_WHILE, KW_AND, KW_TRUE, KW_ENDIF, KW_ENDWHILE, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_POWER, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_POINTER, OP_PAR_L, OP_SEMI, OP_COMA, OP_BRA_L, OP_DOT]
  147 comp_function_code: local_declarations .  [TK_STRING, TK_IDENT, TK_INT, TK_REAL, KW_HASH, KW_IF, KW_ELSE, KW_FALSE, KW_FOR, KW_BREAK, KW_CONST, KW_CONTINUE, KW_ENDFOR, KW_NOT, KW_WHILE, KW_AND, KW_TRUE, KW_ENDIF, KW_ENDWHILE, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_POWER, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_POINTER, OP_PAR_L, OP_SEMI, OP_COMA, OP_BRA_L, OP_DOT]

    TK_STRING    reduce using rule 29 (main_program)
    TK_STRING    [reduce using rule 147 (comp_function_code)]
    TK_IDENT     reduce using rule 29 (main_program)
    TK_IDENT     [reduce using rule 147 (comp_function_code)]
    TK_INT       reduce using rule 29 (main_program)
    TK_INT       [reduce using rule 147 (comp_function_code)]
    TK_REAL      reduce using rule 29 (main_program)
    TK_REAL      [reduce using rule 147 (comp_function_code)]
    KW_HASH      reduce using rule 29 (main_program)
    KW_HASH      [reduce using rule 147 (comp_function_code)]
    KW_IF        reduce using rule 29 (main_program)
    KW_IF        [reduce using rule 147 (comp_function_code)]
    KW_ELSE      reduce using rule 29 (main_program)
    KW_ELSE      [reduce using rule 147 (comp_function_code)]
    KW_FALSE     reduce using rule 29 (main_program)
    KW_FALSE     [reduce using rule 147 (comp_function_code)]
    KW_FOR       reduce using rule 29 (main_program)
    KW_FOR       [reduce using rule 147 (comp_function_code)]
    KW_BREAK     reduce using rule 29 (main_program)
    KW_BREAK     [reduce using rule 147 (comp_function_code)]
    KW_CONST     reduce using rule 29 (main_program)
    KW_CONST     [reduce using rule 147 (comp_function_code)]
    KW_CONTINUE  reduce using rule 29 (main_program)
    KW_CONTINUE  [reduce using rule 147 (comp_function_code)]
    KW_ENDFOR    reduce using rule 29 (main_program)
    KW_ENDFOR    [reduce using rule 147 (comp_function_code)]
    KW_NOT       reduce using rule 29 (main_program)
    KW_NOT       [reduce using rule 147 (comp_function_code)]
    KW_WHILE     reduce using rule 29 (main_program)
    KW_WHILE     [reduce using rule 147 (comp_function_code)]
    KW_AND       reduce using rule 29 (main_program)
    KW_AND       [reduce using rule 147 (comp_function_code)]
    KW_TRUE      reduce using rule 29 (main_program)
    KW_TRUE      [reduce using rule 147 (comp_function_code)]
    KW_ENDIF     reduce using rule 29 (main_program)
    KW_ENDIF     [reduce using rule 147 (comp_function_code)]
    KW_ENDWHILE  reduce using rule 29 (main_program)
    KW_ENDWHILE  [reduce using rule 147 (comp_function_code)]
    KW_OR        reduce using rule 29 (main_program)
    KW_OR        [reduce using rule 147 (comp_function_code)]
    OP_PLUS      reduce using rule 29 (main_program)
    OP_PLUS      [reduce using rule 147 (comp_function_code)]
    OP_MINUS     reduce using rule 29 (main_program)
    OP_MINUS     [reduce using rule 147 (comp_function_code)]
    OP_MUL       reduce using rule 29 (main_program)
    OP_MUL       [reduce using rule 147 (comp_function_code)]
    OP_DIV       reduce using rule 29 (main_program)
    OP_DIV       [reduce using rule 147 (comp_function_code)]
    OP_MOD       reduce using rule 29 (main_program)
    OP_MOD       [reduce using rule 147 (comp_function_code)]
    OP_POWER     reduce using rule 29 (main_program)
    OP_POWER     [reduce using rule 147 (comp_function_code)]
    OP_EQ        reduce using rule 29 (main_program)
    OP_EQ        [reduce using rule 147 (comp_function_code)]
    OP_INEQ      reduce using rule 29 (main_program)
    OP_INEQ      [reduce using rule 147 (comp_function_code)]
    OP_LESS      reduce using rule 29 (main_program)
    OP_LESS      [reduce using rule 147 (comp_function_code)]
    OP_EQLESS    reduce using rule 29 (main_program)
    OP_EQLESS    [reduce using rule 147 (comp_function_code)]
    OP_MORE      reduce using rule 29 (main_program)
    OP_MORE      [reduce using rule 147 (comp_function_code)]
    OP_EQMORE    reduce using rule 29 (main_program)
    OP_EQMORE    [reduce using rule 147 (comp_function_code)]
    OP_ASSIGN    reduce using rule 29 (main_program)
    OP_ASSIGN    [reduce using rule 147 (comp_function_code)]
    OP_PLUSEQ    reduce using rule 29 (main_program)
    OP_PLUSEQ    [reduce using rule 147 (comp_function_code)]
    OP_MINUSEQ   reduce using rule 29 (main_program)
    OP_MINUSEQ   [reduce using rule 147 (comp_function_code)]
    OP_MULEQ     reduce using rule 29 (main_program)
    OP_MULEQ     [reduce using rule 147 (comp_function_code)]
    OP_DIVEQ     reduce using rule 29 (main_program)
    OP_DIVEQ     [reduce using rule 147 (comp_function_code)]
    OP_MODEQ     reduce using rule 29 (main_program)
    OP_MODEQ     [reduce using rule 147 (comp_function_code)]
    OP_POINTER   reduce using rule 29 (main_program)
    OP_POINTER   [reduce using rule 147 (comp_function_code)]
    OP_PAR_L     reduce using rule 29 (main_program)
    OP_PAR_L     [reduce using rule 147 (comp_function_code)]
    OP_SEMI      reduce using rule 29 (main_program)
    OP_SEMI      [reduce using rule 147 (comp_function_code)]
    OP_COMA      reduce using rule 29 (main_program)
    OP_COMA      [reduce using rule 147 (comp_function_code)]
    OP_BRA_L     reduce using rule 29 (main_program)
    OP_BRA_L     [reduce using rule 147 (comp_function_code)]
    OP_DOT       reduce using rule 29 (main_program)
    OP_DOT       [reduce using rule 147 (comp_function_code)]
    $default     reduce using rule 29 (main_program)


State 298

   31 local_declarations: . var_declarations
   32                   | . expr OP_SEMI
   33                   | . conditions KW_ENDIF OP_SEMI
   34                   | . while_loop KW_ENDWHILE OP_SEMI
   35                   | . for_loop KW_ENDFOR OP_SEMI
   36                   | . KW_BREAK OP_SEMI
   37                   | . KW_CONTINUE OP_SEMI
   38 var_declarations: . variable_types OP_ASSIGN expr OP_SEMI
   39                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN expr OP_SEMI
   40                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   41                 | . variable_types OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   42                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_MEAN types OP_SEMI
   43                 | . comp_types_of_declarations OP_MEAN types OP_SEMI
   44                 | . KW_CONST comp_types_of_declarations OP_ASSIGN data_types OP_MEAN types OP_SEMI
   45                 | . KW_CONST comp_types_of_declarations OP_ASSIGN operators data_types OP_MEAN types OP_SEMI
   46 conditions: . KW_IF OP_PAR_L expr OP_PAR_R OP_MEAN main_program
   47           | . KW_IF OP_PAR_L expr OP_PAR_R OP_MEAN comp_function_code
   47           | KW_IF OP_PAR_L expr OP_PAR_R OP_MEAN comp_function_code .  [KW_ELSE, KW_ENDIF]
   48           | . conditions KW_ELSE OP_MEAN main_program
   49 while_loop: . KW_WHILE OP_PAR_L expr OP_PAR_R OP_MEAN main_program
   50           | . KW_WHILE OP_PAR_L expr OP_PAR_R OP_MEAN comp_function_code
   51 for_loop: . KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_BRA_R OP_MEAN main_program
   52         | . KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_BRA_R OP_MEAN comp_function_code
   53         | . KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_MEAN expr OP_BRA_R OP_MEAN main_program
   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   56 comp_types_of_declarations: . variable_types
   57                           | . comp_types_of_declarations OP_COMA variable_types
   58                           | . comp_types_of_declarations OP_COMA variable_types OP_BRA_L legal_array_index OP_BRA_R
   59 expr: . %empty  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_SEMI, OP_COMA, OP_DOT]
   60     | . TK_STRING
   61     | . TK_INT
   62     | . TK_REAL
   63     | . KW_TRUE
   64     | . KW_FALSE
   65     | . variable_types OP_PAR_L OP_PAR_R
   66     | . variable_types OP_PAR_L expr OP_PAR_R
   67     | . operators expr
   68     | . variable_types
   69     | . variable_types OP_BRA_L legal_array_index OP_BRA_R
   70     | . variable_types OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | . variable_types OP_BRA_L variable_types OP_BRA_R
   72     | . OP_POINTER expr
   73     | . expr OP_COMA expr
   74     | . expr OP_DOT expr
   75     | . expr OP_PLUS expr
   76     | . expr OP_MINUS expr
   77     | . expr OP_MUL expr
   78     | . expr OP_DIV expr
   79     | . expr OP_MOD expr
   80     | . expr OP_EQ expr
   81     | . expr OP_INEQ expr
   82     | . expr OP_LESS expr
   83     | . expr OP_EQLESS expr
   84     | . expr OP_MORE expr
   85     | . expr OP_EQMORE expr
   86     | . expr OP_ASSIGN expr
   87     | . expr KW_AND expr
   88     | . expr KW_OR expr
   89     | . expr KW_NOT expr
   90     | . expr OP_PLUSEQ expr
   91     | . expr OP_MINUSEQ expr
   92     | . expr OP_MULEQ expr
   93     | . expr OP_DIVEQ expr
   94     | . expr OP_MODEQ expr
   95     | . OP_PAR_L expr OP_PAR_R
   96     | . OP_BRA_L expr OP_BRA_L
   97     | . OP_SEMI
  108 operators: . OP_PLUS
  109          | . OP_MINUS
  110          | . OP_MUL
  111          | . OP_DIV
  112          | . OP_MOD
  113          | . OP_POWER
  114          | . OP_EQ
  115          | . OP_INEQ
  116          | . OP_LESS
  117          | . OP_EQLESS
  118          | . OP_MORE
  119          | . OP_EQMORE
  120          | . OP_ASSIGN
  121          | . OP_PLUSEQ
  122          | . OP_MINUSEQ
  123          | . OP_MULEQ
  124          | . OP_DIVEQ
  125          | . OP_MODEQ
  148 comp_function_code: comp_function_code . local_declarations

    TK_STRING    shift, and go to state 23
    TK_IDENT     shift, and go to state 1
    TK_INT       shift, and go to state 24
    TK_REAL      shift, and go to state 25
    KW_HASH      shift, and go to state 2
    KW_IF        shift, and go to state 26
    KW_FALSE     shift, and go to state 27
    KW_FOR       shift, and go to state 28
    KW_BREAK     shift, and go to state 29
    KW_CONST     shift, and go to state 4
    KW_CONTINUE  shift, and go to state 30
    KW_WHILE     shift, and go to state 31
    KW_TRUE      shift, and go to state 32
    OP_PLUS      shift, and go to state 33
    OP_MINUS     shift, and go to state 34
    OP_MUL       shift, and go to state 35
    OP_DIV       shift, and go to state 36
    OP_MOD       shift, and go to state 37
    OP_POWER     shift, and go to state 38
    OP_EQ        shift, and go to state 39
    OP_INEQ      shift, and go to state 40
    OP_LESS      shift, and go to state 41
    OP_EQLESS    shift, and go to state 42
    OP_MORE      shift, and go to state 43
    OP_EQMORE    shift, and go to state 44
    OP_ASSIGN    shift, and go to state 45
    OP_PLUSEQ    shift, and go to state 46
    OP_MINUSEQ   shift, and go to state 47
    OP_MULEQ     shift, and go to state 48
    OP_DIVEQ     shift, and go to state 49
    OP_MODEQ     shift, and go to state 50
    OP_POINTER   shift, and go to state 51
    OP_PAR_L     shift, and go to state 52
    OP_SEMI      shift, and go to state 53
    OP_BRA_L     shift, and go to state 54

    KW_ELSE     reduce using rule 47 (conditions)
    KW_ENDIF    reduce using rule 47 (conditions)
    OP_PLUS     [reduce using rule 59 (expr)]
    OP_MINUS    [reduce using rule 59 (expr)]
    OP_MUL      [reduce using rule 59 (expr)]
    OP_DIV      [reduce using rule 59 (expr)]
    OP_MOD      [reduce using rule 59 (expr)]
    OP_EQ       [reduce using rule 59 (expr)]
    OP_INEQ     [reduce using rule 59 (expr)]
    OP_LESS     [reduce using rule 59 (expr)]
    OP_EQLESS   [reduce using rule 59 (expr)]
    OP_MORE     [reduce using rule 59 (expr)]
    OP_EQMORE   [reduce using rule 59 (expr)]
    OP_ASSIGN   [reduce using rule 59 (expr)]
    OP_PLUSEQ   [reduce using rule 59 (expr)]
    OP_MINUSEQ  [reduce using rule 59 (expr)]
    OP_MULEQ    [reduce using rule 59 (expr)]
    OP_DIVEQ    [reduce using rule 59 (expr)]
    OP_MODEQ    [reduce using rule 59 (expr)]
    OP_SEMI     [reduce using rule 59 (expr)]
    $default    reduce using rule 59 (expr)

    local_declarations          go to state 261
    var_declarations            go to state 57
    conditions                  go to state 58
    while_loop                  go to state 59
    for_loop                    go to state 60
    variable_types              go to state 61
    comp_types_of_declarations  go to state 15
    expr                        go to state 62
    operators                   go to state 63


State 299

   51 for_loop: KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN . expr OP_BRA_R OP_MEAN main_program
   52         | KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN . expr OP_BRA_R OP_MEAN comp_function_code
   53         | KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN . expr OP_MEAN expr OP_BRA_R OP_MEAN main_program
   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   59 expr: . %empty  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_COMA, OP_BRA_R, OP_DOT, OP_MEAN]
   60     | . TK_STRING
   61     | . TK_INT
   62     | . TK_REAL
   63     | . KW_TRUE
   64     | . KW_FALSE
   65     | . variable_types OP_PAR_L OP_PAR_R
   66     | . variable_types OP_PAR_L expr OP_PAR_R
   67     | . operators expr
   68     | . variable_types
   69     | . variable_types OP_BRA_L legal_array_index OP_BRA_R
   70     | . variable_types OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | . variable_types OP_BRA_L variable_types OP_BRA_R
   72     | . OP_POINTER expr
   73     | . expr OP_COMA expr
   74     | . expr OP_DOT expr
   75     | . expr OP_PLUS expr
   76     | . expr OP_MINUS expr
   77     | . expr OP_MUL expr
   78     | . expr OP_DIV expr
   79     | . expr OP_MOD expr
   80     | . expr OP_EQ expr
   81     | . expr OP_INEQ expr
   82     | . expr OP_LESS expr
   83     | . expr OP_EQLESS expr
   84     | . expr OP_MORE expr
   85     | . expr OP_EQMORE expr
   86     | . expr OP_ASSIGN expr
   87     | . expr KW_AND expr
   88     | . expr KW_OR expr
   89     | . expr KW_NOT expr
   90     | . expr OP_PLUSEQ expr
   91     | . expr OP_MINUSEQ expr
   92     | . expr OP_MULEQ expr
   93     | . expr OP_DIVEQ expr
   94     | . expr OP_MODEQ expr
   95     | . OP_PAR_L expr OP_PAR_R
   96     | . OP_BRA_L expr OP_BRA_L
   97     | . OP_SEMI
  108 operators: . OP_PLUS
  109          | . OP_MINUS
  110          | . OP_MUL
  111          | . OP_DIV
  112          | . OP_MOD
  113          | . OP_POWER
  114          | . OP_EQ
  115          | . OP_INEQ
  116          | . OP_LESS
  117          | . OP_EQLESS
  118          | . OP_MORE
  119          | . OP_EQMORE
  120          | . OP_ASSIGN
  121          | . OP_PLUSEQ
  122          | . OP_MINUSEQ
  123          | . OP_MULEQ
  124          | . OP_DIVEQ
  125          | . OP_MODEQ

    TK_STRING   shift, and go to state 23
    TK_IDENT    shift, and go to state 1
    TK_INT      shift, and go to state 24
    TK_REAL     shift, and go to state 25
    KW_HASH     shift, and go to state 2
    KW_FALSE    shift, and go to state 27
    KW_TRUE     shift, and go to state 32
    OP_PLUS     shift, and go to state 33
    OP_MINUS    shift, and go to state 34
    OP_MUL      shift, and go to state 35
    OP_DIV      shift, and go to state 36
    OP_MOD      shift, and go to state 37
    OP_POWER    shift, and go to state 38
    OP_EQ       shift, and go to state 39
    OP_INEQ     shift, and go to state 40
    OP_LESS     shift, and go to state 41
    OP_EQLESS   shift, and go to state 42
    OP_MORE     shift, and go to state 43
    OP_EQMORE   shift, and go to state 44
    OP_ASSIGN   shift, and go to state 45
    OP_PLUSEQ   shift, and go to state 46
    OP_MINUSEQ  shift, and go to state 47
    OP_MULEQ    shift, and go to state 48
    OP_DIVEQ    shift, and go to state 49
    OP_MODEQ    shift, and go to state 50
    OP_POINTER  shift, and go to state 51
    OP_PAR_L    shift, and go to state 52
    OP_SEMI     shift, and go to state 53
    OP_BRA_L    shift, and go to state 54

    OP_PLUS     [reduce using rule 59 (expr)]
    OP_MINUS    [reduce using rule 59 (expr)]
    OP_MUL      [reduce using rule 59 (expr)]
    OP_DIV      [reduce using rule 59 (expr)]
    OP_MOD      [reduce using rule 59 (expr)]
    OP_EQ       [reduce using rule 59 (expr)]
    OP_INEQ     [reduce using rule 59 (expr)]
    OP_LESS     [reduce using rule 59 (expr)]
    OP_EQLESS   [reduce using rule 59 (expr)]
    OP_MORE     [reduce using rule 59 (expr)]
    OP_EQMORE   [reduce using rule 59 (expr)]
    OP_ASSIGN   [reduce using rule 59 (expr)]
    OP_PLUSEQ   [reduce using rule 59 (expr)]
    OP_MINUSEQ  [reduce using rule 59 (expr)]
    OP_MULEQ    [reduce using rule 59 (expr)]
    OP_DIVEQ    [reduce using rule 59 (expr)]
    OP_MODEQ    [reduce using rule 59 (expr)]
    $default    reduce using rule 59 (expr)

    variable_types  go to state 82
    expr            go to state 326
    operators       go to state 63


State 300

   30 main_program: main_program . local_declarations
   31 local_declarations: . var_declarations
   32                   | . expr OP_SEMI
   33                   | . conditions KW_ENDIF OP_SEMI
   34                   | . while_loop KW_ENDWHILE OP_SEMI
   35                   | . for_loop KW_ENDFOR OP_SEMI
   36                   | . KW_BREAK OP_SEMI
   37                   | . KW_CONTINUE OP_SEMI
   38 var_declarations: . variable_types OP_ASSIGN expr OP_SEMI
   39                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN expr OP_SEMI
   40                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   41                 | . variable_types OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   42                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_MEAN types OP_SEMI
   43                 | . comp_types_of_declarations OP_MEAN types OP_SEMI
   44                 | . KW_CONST comp_types_of_declarations OP_ASSIGN data_types OP_MEAN types OP_SEMI
   45                 | . KW_CONST comp_types_of_declarations OP_ASSIGN operators data_types OP_MEAN types OP_SEMI
   46 conditions: . KW_IF OP_PAR_L expr OP_PAR_R OP_MEAN main_program
   47           | . KW_IF OP_PAR_L expr OP_PAR_R OP_MEAN comp_function_code
   48           | . conditions KW_ELSE OP_MEAN main_program
   49 while_loop: . KW_WHILE OP_PAR_L expr OP_PAR_R OP_MEAN main_program
   49           | KW_WHILE OP_PAR_L expr OP_PAR_R OP_MEAN main_program .  [KW_ENDWHILE]
   50           | . KW_WHILE OP_PAR_L expr OP_PAR_R OP_MEAN comp_function_code
   51 for_loop: . KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_BRA_R OP_MEAN main_program
   52         | . KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_BRA_R OP_MEAN comp_function_code
   53         | . KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_MEAN expr OP_BRA_R OP_MEAN main_program
   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   56 comp_types_of_declarations: . variable_types
   57                           | . comp_types_of_declarations OP_COMA variable_types
   58                           | . comp_types_of_declarations OP_COMA variable_types OP_BRA_L legal_array_index OP_BRA_R
   59 expr: . %empty  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_SEMI, OP_COMA, OP_DOT]
   60     | . TK_STRING
   61     | . TK_INT
   62     | . TK_REAL
   63     | . KW_TRUE
   64     | . KW_FALSE
   65     | . variable_types OP_PAR_L OP_PAR_R
   66     | . variable_types OP_PAR_L expr OP_PAR_R
   67     | . operators expr
   68     | . variable_types
   69     | . variable_types OP_BRA_L legal_array_index OP_BRA_R
   70     | . variable_types OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | . variable_types OP_BRA_L variable_types OP_BRA_R
   72     | . OP_POINTER expr
   73     | . expr OP_COMA expr
   74     | . expr OP_DOT expr
   75     | . expr OP_PLUS expr
   76     | . expr OP_MINUS expr
   77     | . expr OP_MUL expr
   78     | . expr OP_DIV expr
   79     | . expr OP_MOD expr
   80     | . expr OP_EQ expr
   81     | . expr OP_INEQ expr
   82     | . expr OP_LESS expr
   83     | . expr OP_EQLESS expr
   84     | . expr OP_MORE expr
   85     | . expr OP_EQMORE expr
   86     | . expr OP_ASSIGN expr
   87     | . expr KW_AND expr
   88     | . expr KW_OR expr
   89     | . expr KW_NOT expr
   90     | . expr OP_PLUSEQ expr
   91     | . expr OP_MINUSEQ expr
   92     | . expr OP_MULEQ expr
   93     | . expr OP_DIVEQ expr
   94     | . expr OP_MODEQ expr
   95     | . OP_PAR_L expr OP_PAR_R
   96     | . OP_BRA_L expr OP_BRA_L
   97     | . OP_SEMI
  108 operators: . OP_PLUS
  109          | . OP_MINUS
  110          | . OP_MUL
  111          | . OP_DIV
  112          | . OP_MOD
  113          | . OP_POWER
  114          | . OP_EQ
  115          | . OP_INEQ
  116          | . OP_LESS
  117          | . OP_EQLESS
  118          | . OP_MORE
  119          | . OP_EQMORE
  120          | . OP_ASSIGN
  121          | . OP_PLUSEQ
  122          | . OP_MINUSEQ
  123          | . OP_MULEQ
  124          | . OP_DIVEQ
  125          | . OP_MODEQ

    TK_STRING    shift, and go to state 23
    TK_IDENT     shift, and go to state 1
    TK_INT       shift, and go to state 24
    TK_REAL      shift, and go to state 25
    KW_HASH      shift, and go to state 2
    KW_IF        shift, and go to state 26
    KW_FALSE     shift, and go to state 27
    KW_FOR       shift, and go to state 28
    KW_BREAK     shift, and go to state 29
    KW_CONST     shift, and go to state 4
    KW_CONTINUE  shift, and go to state 30
    KW_WHILE     shift, and go to state 31
    KW_TRUE      shift, and go to state 32
    OP_PLUS      shift, and go to state 33
    OP_MINUS     shift, and go to state 34
    OP_MUL       shift, and go to state 35
    OP_DIV       shift, and go to state 36
    OP_MOD       shift, and go to state 37
    OP_POWER     shift, and go to state 38
    OP_EQ        shift, and go to state 39
    OP_INEQ      shift, and go to state 40
    OP_LESS      shift, and go to state 41
    OP_EQLESS    shift, and go to state 42
    OP_MORE      shift, and go to state 43
    OP_EQMORE    shift, and go to state 44
    OP_ASSIGN    shift, and go to state 45
    OP_PLUSEQ    shift, and go to state 46
    OP_MINUSEQ   shift, and go to state 47
    OP_MULEQ     shift, and go to state 48
    OP_DIVEQ     shift, and go to state 49
    OP_MODEQ     shift, and go to state 50
    OP_POINTER   shift, and go to state 51
    OP_PAR_L     shift, and go to state 52
    OP_SEMI      shift, and go to state 53
    OP_BRA_L     shift, and go to state 54

    KW_ENDWHILE  reduce using rule 49 (while_loop)
    OP_PLUS      [reduce using rule 59 (expr)]
    OP_MINUS     [reduce using rule 59 (expr)]
    OP_MUL       [reduce using rule 59 (expr)]
    OP_DIV       [reduce using rule 59 (expr)]
    OP_MOD       [reduce using rule 59 (expr)]
    OP_EQ        [reduce using rule 59 (expr)]
    OP_INEQ      [reduce using rule 59 (expr)]
    OP_LESS      [reduce using rule 59 (expr)]
    OP_EQLESS    [reduce using rule 59 (expr)]
    OP_MORE      [reduce using rule 59 (expr)]
    OP_EQMORE    [reduce using rule 59 (expr)]
    OP_ASSIGN    [reduce using rule 59 (expr)]
    OP_PLUSEQ    [reduce using rule 59 (expr)]
    OP_MINUSEQ   [reduce using rule 59 (expr)]
    OP_MULEQ     [reduce using rule 59 (expr)]
    OP_DIVEQ     [reduce using rule 59 (expr)]
    OP_MODEQ     [reduce using rule 59 (expr)]
    OP_SEMI      [reduce using rule 59 (expr)]
    $default     reduce using rule 59 (expr)

    local_declarations          go to state 87
    var_declarations            go to state 57
    conditions                  go to state 58
    while_loop                  go to state 59
    for_loop                    go to state 60
    variable_types              go to state 61
    comp_types_of_declarations  go to state 15
    expr                        go to state 62
    operators                   go to state 63


State 301

   31 local_declarations: . var_declarations
   32                   | . expr OP_SEMI
   33                   | . conditions KW_ENDIF OP_SEMI
   34                   | . while_loop KW_ENDWHILE OP_SEMI
   35                   | . for_loop KW_ENDFOR OP_SEMI
   36                   | . KW_BREAK OP_SEMI
   37                   | . KW_CONTINUE OP_SEMI
   38 var_declarations: . variable_types OP_ASSIGN expr OP_SEMI
   39                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN expr OP_SEMI
   40                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   41                 | . variable_types OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   42                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_MEAN types OP_SEMI
   43                 | . comp_types_of_declarations OP_MEAN types OP_SEMI
   44                 | . KW_CONST comp_types_of_declarations OP_ASSIGN data_types OP_MEAN types OP_SEMI
   45                 | . KW_CONST comp_types_of_declarations OP_ASSIGN operators data_types OP_MEAN types OP_SEMI
   46 conditions: . KW_IF OP_PAR_L expr OP_PAR_R OP_MEAN main_program
   47           | . KW_IF OP_PAR_L expr OP_PAR_R OP_MEAN comp_function_code
   48           | . conditions KW_ELSE OP_MEAN main_program
   49 while_loop: . KW_WHILE OP_PAR_L expr OP_PAR_R OP_MEAN main_program
   50           | . KW_WHILE OP_PAR_L expr OP_PAR_R OP_MEAN comp_function_code
   50           | KW_WHILE OP_PAR_L expr OP_PAR_R OP_MEAN comp_function_code .  [KW_ENDWHILE]
   51 for_loop: . KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_BRA_R OP_MEAN main_program
   52         | . KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_BRA_R OP_MEAN comp_function_code
   53         | . KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_MEAN expr OP_BRA_R OP_MEAN main_program
   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   56 comp_types_of_declarations: . variable_types
   57                           | . comp_types_of_declarations OP_COMA variable_types
   58                           | . comp_types_of_declarations OP_COMA variable_types OP_BRA_L legal_array_index OP_BRA_R
   59 expr: . %empty  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_SEMI, OP_COMA, OP_DOT]
   60     | . TK_STRING
   61     | . TK_INT
   62     | . TK_REAL
   63     | . KW_TRUE
   64     | . KW_FALSE
   65     | . variable_types OP_PAR_L OP_PAR_R
   66     | . variable_types OP_PAR_L expr OP_PAR_R
   67     | . operators expr
   68     | . variable_types
   69     | . variable_types OP_BRA_L legal_array_index OP_BRA_R
   70     | . variable_types OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | . variable_types OP_BRA_L variable_types OP_BRA_R
   72     | . OP_POINTER expr
   73     | . expr OP_COMA expr
   74     | . expr OP_DOT expr
   75     | . expr OP_PLUS expr
   76     | . expr OP_MINUS expr
   77     | . expr OP_MUL expr
   78     | . expr OP_DIV expr
   79     | . expr OP_MOD expr
   80     | . expr OP_EQ expr
   81     | . expr OP_INEQ expr
   82     | . expr OP_LESS expr
   83     | . expr OP_EQLESS expr
   84     | . expr OP_MORE expr
   85     | . expr OP_EQMORE expr
   86     | . expr OP_ASSIGN expr
   87     | . expr KW_AND expr
   88     | . expr KW_OR expr
   89     | . expr KW_NOT expr
   90     | . expr OP_PLUSEQ expr
   91     | . expr OP_MINUSEQ expr
   92     | . expr OP_MULEQ expr
   93     | . expr OP_DIVEQ expr
   94     | . expr OP_MODEQ expr
   95     | . OP_PAR_L expr OP_PAR_R
   96     | . OP_BRA_L expr OP_BRA_L
   97     | . OP_SEMI
  108 operators: . OP_PLUS
  109          | . OP_MINUS
  110          | . OP_MUL
  111          | . OP_DIV
  112          | . OP_MOD
  113          | . OP_POWER
  114          | . OP_EQ
  115          | . OP_INEQ
  116          | . OP_LESS
  117          | . OP_EQLESS
  118          | . OP_MORE
  119          | . OP_EQMORE
  120          | . OP_ASSIGN
  121          | . OP_PLUSEQ
  122          | . OP_MINUSEQ
  123          | . OP_MULEQ
  124          | . OP_DIVEQ
  125          | . OP_MODEQ
  148 comp_function_code: comp_function_code . local_declarations

    TK_STRING    shift, and go to state 23
    TK_IDENT     shift, and go to state 1
    TK_INT       shift, and go to state 24
    TK_REAL      shift, and go to state 25
    KW_HASH      shift, and go to state 2
    KW_IF        shift, and go to state 26
    KW_FALSE     shift, and go to state 27
    KW_FOR       shift, and go to state 28
    KW_BREAK     shift, and go to state 29
    KW_CONST     shift, and go to state 4
    KW_CONTINUE  shift, and go to state 30
    KW_WHILE     shift, and go to state 31
    KW_TRUE      shift, and go to state 32
    OP_PLUS      shift, and go to state 33
    OP_MINUS     shift, and go to state 34
    OP_MUL       shift, and go to state 35
    OP_DIV       shift, and go to state 36
    OP_MOD       shift, and go to state 37
    OP_POWER     shift, and go to state 38
    OP_EQ        shift, and go to state 39
    OP_INEQ      shift, and go to state 40
    OP_LESS      shift, and go to state 41
    OP_EQLESS    shift, and go to state 42
    OP_MORE      shift, and go to state 43
    OP_EQMORE    shift, and go to state 44
    OP_ASSIGN    shift, and go to state 45
    OP_PLUSEQ    shift, and go to state 46
    OP_MINUSEQ   shift, and go to state 47
    OP_MULEQ     shift, and go to state 48
    OP_DIVEQ     shift, and go to state 49
    OP_MODEQ     shift, and go to state 50
    OP_POINTER   shift, and go to state 51
    OP_PAR_L     shift, and go to state 52
    OP_SEMI      shift, and go to state 53
    OP_BRA_L     shift, and go to state 54

    KW_ENDWHILE  reduce using rule 50 (while_loop)
    OP_PLUS      [reduce using rule 59 (expr)]
    OP_MINUS     [reduce using rule 59 (expr)]
    OP_MUL       [reduce using rule 59 (expr)]
    OP_DIV       [reduce using rule 59 (expr)]
    OP_MOD       [reduce using rule 59 (expr)]
    OP_EQ        [reduce using rule 59 (expr)]
    OP_INEQ      [reduce using rule 59 (expr)]
    OP_LESS      [reduce using rule 59 (expr)]
    OP_EQLESS    [reduce using rule 59 (expr)]
    OP_MORE      [reduce using rule 59 (expr)]
    OP_EQMORE    [reduce using rule 59 (expr)]
    OP_ASSIGN    [reduce using rule 59 (expr)]
    OP_PLUSEQ    [reduce using rule 59 (expr)]
    OP_MINUSEQ   [reduce using rule 59 (expr)]
    OP_MULEQ     [reduce using rule 59 (expr)]
    OP_DIVEQ     [reduce using rule 59 (expr)]
    OP_MODEQ     [reduce using rule 59 (expr)]
    OP_SEMI      [reduce using rule 59 (expr)]
    $default     reduce using rule 59 (expr)

    local_declarations          go to state 261
    var_declarations            go to state 57
    conditions                  go to state 58
    while_loop                  go to state 59
    for_loop                    go to state 60
    variable_types              go to state 61
    comp_types_of_declarations  go to state 15
    expr                        go to state 62
    operators                   go to state 63


State 302

   12 global_declarations: func_declaration function_code KW_RETURN expr OP_SEMI KW_ENDDEF OP_SEMI .

    $default  reduce using rule 12 (global_declarations)


State 303

   41 var_declarations: variable_types OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI .

    $default  reduce using rule 41 (var_declarations)


State 304

   40 var_declarations: variable_types OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN variable_types OP_BRA_L . legal_array_index OP_BRA_R OP_SEMI
   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   69 expr: variable_types OP_BRA_L . legal_array_index OP_BRA_R
   70     | variable_types OP_BRA_L . KW_HASH legal_array_index OP_BRA_R
   71     | variable_types OP_BRA_L . variable_types OP_BRA_R
   98 legal_array_index: . TK_INT
   99                  | . TK_IDENT

    TK_IDENT  shift, and go to state 166
    TK_INT    shift, and go to state 126
    KW_HASH   shift, and go to state 167

    variable_types     go to state 168
    legal_array_index  go to state 327


State 305

   39 var_declarations: variable_types OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN expr OP_SEMI .

    $default  reduce using rule 39 (var_declarations)


State 306

   42 var_declarations: variable_types OP_BRA_L legal_array_index OP_BRA_R OP_MEAN types OP_SEMI .

    $default  reduce using rule 42 (var_declarations)


State 307

   24 func_parameters: TK_IDENT OP_BRA_L OP_BRA_R OP_MEAN types .

    $default  reduce using rule 24 (func_parameters)


State 308

   19 func_declaration: KW_DEF TK_IDENT OP_PAR_L OP_PAR_R OP_MINUS OP_MORE types OP_MEAN .

    $default  reduce using rule 19 (func_declaration)


State 309

   17 func_declaration: KW_DEF TK_IDENT OP_PAR_L func_parameters OP_PAR_R OP_MINUS OP_MORE KW_VOID . OP_MEAN

    OP_MEAN  shift, and go to state 328


State 310

   16 func_declaration: KW_DEF TK_IDENT OP_PAR_L func_parameters OP_PAR_R OP_MINUS OP_MORE types . OP_MEAN

    OP_MEAN  shift, and go to state 329


State 311

   25 func_parameters: func_parameters OP_COMA TK_IDENT OP_BRA_L OP_BRA_R . OP_MEAN types

    OP_MEAN  shift, and go to state 330


State 312

   23 func_parameters: func_parameters OP_COMA TK_IDENT OP_MEAN types .

    $default  reduce using rule 23 (func_parameters)


State 313

   45 var_declarations: KW_CONST comp_types_of_declarations OP_ASSIGN operators data_types OP_MEAN types OP_SEMI .

    $default  reduce using rule 45 (var_declarations)


State 314

   98 legal_array_index: . TK_INT
   99                  | . TK_IDENT
  138 comp_var_declarations: KW_HASH TK_IDENT OP_ASSIGN TK_IDENT OP_BRA_L . legal_array_index OP_BRA_R OP_SEMI

    TK_IDENT  shift, and go to state 125
    TK_INT    shift, and go to state 126

    legal_array_index  go to state 331


State 315

  135 comp_var_declarations: KW_HASH TK_IDENT OP_ASSIGN expr OP_SEMI .

    $default  reduce using rule 135 (comp_var_declarations)


State 316

  136 comp_var_declarations: KW_HASH TK_IDENT OP_BRA_L legal_array_index OP_BRA_R . OP_ASSIGN expr OP_SEMI
  137                      | KW_HASH TK_IDENT OP_BRA_L legal_array_index OP_BRA_R . OP_ASSIGN KW_HASH TK_IDENT OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
  139                      | KW_HASH TK_IDENT OP_BRA_L legal_array_index OP_BRA_R . OP_MEAN types OP_SEMI

    OP_ASSIGN  shift, and go to state 332
    OP_MEAN    shift, and go to state 333


State 317

  151 comp_func_declaration: KW_DEF TK_IDENT OP_PAR_L OP_PAR_R OP_MINUS . OP_MORE types OP_MEAN

    OP_MORE  shift, and go to state 334


State 318

  152 comp_func_declaration: KW_DEF TK_IDENT OP_PAR_L OP_PAR_R OP_MEAN .

    $default  reduce using rule 152 (comp_func_declaration)


State 319

  149 comp_func_declaration: KW_DEF TK_IDENT OP_PAR_L func_parameters OP_PAR_R . OP_MINUS OP_MORE types OP_MEAN
  150                      | KW_DEF TK_IDENT OP_PAR_L func_parameters OP_PAR_R . OP_MEAN

    OP_MINUS  shift, and go to state 335
    OP_MEAN   shift, and go to state 336


State 320

  103 types: . KW_STR
  104      | . KW_INTEGER
  105      | . KW_SCALAR
  106      | . KW_BOOLEAN
  107      | . TK_IDENT
  141 comp_var_declarations: KW_CONST comp_initialise_types_of_declarations OP_ASSIGN data_types OP_MEAN . types OP_SEMI

    TK_IDENT    shift, and go to state 129
    KW_INTEGER  shift, and go to state 130
    KW_SCALAR   shift, and go to state 131
    KW_STR      shift, and go to state 132
    KW_BOOLEAN  shift, and go to state 133

    types  go to state 337


State 321

  142 comp_var_declarations: KW_CONST comp_initialise_types_of_declarations OP_ASSIGN operators data_types . OP_MEAN types OP_SEMI

    OP_MEAN  shift, and go to state 338


State 322

   98 legal_array_index: . TK_INT
   99                  | . TK_IDENT
  145 comp_initialise_types_of_declarations: comp_initialise_types_of_declarations OP_COMA KW_HASH TK_IDENT OP_BRA_L . legal_array_index OP_BRA_R

    TK_IDENT  shift, and go to state 125
    TK_INT    shift, and go to state 126

    legal_array_index  go to state 339


State 323

  132 comp_local_declarations: comp_func_declaration KW_RETURN expr OP_SEMI KW_ENDDEF . OP_SEMI

    OP_SEMI  shift, and go to state 340


State 324

  130 comp_local_declarations: comp_func_declaration comp_function_code KW_RETURN OP_SEMI KW_ENDDEF . OP_SEMI

    OP_SEMI  shift, and go to state 341


State 325

  131 comp_local_declarations: comp_func_declaration comp_function_code KW_RETURN expr OP_SEMI . KW_ENDDEF OP_SEMI

    KW_ENDDEF  shift, and go to state 342


State 326

   51 for_loop: KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr . OP_BRA_R OP_MEAN main_program
   52         | KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr . OP_BRA_R OP_MEAN comp_function_code
   53         | KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr . OP_MEAN expr OP_BRA_R OP_MEAN main_program
   73 expr: expr . OP_COMA expr
   74     | expr . OP_DOT expr
   75     | expr . OP_PLUS expr
   76     | expr . OP_MINUS expr
   77     | expr . OP_MUL expr
   78     | expr . OP_DIV expr
   79     | expr . OP_MOD expr
   80     | expr . OP_EQ expr
   81     | expr . OP_INEQ expr
   82     | expr . OP_LESS expr
   83     | expr . OP_EQLESS expr
   84     | expr . OP_MORE expr
   85     | expr . OP_EQMORE expr
   86     | expr . OP_ASSIGN expr
   87     | expr . KW_AND expr
   88     | expr . KW_OR expr
   89     | expr . KW_NOT expr
   90     | expr . OP_PLUSEQ expr
   91     | expr . OP_MINUSEQ expr
   92     | expr . OP_MULEQ expr
   93     | expr . OP_DIVEQ expr
   94     | expr . OP_MODEQ expr

    KW_NOT      shift, and go to state 94
    KW_AND      shift, and go to state 95
    KW_OR       shift, and go to state 96
    OP_PLUS     shift, and go to state 97
    OP_MINUS    shift, and go to state 98
    OP_MUL      shift, and go to state 99
    OP_DIV      shift, and go to state 100
    OP_MOD      shift, and go to state 101
    OP_EQ       shift, and go to state 102
    OP_INEQ     shift, and go to state 103
    OP_LESS     shift, and go to state 104
    OP_EQLESS   shift, and go to state 105
    OP_MORE     shift, and go to state 106
    OP_EQMORE   shift, and go to state 107
    OP_ASSIGN   shift, and go to state 108
    OP_PLUSEQ   shift, and go to state 109
    OP_MINUSEQ  shift, and go to state 110
    OP_MULEQ    shift, and go to state 111
    OP_DIVEQ    shift, and go to state 112
    OP_MODEQ    shift, and go to state 113
    OP_COMA     shift, and go to state 115
    OP_BRA_R    shift, and go to state 343
    OP_DOT      shift, and go to state 116
    OP_MEAN     shift, and go to state 344


State 327

   40 var_declarations: variable_types OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN variable_types OP_BRA_L legal_array_index . OP_BRA_R OP_SEMI
   69 expr: variable_types OP_BRA_L legal_array_index . OP_BRA_R

    OP_BRA_R  shift, and go to state 345


State 328

   17 func_declaration: KW_DEF TK_IDENT OP_PAR_L func_parameters OP_PAR_R OP_MINUS OP_MORE KW_VOID OP_MEAN .

    $default  reduce using rule 17 (func_declaration)


State 329

   16 func_declaration: KW_DEF TK_IDENT OP_PAR_L func_parameters OP_PAR_R OP_MINUS OP_MORE types OP_MEAN .

    $default  reduce using rule 16 (func_declaration)


State 330

   25 func_parameters: func_parameters OP_COMA TK_IDENT OP_BRA_L OP_BRA_R OP_MEAN . types
  103 types: . KW_STR
  104      | . KW_INTEGER
  105      | . KW_SCALAR
  106      | . KW_BOOLEAN
  107      | . TK_IDENT

    TK_IDENT    shift, and go to state 129
    KW_INTEGER  shift, and go to state 130
    KW_SCALAR   shift, and go to state 131
    KW_STR      shift, and go to state 132
    KW_BOOLEAN  shift, and go to state 133

    types  go to state 346


State 331

  138 comp_var_declarations: KW_HASH TK_IDENT OP_ASSIGN TK_IDENT OP_BRA_L legal_array_index . OP_BRA_R OP_SEMI

    OP_BRA_R  shift, and go to state 347


State 332

   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   59 expr: . %empty  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_SEMI, OP_COMA, OP_DOT]
   60     | . TK_STRING
   61     | . TK_INT
   62     | . TK_REAL
   63     | . KW_TRUE
   64     | . KW_FALSE
   65     | . variable_types OP_PAR_L OP_PAR_R
   66     | . variable_types OP_PAR_L expr OP_PAR_R
   67     | . operators expr
   68     | . variable_types
   69     | . variable_types OP_BRA_L legal_array_index OP_BRA_R
   70     | . variable_types OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | . variable_types OP_BRA_L variable_types OP_BRA_R
   72     | . OP_POINTER expr
   73     | . expr OP_COMA expr
   74     | . expr OP_DOT expr
   75     | . expr OP_PLUS expr
   76     | . expr OP_MINUS expr
   77     | . expr OP_MUL expr
   78     | . expr OP_DIV expr
   79     | . expr OP_MOD expr
   80     | . expr OP_EQ expr
   81     | . expr OP_INEQ expr
   82     | . expr OP_LESS expr
   83     | . expr OP_EQLESS expr
   84     | . expr OP_MORE expr
   85     | . expr OP_EQMORE expr
   86     | . expr OP_ASSIGN expr
   87     | . expr KW_AND expr
   88     | . expr KW_OR expr
   89     | . expr KW_NOT expr
   90     | . expr OP_PLUSEQ expr
   91     | . expr OP_MINUSEQ expr
   92     | . expr OP_MULEQ expr
   93     | . expr OP_DIVEQ expr
   94     | . expr OP_MODEQ expr
   95     | . OP_PAR_L expr OP_PAR_R
   96     | . OP_BRA_L expr OP_BRA_L
   97     | . OP_SEMI
  108 operators: . OP_PLUS
  109          | . OP_MINUS
  110          | . OP_MUL
  111          | . OP_DIV
  112          | . OP_MOD
  113          | . OP_POWER
  114          | . OP_EQ
  115          | . OP_INEQ
  116          | . OP_LESS
  117          | . OP_EQLESS
  118          | . OP_MORE
  119          | . OP_EQMORE
  120          | . OP_ASSIGN
  121          | . OP_PLUSEQ
  122          | . OP_MINUSEQ
  123          | . OP_MULEQ
  124          | . OP_DIVEQ
  125          | . OP_MODEQ
  136 comp_var_declarations: KW_HASH TK_IDENT OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN . expr OP_SEMI
  137                      | KW_HASH TK_IDENT OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN . KW_HASH TK_IDENT OP_BRA_L legal_array_index OP_BRA_R OP_SEMI

    TK_STRING   shift, and go to state 23
    TK_IDENT    shift, and go to state 1
    TK_INT      shift, and go to state 24
    TK_REAL     shift, and go to state 25
    KW_HASH     shift, and go to state 348
    KW_FALSE    shift, and go to state 27
    KW_TRUE     shift, and go to state 32
    OP_PLUS     shift, and go to state 33
    OP_MINUS    shift, and go to state 34
    OP_MUL      shift, and go to state 35
    OP_DIV      shift, and go to state 36
    OP_MOD      shift, and go to state 37
    OP_POWER    shift, and go to state 38
    OP_EQ       shift, and go to state 39
    OP_INEQ     shift, and go to state 40
    OP_LESS     shift, and go to state 41
    OP_EQLESS   shift, and go to state 42
    OP_MORE     shift, and go to state 43
    OP_EQMORE   shift, and go to state 44
    OP_ASSIGN   shift, and go to state 45
    OP_PLUSEQ   shift, and go to state 46
    OP_MINUSEQ  shift, and go to state 47
    OP_MULEQ    shift, and go to state 48
    OP_DIVEQ    shift, and go to state 49
    OP_MODEQ    shift, and go to state 50
    OP_POINTER  shift, and go to state 51
    OP_PAR_L    shift, and go to state 52
    OP_SEMI     shift, and go to state 53
    OP_BRA_L    shift, and go to state 54

    OP_PLUS     [reduce using rule 59 (expr)]
    OP_MINUS    [reduce using rule 59 (expr)]
    OP_MUL      [reduce using rule 59 (expr)]
    OP_DIV      [reduce using rule 59 (expr)]
    OP_MOD      [reduce using rule 59 (expr)]
    OP_EQ       [reduce using rule 59 (expr)]
    OP_INEQ     [reduce using rule 59 (expr)]
    OP_LESS     [reduce using rule 59 (expr)]
    OP_EQLESS   [reduce using rule 59 (expr)]
    OP_MORE     [reduce using rule 59 (expr)]
    OP_EQMORE   [reduce using rule 59 (expr)]
    OP_ASSIGN   [reduce using rule 59 (expr)]
    OP_PLUSEQ   [reduce using rule 59 (expr)]
    OP_MINUSEQ  [reduce using rule 59 (expr)]
    OP_MULEQ    [reduce using rule 59 (expr)]
    OP_DIVEQ    [reduce using rule 59 (expr)]
    OP_MODEQ    [reduce using rule 59 (expr)]
    OP_SEMI     [reduce using rule 59 (expr)]
    $default    reduce using rule 59 (expr)

    variable_types  go to state 82
    expr            go to state 349
    operators       go to state 63


State 333

  103 types: . KW_STR
  104      | . KW_INTEGER
  105      | . KW_SCALAR
  106      | . KW_BOOLEAN
  107      | . TK_IDENT
  139 comp_var_declarations: KW_HASH TK_IDENT OP_BRA_L legal_array_index OP_BRA_R OP_MEAN . types OP_SEMI

    TK_IDENT    shift, and go to state 129
    KW_INTEGER  shift, and go to state 130
    KW_SCALAR   shift, and go to state 131
    KW_STR      shift, and go to state 132
    KW_BOOLEAN  shift, and go to state 133

    types  go to state 350


State 334

  103 types: . KW_STR
  104      | . KW_INTEGER
  105      | . KW_SCALAR
  106      | . KW_BOOLEAN
  107      | . TK_IDENT
  151 comp_func_declaration: KW_DEF TK_IDENT OP_PAR_L OP_PAR_R OP_MINUS OP_MORE . types OP_MEAN

    TK_IDENT    shift, and go to state 129
    KW_INTEGER  shift, and go to state 130
    KW_SCALAR   shift, and go to state 131
    KW_STR      shift, and go to state 132
    KW_BOOLEAN  shift, and go to state 133

    types  go to state 351


State 335

  149 comp_func_declaration: KW_DEF TK_IDENT OP_PAR_L func_parameters OP_PAR_R OP_MINUS . OP_MORE types OP_MEAN

    OP_MORE  shift, and go to state 352


State 336

  150 comp_func_declaration: KW_DEF TK_IDENT OP_PAR_L func_parameters OP_PAR_R OP_MEAN .

    $default  reduce using rule 150 (comp_func_declaration)


State 337

  141 comp_var_declarations: KW_CONST comp_initialise_types_of_declarations OP_ASSIGN data_types OP_MEAN types . OP_SEMI

    OP_SEMI  shift, and go to state 353


State 338

  103 types: . KW_STR
  104      | . KW_INTEGER
  105      | . KW_SCALAR
  106      | . KW_BOOLEAN
  107      | . TK_IDENT
  142 comp_var_declarations: KW_CONST comp_initialise_types_of_declarations OP_ASSIGN operators data_types OP_MEAN . types OP_SEMI

    TK_IDENT    shift, and go to state 129
    KW_INTEGER  shift, and go to state 130
    KW_SCALAR   shift, and go to state 131
    KW_STR      shift, and go to state 132
    KW_BOOLEAN  shift, and go to state 133

    types  go to state 354


State 339

  145 comp_initialise_types_of_declarations: comp_initialise_types_of_declarations OP_COMA KW_HASH TK_IDENT OP_BRA_L legal_array_index . OP_BRA_R

    OP_BRA_R  shift, and go to state 355


State 340

  132 comp_local_declarations: comp_func_declaration KW_RETURN expr OP_SEMI KW_ENDDEF OP_SEMI .

    $default  reduce using rule 132 (comp_local_declarations)


State 341

  130 comp_local_declarations: comp_func_declaration comp_function_code KW_RETURN OP_SEMI KW_ENDDEF OP_SEMI .

    $default  reduce using rule 130 (comp_local_declarations)


State 342

  131 comp_local_declarations: comp_func_declaration comp_function_code KW_RETURN expr OP_SEMI KW_ENDDEF . OP_SEMI

    OP_SEMI  shift, and go to state 356


State 343

   51 for_loop: KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_BRA_R . OP_MEAN main_program
   52         | KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_BRA_R . OP_MEAN comp_function_code

    OP_MEAN  shift, and go to state 357


State 344

   53 for_loop: KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_MEAN . expr OP_BRA_R OP_MEAN main_program
   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   59 expr: . %empty  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_COMA, OP_BRA_R, OP_DOT]
   60     | . TK_STRING
   61     | . TK_INT
   62     | . TK_REAL
   63     | . KW_TRUE
   64     | . KW_FALSE
   65     | . variable_types OP_PAR_L OP_PAR_R
   66     | . variable_types OP_PAR_L expr OP_PAR_R
   67     | . operators expr
   68     | . variable_types
   69     | . variable_types OP_BRA_L legal_array_index OP_BRA_R
   70     | . variable_types OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | . variable_types OP_BRA_L variable_types OP_BRA_R
   72     | . OP_POINTER expr
   73     | . expr OP_COMA expr
   74     | . expr OP_DOT expr
   75     | . expr OP_PLUS expr
   76     | . expr OP_MINUS expr
   77     | . expr OP_MUL expr
   78     | . expr OP_DIV expr
   79     | . expr OP_MOD expr
   80     | . expr OP_EQ expr
   81     | . expr OP_INEQ expr
   82     | . expr OP_LESS expr
   83     | . expr OP_EQLESS expr
   84     | . expr OP_MORE expr
   85     | . expr OP_EQMORE expr
   86     | . expr OP_ASSIGN expr
   87     | . expr KW_AND expr
   88     | . expr KW_OR expr
   89     | . expr KW_NOT expr
   90     | . expr OP_PLUSEQ expr
   91     | . expr OP_MINUSEQ expr
   92     | . expr OP_MULEQ expr
   93     | . expr OP_DIVEQ expr
   94     | . expr OP_MODEQ expr
   95     | . OP_PAR_L expr OP_PAR_R
   96     | . OP_BRA_L expr OP_BRA_L
   97     | . OP_SEMI
  108 operators: . OP_PLUS
  109          | . OP_MINUS
  110          | . OP_MUL
  111          | . OP_DIV
  112          | . OP_MOD
  113          | . OP_POWER
  114          | . OP_EQ
  115          | . OP_INEQ
  116          | . OP_LESS
  117          | . OP_EQLESS
  118          | . OP_MORE
  119          | . OP_EQMORE
  120          | . OP_ASSIGN
  121          | . OP_PLUSEQ
  122          | . OP_MINUSEQ
  123          | . OP_MULEQ
  124          | . OP_DIVEQ
  125          | . OP_MODEQ

    TK_STRING   shift, and go to state 23
    TK_IDENT    shift, and go to state 1
    TK_INT      shift, and go to state 24
    TK_REAL     shift, and go to state 25
    KW_HASH     shift, and go to state 2
    KW_FALSE    shift, and go to state 27
    KW_TRUE     shift, and go to state 32
    OP_PLUS     shift, and go to state 33
    OP_MINUS    shift, and go to state 34
    OP_MUL      shift, and go to state 35
    OP_DIV      shift, and go to state 36
    OP_MOD      shift, and go to state 37
    OP_POWER    shift, and go to state 38
    OP_EQ       shift, and go to state 39
    OP_INEQ     shift, and go to state 40
    OP_LESS     shift, and go to state 41
    OP_EQLESS   shift, and go to state 42
    OP_MORE     shift, and go to state 43
    OP_EQMORE   shift, and go to state 44
    OP_ASSIGN   shift, and go to state 45
    OP_PLUSEQ   shift, and go to state 46
    OP_MINUSEQ  shift, and go to state 47
    OP_MULEQ    shift, and go to state 48
    OP_DIVEQ    shift, and go to state 49
    OP_MODEQ    shift, and go to state 50
    OP_POINTER  shift, and go to state 51
    OP_PAR_L    shift, and go to state 52
    OP_SEMI     shift, and go to state 53
    OP_BRA_L    shift, and go to state 54

    OP_PLUS     [reduce using rule 59 (expr)]
    OP_MINUS    [reduce using rule 59 (expr)]
    OP_MUL      [reduce using rule 59 (expr)]
    OP_DIV      [reduce using rule 59 (expr)]
    OP_MOD      [reduce using rule 59 (expr)]
    OP_EQ       [reduce using rule 59 (expr)]
    OP_INEQ     [reduce using rule 59 (expr)]
    OP_LESS     [reduce using rule 59 (expr)]
    OP_EQLESS   [reduce using rule 59 (expr)]
    OP_MORE     [reduce using rule 59 (expr)]
    OP_EQMORE   [reduce using rule 59 (expr)]
    OP_ASSIGN   [reduce using rule 59 (expr)]
    OP_PLUSEQ   [reduce using rule 59 (expr)]
    OP_MINUSEQ  [reduce using rule 59 (expr)]
    OP_MULEQ    [reduce using rule 59 (expr)]
    OP_DIVEQ    [reduce using rule 59 (expr)]
    OP_MODEQ    [reduce using rule 59 (expr)]
    $default    reduce using rule 59 (expr)

    variable_types  go to state 82
    expr            go to state 358
    operators       go to state 63


State 345

   40 var_declarations: variable_types OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R . OP_SEMI
   69 expr: variable_types OP_BRA_L legal_array_index OP_BRA_R .  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_SEMI, OP_COMA, OP_DOT]

    OP_SEMI  shift, and go to state 359

    OP_SEMI   [reduce using rule 69 (expr)]
    $default  reduce using rule 69 (expr)


State 346

   25 func_parameters: func_parameters OP_COMA TK_IDENT OP_BRA_L OP_BRA_R OP_MEAN types .

    $default  reduce using rule 25 (func_parameters)


State 347

  138 comp_var_declarations: KW_HASH TK_IDENT OP_ASSIGN TK_IDENT OP_BRA_L legal_array_index OP_BRA_R . OP_SEMI

    OP_SEMI  shift, and go to state 360


State 348

   55 variable_types: KW_HASH . TK_IDENT
  137 comp_var_declarations: KW_HASH TK_IDENT OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN KW_HASH . TK_IDENT OP_BRA_L legal_array_index OP_BRA_R OP_SEMI

    TK_IDENT  shift, and go to state 361


State 349

   73 expr: expr . OP_COMA expr
   74     | expr . OP_DOT expr
   75     | expr . OP_PLUS expr
   76     | expr . OP_MINUS expr
   77     | expr . OP_MUL expr
   78     | expr . OP_DIV expr
   79     | expr . OP_MOD expr
   80     | expr . OP_EQ expr
   81     | expr . OP_INEQ expr
   82     | expr . OP_LESS expr
   83     | expr . OP_EQLESS expr
   84     | expr . OP_MORE expr
   85     | expr . OP_EQMORE expr
   86     | expr . OP_ASSIGN expr
   87     | expr . KW_AND expr
   88     | expr . KW_OR expr
   89     | expr . KW_NOT expr
   90     | expr . OP_PLUSEQ expr
   91     | expr . OP_MINUSEQ expr
   92     | expr . OP_MULEQ expr
   93     | expr . OP_DIVEQ expr
   94     | expr . OP_MODEQ expr
  136 comp_var_declarations: KW_HASH TK_IDENT OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN expr . OP_SEMI

    KW_NOT      shift, and go to state 94
    KW_AND      shift, and go to state 95
    KW_OR       shift, and go to state 96
    OP_PLUS     shift, and go to state 97
    OP_MINUS    shift, and go to state 98
    OP_MUL      shift, and go to state 99
    OP_DIV      shift, and go to state 100
    OP_MOD      shift, and go to state 101
    OP_EQ       shift, and go to state 102
    OP_INEQ     shift, and go to state 103
    OP_LESS     shift, and go to state 104
    OP_EQLESS   shift, and go to state 105
    OP_MORE     shift, and go to state 106
    OP_EQMORE   shift, and go to state 107
    OP_ASSIGN   shift, and go to state 108
    OP_PLUSEQ   shift, and go to state 109
    OP_MINUSEQ  shift, and go to state 110
    OP_MULEQ    shift, and go to state 111
    OP_DIVEQ    shift, and go to state 112
    OP_MODEQ    shift, and go to state 113
    OP_SEMI     shift, and go to state 362
    OP_COMA     shift, and go to state 115
    OP_DOT      shift, and go to state 116


State 350

  139 comp_var_declarations: KW_HASH TK_IDENT OP_BRA_L legal_array_index OP_BRA_R OP_MEAN types . OP_SEMI

    OP_SEMI  shift, and go to state 363


State 351

  151 comp_func_declaration: KW_DEF TK_IDENT OP_PAR_L OP_PAR_R OP_MINUS OP_MORE types . OP_MEAN

    OP_MEAN  shift, and go to state 364


State 352

  103 types: . KW_STR
  104      | . KW_INTEGER
  105      | . KW_SCALAR
  106      | . KW_BOOLEAN
  107      | . TK_IDENT
  149 comp_func_declaration: KW_DEF TK_IDENT OP_PAR_L func_parameters OP_PAR_R OP_MINUS OP_MORE . types OP_MEAN

    TK_IDENT    shift, and go to state 129
    KW_INTEGER  shift, and go to state 130
    KW_SCALAR   shift, and go to state 131
    KW_STR      shift, and go to state 132
    KW_BOOLEAN  shift, and go to state 133

    types  go to state 365


State 353

  141 comp_var_declarations: KW_CONST comp_initialise_types_of_declarations OP_ASSIGN data_types OP_MEAN types OP_SEMI .

    $default  reduce using rule 141 (comp_var_declarations)


State 354

  142 comp_var_declarations: KW_CONST comp_initialise_types_of_declarations OP_ASSIGN operators data_types OP_MEAN types . OP_SEMI

    OP_SEMI  shift, and go to state 366


State 355

  145 comp_initialise_types_of_declarations: comp_initialise_types_of_declarations OP_COMA KW_HASH TK_IDENT OP_BRA_L legal_array_index OP_BRA_R .

    $default  reduce using rule 145 (comp_initialise_types_of_declarations)


State 356

  131 comp_local_declarations: comp_func_declaration comp_function_code KW_RETURN expr OP_SEMI KW_ENDDEF OP_SEMI .

    $default  reduce using rule 131 (comp_local_declarations)


State 357

   29 main_program: . local_declarations
   30             | . main_program local_declarations
   31 local_declarations: . var_declarations
   32                   | . expr OP_SEMI
   33                   | . conditions KW_ENDIF OP_SEMI
   34                   | . while_loop KW_ENDWHILE OP_SEMI
   35                   | . for_loop KW_ENDFOR OP_SEMI
   36                   | . KW_BREAK OP_SEMI
   37                   | . KW_CONTINUE OP_SEMI
   38 var_declarations: . variable_types OP_ASSIGN expr OP_SEMI
   39                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN expr OP_SEMI
   40                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   41                 | . variable_types OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   42                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_MEAN types OP_SEMI
   43                 | . comp_types_of_declarations OP_MEAN types OP_SEMI
   44                 | . KW_CONST comp_types_of_declarations OP_ASSIGN data_types OP_MEAN types OP_SEMI
   45                 | . KW_CONST comp_types_of_declarations OP_ASSIGN operators data_types OP_MEAN types OP_SEMI
   46 conditions: . KW_IF OP_PAR_L expr OP_PAR_R OP_MEAN main_program
   47           | . KW_IF OP_PAR_L expr OP_PAR_R OP_MEAN comp_function_code
   48           | . conditions KW_ELSE OP_MEAN main_program
   49 while_loop: . KW_WHILE OP_PAR_L expr OP_PAR_R OP_MEAN main_program
   50           | . KW_WHILE OP_PAR_L expr OP_PAR_R OP_MEAN comp_function_code
   51 for_loop: . KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_BRA_R OP_MEAN main_program
   51         | KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_BRA_R OP_MEAN . main_program
   52         | . KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_BRA_R OP_MEAN comp_function_code
   52         | KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_BRA_R OP_MEAN . comp_function_code
   53         | . KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_MEAN expr OP_BRA_R OP_MEAN main_program
   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   56 comp_types_of_declarations: . variable_types
   57                           | . comp_types_of_declarations OP_COMA variable_types
   58                           | . comp_types_of_declarations OP_COMA variable_types OP_BRA_L legal_array_index OP_BRA_R
   59 expr: . %empty  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_SEMI, OP_COMA, OP_DOT]
   60     | . TK_STRING
   61     | . TK_INT
   62     | . TK_REAL
   63     | . KW_TRUE
   64     | . KW_FALSE
   65     | . variable_types OP_PAR_L OP_PAR_R
   66     | . variable_types OP_PAR_L expr OP_PAR_R
   67     | . operators expr
   68     | . variable_types
   69     | . variable_types OP_BRA_L legal_array_index OP_BRA_R
   70     | . variable_types OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | . variable_types OP_BRA_L variable_types OP_BRA_R
   72     | . OP_POINTER expr
   73     | . expr OP_COMA expr
   74     | . expr OP_DOT expr
   75     | . expr OP_PLUS expr
   76     | . expr OP_MINUS expr
   77     | . expr OP_MUL expr
   78     | . expr OP_DIV expr
   79     | . expr OP_MOD expr
   80     | . expr OP_EQ expr
   81     | . expr OP_INEQ expr
   82     | . expr OP_LESS expr
   83     | . expr OP_EQLESS expr
   84     | . expr OP_MORE expr
   85     | . expr OP_EQMORE expr
   86     | . expr OP_ASSIGN expr
   87     | . expr KW_AND expr
   88     | . expr KW_OR expr
   89     | . expr KW_NOT expr
   90     | . expr OP_PLUSEQ expr
   91     | . expr OP_MINUSEQ expr
   92     | . expr OP_MULEQ expr
   93     | . expr OP_DIVEQ expr
   94     | . expr OP_MODEQ expr
   95     | . OP_PAR_L expr OP_PAR_R
   96     | . OP_BRA_L expr OP_BRA_L
   97     | . OP_SEMI
  108 operators: . OP_PLUS
  109          | . OP_MINUS
  110          | . OP_MUL
  111          | . OP_DIV
  112          | . OP_MOD
  113          | . OP_POWER
  114          | . OP_EQ
  115          | . OP_INEQ
  116          | . OP_LESS
  117          | . OP_EQLESS
  118          | . OP_MORE
  119          | . OP_EQMORE
  120          | . OP_ASSIGN
  121          | . OP_PLUSEQ
  122          | . OP_MINUSEQ
  123          | . OP_MULEQ
  124          | . OP_DIVEQ
  125          | . OP_MODEQ
  146 comp_function_code: . %empty  [TK_STRING, TK_IDENT, TK_INT, TK_REAL, KW_HASH, KW_IF, KW_FALSE, KW_FOR, KW_BREAK, KW_CONST, KW_CONTINUE, KW_ENDFOR, KW_NOT, KW_WHILE, KW_AND, KW_TRUE, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_POWER, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_POINTER, OP_PAR_L, OP_SEMI, OP_COMA, OP_BRA_L, OP_DOT]
  147                   | . local_declarations
  148                   | . comp_function_code local_declarations

    TK_STRING    shift, and go to state 23
    TK_IDENT     shift, and go to state 1
    TK_INT       shift, and go to state 24
    TK_REAL      shift, and go to state 25
    KW_HASH      shift, and go to state 2
    KW_IF        shift, and go to state 26
    KW_FALSE     shift, and go to state 27
    KW_FOR       shift, and go to state 28
    KW_BREAK     shift, and go to state 29
    KW_CONST     shift, and go to state 4
    KW_CONTINUE  shift, and go to state 30
    KW_WHILE     shift, and go to state 31
    KW_TRUE      shift, and go to state 32
    OP_PLUS      shift, and go to state 33
    OP_MINUS     shift, and go to state 34
    OP_MUL       shift, and go to state 35
    OP_DIV       shift, and go to state 36
    OP_MOD       shift, and go to state 37
    OP_POWER     shift, and go to state 38
    OP_EQ        shift, and go to state 39
    OP_INEQ      shift, and go to state 40
    OP_LESS      shift, and go to state 41
    OP_EQLESS    shift, and go to state 42
    OP_MORE      shift, and go to state 43
    OP_EQMORE    shift, and go to state 44
    OP_ASSIGN    shift, and go to state 45
    OP_PLUSEQ    shift, and go to state 46
    OP_MINUSEQ   shift, and go to state 47
    OP_MULEQ     shift, and go to state 48
    OP_DIVEQ     shift, and go to state 49
    OP_MODEQ     shift, and go to state 50
    OP_POINTER   shift, and go to state 51
    OP_PAR_L     shift, and go to state 52
    OP_SEMI      shift, and go to state 53
    OP_BRA_L     shift, and go to state 54

    TK_STRING    [reduce using rule 146 (comp_function_code)]
    TK_IDENT     [reduce using rule 146 (comp_function_code)]
    TK_INT       [reduce using rule 146 (comp_function_code)]
    TK_REAL      [reduce using rule 146 (comp_function_code)]
    KW_HASH      [reduce using rule 146 (comp_function_code)]
    KW_IF        [reduce using rule 146 (comp_function_code)]
    KW_FALSE     [reduce using rule 146 (comp_function_code)]
    KW_FOR       [reduce using rule 146 (comp_function_code)]
    KW_BREAK     [reduce using rule 146 (comp_function_code)]
    KW_CONST     [reduce using rule 146 (comp_function_code)]
    KW_CONTINUE  [reduce using rule 146 (comp_function_code)]
    KW_ENDFOR    reduce using rule 146 (comp_function_code)
    KW_NOT       reduce using rule 59 (expr)
    KW_NOT       [reduce using rule 146 (comp_function_code)]
    KW_WHILE     [reduce using rule 146 (comp_function_code)]
    KW_AND       reduce using rule 59 (expr)
    KW_AND       [reduce using rule 146 (comp_function_code)]
    KW_TRUE      [reduce using rule 146 (comp_function_code)]
    KW_OR        reduce using rule 59 (expr)
    KW_OR        [reduce using rule 146 (comp_function_code)]
    OP_PLUS      [reduce using rule 59 (expr)]
    OP_PLUS      [reduce using rule 146 (comp_function_code)]
    OP_MINUS     [reduce using rule 59 (expr)]
    OP_MINUS     [reduce using rule 146 (comp_function_code)]
    OP_MUL       [reduce using rule 59 (expr)]
    OP_MUL       [reduce using rule 146 (comp_function_code)]
    OP_DIV       [reduce using rule 59 (expr)]
    OP_DIV       [reduce using rule 146 (comp_function_code)]
    OP_MOD       [reduce using rule 59 (expr)]
    OP_MOD       [reduce using rule 146 (comp_function_code)]
    OP_POWER     [reduce using rule 146 (comp_function_code)]
    OP_EQ        [reduce using rule 59 (expr)]
    OP_EQ        [reduce using rule 146 (comp_function_code)]
    OP_INEQ      [reduce using rule 59 (expr)]
    OP_INEQ      [reduce using rule 146 (comp_function_code)]
    OP_LESS      [reduce using rule 59 (expr)]
    OP_LESS      [reduce using rule 146 (comp_function_code)]
    OP_EQLESS    [reduce using rule 59 (expr)]
    OP_EQLESS    [reduce using rule 146 (comp_function_code)]
    OP_MORE      [reduce using rule 59 (expr)]
    OP_MORE      [reduce using rule 146 (comp_function_code)]
    OP_EQMORE    [reduce using rule 59 (expr)]
    OP_EQMORE    [reduce using rule 146 (comp_function_code)]
    OP_ASSIGN    [reduce using rule 59 (expr)]
    OP_ASSIGN    [reduce using rule 146 (comp_function_code)]
    OP_PLUSEQ    [reduce using rule 59 (expr)]
    OP_PLUSEQ    [reduce using rule 146 (comp_function_code)]
    OP_MINUSEQ   [reduce using rule 59 (expr)]
    OP_MINUSEQ   [reduce using rule 146 (comp_function_code)]
    OP_MULEQ     [reduce using rule 59 (expr)]
    OP_MULEQ     [reduce using rule 146 (comp_function_code)]
    OP_DIVEQ     [reduce using rule 59 (expr)]
    OP_DIVEQ     [reduce using rule 146 (comp_function_code)]
    OP_MODEQ     [reduce using rule 59 (expr)]
    OP_MODEQ     [reduce using rule 146 (comp_function_code)]
    OP_POINTER   [reduce using rule 146 (comp_function_code)]
    OP_PAR_L     [reduce using rule 146 (comp_function_code)]
    OP_SEMI      [reduce using rule 59 (expr)]
    OP_SEMI      [reduce using rule 146 (comp_function_code)]
    OP_COMA      reduce using rule 59 (expr)
    OP_COMA      [reduce using rule 146 (comp_function_code)]
    OP_BRA_L     [reduce using rule 146 (comp_function_code)]
    OP_DOT       reduce using rule 59 (expr)
    OP_DOT       [reduce using rule 146 (comp_function_code)]
    $default     reduce using rule 59 (expr)

    main_program                go to state 367
    local_declarations          go to state 297
    var_declarations            go to state 57
    conditions                  go to state 58
    while_loop                  go to state 59
    for_loop                    go to state 60
    variable_types              go to state 61
    comp_types_of_declarations  go to state 15
    expr                        go to state 62
    operators                   go to state 63
    comp_function_code          go to state 368


State 358

   53 for_loop: KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_MEAN expr . OP_BRA_R OP_MEAN main_program
   73 expr: expr . OP_COMA expr
   74     | expr . OP_DOT expr
   75     | expr . OP_PLUS expr
   76     | expr . OP_MINUS expr
   77     | expr . OP_MUL expr
   78     | expr . OP_DIV expr
   79     | expr . OP_MOD expr
   80     | expr . OP_EQ expr
   81     | expr . OP_INEQ expr
   82     | expr . OP_LESS expr
   83     | expr . OP_EQLESS expr
   84     | expr . OP_MORE expr
   85     | expr . OP_EQMORE expr
   86     | expr . OP_ASSIGN expr
   87     | expr . KW_AND expr
   88     | expr . KW_OR expr
   89     | expr . KW_NOT expr
   90     | expr . OP_PLUSEQ expr
   91     | expr . OP_MINUSEQ expr
   92     | expr . OP_MULEQ expr
   93     | expr . OP_DIVEQ expr
   94     | expr . OP_MODEQ expr

    KW_NOT      shift, and go to state 94
    KW_AND      shift, and go to state 95
    KW_OR       shift, and go to state 96
    OP_PLUS     shift, and go to state 97
    OP_MINUS    shift, and go to state 98
    OP_MUL      shift, and go to state 99
    OP_DIV      shift, and go to state 100
    OP_MOD      shift, and go to state 101
    OP_EQ       shift, and go to state 102
    OP_INEQ     shift, and go to state 103
    OP_LESS     shift, and go to state 104
    OP_EQLESS   shift, and go to state 105
    OP_MORE     shift, and go to state 106
    OP_EQMORE   shift, and go to state 107
    OP_ASSIGN   shift, and go to state 108
    OP_PLUSEQ   shift, and go to state 109
    OP_MINUSEQ  shift, and go to state 110
    OP_MULEQ    shift, and go to state 111
    OP_DIVEQ    shift, and go to state 112
    OP_MODEQ    shift, and go to state 113
    OP_COMA     shift, and go to state 115
    OP_BRA_R    shift, and go to state 369
    OP_DOT      shift, and go to state 116


State 359

   40 var_declarations: variable_types OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI .

    $default  reduce using rule 40 (var_declarations)


State 360

  138 comp_var_declarations: KW_HASH TK_IDENT OP_ASSIGN TK_IDENT OP_BRA_L legal_array_index OP_BRA_R OP_SEMI .

    $default  reduce using rule 138 (comp_var_declarations)


State 361

   55 variable_types: KW_HASH TK_IDENT .  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_PAR_L, OP_SEMI, OP_COMA, OP_BRA_L, OP_DOT]
  137 comp_var_declarations: KW_HASH TK_IDENT OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN KW_HASH TK_IDENT . OP_BRA_L legal_array_index OP_BRA_R OP_SEMI

    OP_BRA_L  shift, and go to state 370

    OP_BRA_L  [reduce using rule 55 (variable_types)]
    $default  reduce using rule 55 (variable_types)


State 362

  136 comp_var_declarations: KW_HASH TK_IDENT OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN expr OP_SEMI .

    $default  reduce using rule 136 (comp_var_declarations)


State 363

  139 comp_var_declarations: KW_HASH TK_IDENT OP_BRA_L legal_array_index OP_BRA_R OP_MEAN types OP_SEMI .

    $default  reduce using rule 139 (comp_var_declarations)


State 364

  151 comp_func_declaration: KW_DEF TK_IDENT OP_PAR_L OP_PAR_R OP_MINUS OP_MORE types OP_MEAN .

    $default  reduce using rule 151 (comp_func_declaration)


State 365

  149 comp_func_declaration: KW_DEF TK_IDENT OP_PAR_L func_parameters OP_PAR_R OP_MINUS OP_MORE types . OP_MEAN

    OP_MEAN  shift, and go to state 371


State 366

  142 comp_var_declarations: KW_CONST comp_initialise_types_of_declarations OP_ASSIGN operators data_types OP_MEAN types OP_SEMI .

    $default  reduce using rule 142 (comp_var_declarations)


State 367

   30 main_program: main_program . local_declarations
   31 local_declarations: . var_declarations
   32                   | . expr OP_SEMI
   33                   | . conditions KW_ENDIF OP_SEMI
   34                   | . while_loop KW_ENDWHILE OP_SEMI
   35                   | . for_loop KW_ENDFOR OP_SEMI
   36                   | . KW_BREAK OP_SEMI
   37                   | . KW_CONTINUE OP_SEMI
   38 var_declarations: . variable_types OP_ASSIGN expr OP_SEMI
   39                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN expr OP_SEMI
   40                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   41                 | . variable_types OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   42                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_MEAN types OP_SEMI
   43                 | . comp_types_of_declarations OP_MEAN types OP_SEMI
   44                 | . KW_CONST comp_types_of_declarations OP_ASSIGN data_types OP_MEAN types OP_SEMI
   45                 | . KW_CONST comp_types_of_declarations OP_ASSIGN operators data_types OP_MEAN types OP_SEMI
   46 conditions: . KW_IF OP_PAR_L expr OP_PAR_R OP_MEAN main_program
   47           | . KW_IF OP_PAR_L expr OP_PAR_R OP_MEAN comp_function_code
   48           | . conditions KW_ELSE OP_MEAN main_program
   49 while_loop: . KW_WHILE OP_PAR_L expr OP_PAR_R OP_MEAN main_program
   50           | . KW_WHILE OP_PAR_L expr OP_PAR_R OP_MEAN comp_function_code
   51 for_loop: . KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_BRA_R OP_MEAN main_program
   51         | KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_BRA_R OP_MEAN main_program .  [KW_ENDFOR]
   52         | . KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_BRA_R OP_MEAN comp_function_code
   53         | . KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_MEAN expr OP_BRA_R OP_MEAN main_program
   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   56 comp_types_of_declarations: . variable_types
   57                           | . comp_types_of_declarations OP_COMA variable_types
   58                           | . comp_types_of_declarations OP_COMA variable_types OP_BRA_L legal_array_index OP_BRA_R
   59 expr: . %empty  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_SEMI, OP_COMA, OP_DOT]
   60     | . TK_STRING
   61     | . TK_INT
   62     | . TK_REAL
   63     | . KW_TRUE
   64     | . KW_FALSE
   65     | . variable_types OP_PAR_L OP_PAR_R
   66     | . variable_types OP_PAR_L expr OP_PAR_R
   67     | . operators expr
   68     | . variable_types
   69     | . variable_types OP_BRA_L legal_array_index OP_BRA_R
   70     | . variable_types OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | . variable_types OP_BRA_L variable_types OP_BRA_R
   72     | . OP_POINTER expr
   73     | . expr OP_COMA expr
   74     | . expr OP_DOT expr
   75     | . expr OP_PLUS expr
   76     | . expr OP_MINUS expr
   77     | . expr OP_MUL expr
   78     | . expr OP_DIV expr
   79     | . expr OP_MOD expr
   80     | . expr OP_EQ expr
   81     | . expr OP_INEQ expr
   82     | . expr OP_LESS expr
   83     | . expr OP_EQLESS expr
   84     | . expr OP_MORE expr
   85     | . expr OP_EQMORE expr
   86     | . expr OP_ASSIGN expr
   87     | . expr KW_AND expr
   88     | . expr KW_OR expr
   89     | . expr KW_NOT expr
   90     | . expr OP_PLUSEQ expr
   91     | . expr OP_MINUSEQ expr
   92     | . expr OP_MULEQ expr
   93     | . expr OP_DIVEQ expr
   94     | . expr OP_MODEQ expr
   95     | . OP_PAR_L expr OP_PAR_R
   96     | . OP_BRA_L expr OP_BRA_L
   97     | . OP_SEMI
  108 operators: . OP_PLUS
  109          | . OP_MINUS
  110          | . OP_MUL
  111          | . OP_DIV
  112          | . OP_MOD
  113          | . OP_POWER
  114          | . OP_EQ
  115          | . OP_INEQ
  116          | . OP_LESS
  117          | . OP_EQLESS
  118          | . OP_MORE
  119          | . OP_EQMORE
  120          | . OP_ASSIGN
  121          | . OP_PLUSEQ
  122          | . OP_MINUSEQ
  123          | . OP_MULEQ
  124          | . OP_DIVEQ
  125          | . OP_MODEQ

    TK_STRING    shift, and go to state 23
    TK_IDENT     shift, and go to state 1
    TK_INT       shift, and go to state 24
    TK_REAL      shift, and go to state 25
    KW_HASH      shift, and go to state 2
    KW_IF        shift, and go to state 26
    KW_FALSE     shift, and go to state 27
    KW_FOR       shift, and go to state 28
    KW_BREAK     shift, and go to state 29
    KW_CONST     shift, and go to state 4
    KW_CONTINUE  shift, and go to state 30
    KW_WHILE     shift, and go to state 31
    KW_TRUE      shift, and go to state 32
    OP_PLUS      shift, and go to state 33
    OP_MINUS     shift, and go to state 34
    OP_MUL       shift, and go to state 35
    OP_DIV       shift, and go to state 36
    OP_MOD       shift, and go to state 37
    OP_POWER     shift, and go to state 38
    OP_EQ        shift, and go to state 39
    OP_INEQ      shift, and go to state 40
    OP_LESS      shift, and go to state 41
    OP_EQLESS    shift, and go to state 42
    OP_MORE      shift, and go to state 43
    OP_EQMORE    shift, and go to state 44
    OP_ASSIGN    shift, and go to state 45
    OP_PLUSEQ    shift, and go to state 46
    OP_MINUSEQ   shift, and go to state 47
    OP_MULEQ     shift, and go to state 48
    OP_DIVEQ     shift, and go to state 49
    OP_MODEQ     shift, and go to state 50
    OP_POINTER   shift, and go to state 51
    OP_PAR_L     shift, and go to state 52
    OP_SEMI      shift, and go to state 53
    OP_BRA_L     shift, and go to state 54

    KW_ENDFOR   reduce using rule 51 (for_loop)
    OP_PLUS     [reduce using rule 59 (expr)]
    OP_MINUS    [reduce using rule 59 (expr)]
    OP_MUL      [reduce using rule 59 (expr)]
    OP_DIV      [reduce using rule 59 (expr)]
    OP_MOD      [reduce using rule 59 (expr)]
    OP_EQ       [reduce using rule 59 (expr)]
    OP_INEQ     [reduce using rule 59 (expr)]
    OP_LESS     [reduce using rule 59 (expr)]
    OP_EQLESS   [reduce using rule 59 (expr)]
    OP_MORE     [reduce using rule 59 (expr)]
    OP_EQMORE   [reduce using rule 59 (expr)]
    OP_ASSIGN   [reduce using rule 59 (expr)]
    OP_PLUSEQ   [reduce using rule 59 (expr)]
    OP_MINUSEQ  [reduce using rule 59 (expr)]
    OP_MULEQ    [reduce using rule 59 (expr)]
    OP_DIVEQ    [reduce using rule 59 (expr)]
    OP_MODEQ    [reduce using rule 59 (expr)]
    OP_SEMI     [reduce using rule 59 (expr)]
    $default    reduce using rule 59 (expr)

    local_declarations          go to state 87
    var_declarations            go to state 57
    conditions                  go to state 58
    while_loop                  go to state 59
    for_loop                    go to state 60
    variable_types              go to state 61
    comp_types_of_declarations  go to state 15
    expr                        go to state 62
    operators                   go to state 63


State 368

   31 local_declarations: . var_declarations
   32                   | . expr OP_SEMI
   33                   | . conditions KW_ENDIF OP_SEMI
   34                   | . while_loop KW_ENDWHILE OP_SEMI
   35                   | . for_loop KW_ENDFOR OP_SEMI
   36                   | . KW_BREAK OP_SEMI
   37                   | . KW_CONTINUE OP_SEMI
   38 var_declarations: . variable_types OP_ASSIGN expr OP_SEMI
   39                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN expr OP_SEMI
   40                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   41                 | . variable_types OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   42                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_MEAN types OP_SEMI
   43                 | . comp_types_of_declarations OP_MEAN types OP_SEMI
   44                 | . KW_CONST comp_types_of_declarations OP_ASSIGN data_types OP_MEAN types OP_SEMI
   45                 | . KW_CONST comp_types_of_declarations OP_ASSIGN operators data_types OP_MEAN types OP_SEMI
   46 conditions: . KW_IF OP_PAR_L expr OP_PAR_R OP_MEAN main_program
   47           | . KW_IF OP_PAR_L expr OP_PAR_R OP_MEAN comp_function_code
   48           | . conditions KW_ELSE OP_MEAN main_program
   49 while_loop: . KW_WHILE OP_PAR_L expr OP_PAR_R OP_MEAN main_program
   50           | . KW_WHILE OP_PAR_L expr OP_PAR_R OP_MEAN comp_function_code
   51 for_loop: . KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_BRA_R OP_MEAN main_program
   52         | . KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_BRA_R OP_MEAN comp_function_code
   52         | KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_BRA_R OP_MEAN comp_function_code .  [KW_ENDFOR]
   53         | . KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_MEAN expr OP_BRA_R OP_MEAN main_program
   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   56 comp_types_of_declarations: . variable_types
   57                           | . comp_types_of_declarations OP_COMA variable_types
   58                           | . comp_types_of_declarations OP_COMA variable_types OP_BRA_L legal_array_index OP_BRA_R
   59 expr: . %empty  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_SEMI, OP_COMA, OP_DOT]
   60     | . TK_STRING
   61     | . TK_INT
   62     | . TK_REAL
   63     | . KW_TRUE
   64     | . KW_FALSE
   65     | . variable_types OP_PAR_L OP_PAR_R
   66     | . variable_types OP_PAR_L expr OP_PAR_R
   67     | . operators expr
   68     | . variable_types
   69     | . variable_types OP_BRA_L legal_array_index OP_BRA_R
   70     | . variable_types OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | . variable_types OP_BRA_L variable_types OP_BRA_R
   72     | . OP_POINTER expr
   73     | . expr OP_COMA expr
   74     | . expr OP_DOT expr
   75     | . expr OP_PLUS expr
   76     | . expr OP_MINUS expr
   77     | . expr OP_MUL expr
   78     | . expr OP_DIV expr
   79     | . expr OP_MOD expr
   80     | . expr OP_EQ expr
   81     | . expr OP_INEQ expr
   82     | . expr OP_LESS expr
   83     | . expr OP_EQLESS expr
   84     | . expr OP_MORE expr
   85     | . expr OP_EQMORE expr
   86     | . expr OP_ASSIGN expr
   87     | . expr KW_AND expr
   88     | . expr KW_OR expr
   89     | . expr KW_NOT expr
   90     | . expr OP_PLUSEQ expr
   91     | . expr OP_MINUSEQ expr
   92     | . expr OP_MULEQ expr
   93     | . expr OP_DIVEQ expr
   94     | . expr OP_MODEQ expr
   95     | . OP_PAR_L expr OP_PAR_R
   96     | . OP_BRA_L expr OP_BRA_L
   97     | . OP_SEMI
  108 operators: . OP_PLUS
  109          | . OP_MINUS
  110          | . OP_MUL
  111          | . OP_DIV
  112          | . OP_MOD
  113          | . OP_POWER
  114          | . OP_EQ
  115          | . OP_INEQ
  116          | . OP_LESS
  117          | . OP_EQLESS
  118          | . OP_MORE
  119          | . OP_EQMORE
  120          | . OP_ASSIGN
  121          | . OP_PLUSEQ
  122          | . OP_MINUSEQ
  123          | . OP_MULEQ
  124          | . OP_DIVEQ
  125          | . OP_MODEQ
  148 comp_function_code: comp_function_code . local_declarations

    TK_STRING    shift, and go to state 23
    TK_IDENT     shift, and go to state 1
    TK_INT       shift, and go to state 24
    TK_REAL      shift, and go to state 25
    KW_HASH      shift, and go to state 2
    KW_IF        shift, and go to state 26
    KW_FALSE     shift, and go to state 27
    KW_FOR       shift, and go to state 28
    KW_BREAK     shift, and go to state 29
    KW_CONST     shift, and go to state 4
    KW_CONTINUE  shift, and go to state 30
    KW_WHILE     shift, and go to state 31
    KW_TRUE      shift, and go to state 32
    OP_PLUS      shift, and go to state 33
    OP_MINUS     shift, and go to state 34
    OP_MUL       shift, and go to state 35
    OP_DIV       shift, and go to state 36
    OP_MOD       shift, and go to state 37
    OP_POWER     shift, and go to state 38
    OP_EQ        shift, and go to state 39
    OP_INEQ      shift, and go to state 40
    OP_LESS      shift, and go to state 41
    OP_EQLESS    shift, and go to state 42
    OP_MORE      shift, and go to state 43
    OP_EQMORE    shift, and go to state 44
    OP_ASSIGN    shift, and go to state 45
    OP_PLUSEQ    shift, and go to state 46
    OP_MINUSEQ   shift, and go to state 47
    OP_MULEQ     shift, and go to state 48
    OP_DIVEQ     shift, and go to state 49
    OP_MODEQ     shift, and go to state 50
    OP_POINTER   shift, and go to state 51
    OP_PAR_L     shift, and go to state 52
    OP_SEMI      shift, and go to state 53
    OP_BRA_L     shift, and go to state 54

    KW_ENDFOR   reduce using rule 52 (for_loop)
    OP_PLUS     [reduce using rule 59 (expr)]
    OP_MINUS    [reduce using rule 59 (expr)]
    OP_MUL      [reduce using rule 59 (expr)]
    OP_DIV      [reduce using rule 59 (expr)]
    OP_MOD      [reduce using rule 59 (expr)]
    OP_EQ       [reduce using rule 59 (expr)]
    OP_INEQ     [reduce using rule 59 (expr)]
    OP_LESS     [reduce using rule 59 (expr)]
    OP_EQLESS   [reduce using rule 59 (expr)]
    OP_MORE     [reduce using rule 59 (expr)]
    OP_EQMORE   [reduce using rule 59 (expr)]
    OP_ASSIGN   [reduce using rule 59 (expr)]
    OP_PLUSEQ   [reduce using rule 59 (expr)]
    OP_MINUSEQ  [reduce using rule 59 (expr)]
    OP_MULEQ    [reduce using rule 59 (expr)]
    OP_DIVEQ    [reduce using rule 59 (expr)]
    OP_MODEQ    [reduce using rule 59 (expr)]
    OP_SEMI     [reduce using rule 59 (expr)]
    $default    reduce using rule 59 (expr)

    local_declarations          go to state 261
    var_declarations            go to state 57
    conditions                  go to state 58
    while_loop                  go to state 59
    for_loop                    go to state 60
    variable_types              go to state 61
    comp_types_of_declarations  go to state 15
    expr                        go to state 62
    operators                   go to state 63


State 369

   53 for_loop: KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_MEAN expr OP_BRA_R . OP_MEAN main_program

    OP_MEAN  shift, and go to state 372


State 370

   98 legal_array_index: . TK_INT
   99                  | . TK_IDENT
  137 comp_var_declarations: KW_HASH TK_IDENT OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN KW_HASH TK_IDENT OP_BRA_L . legal_array_index OP_BRA_R OP_SEMI

    TK_IDENT  shift, and go to state 125
    TK_INT    shift, and go to state 126

    legal_array_index  go to state 373


State 371

  149 comp_func_declaration: KW_DEF TK_IDENT OP_PAR_L func_parameters OP_PAR_R OP_MINUS OP_MORE types OP_MEAN .

    $default  reduce using rule 149 (comp_func_declaration)


State 372

   29 main_program: . local_declarations
   30             | . main_program local_declarations
   31 local_declarations: . var_declarations
   32                   | . expr OP_SEMI
   33                   | . conditions KW_ENDIF OP_SEMI
   34                   | . while_loop KW_ENDWHILE OP_SEMI
   35                   | . for_loop KW_ENDFOR OP_SEMI
   36                   | . KW_BREAK OP_SEMI
   37                   | . KW_CONTINUE OP_SEMI
   38 var_declarations: . variable_types OP_ASSIGN expr OP_SEMI
   39                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN expr OP_SEMI
   40                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   41                 | . variable_types OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   42                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_MEAN types OP_SEMI
   43                 | . comp_types_of_declarations OP_MEAN types OP_SEMI
   44                 | . KW_CONST comp_types_of_declarations OP_ASSIGN data_types OP_MEAN types OP_SEMI
   45                 | . KW_CONST comp_types_of_declarations OP_ASSIGN operators data_types OP_MEAN types OP_SEMI
   46 conditions: . KW_IF OP_PAR_L expr OP_PAR_R OP_MEAN main_program
   47           | . KW_IF OP_PAR_L expr OP_PAR_R OP_MEAN comp_function_code
   48           | . conditions KW_ELSE OP_MEAN main_program
   49 while_loop: . KW_WHILE OP_PAR_L expr OP_PAR_R OP_MEAN main_program
   50           | . KW_WHILE OP_PAR_L expr OP_PAR_R OP_MEAN comp_function_code
   51 for_loop: . KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_BRA_R OP_MEAN main_program
   52         | . KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_BRA_R OP_MEAN comp_function_code
   53         | . KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_MEAN expr OP_BRA_R OP_MEAN main_program
   53         | KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_MEAN expr OP_BRA_R OP_MEAN . main_program
   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   56 comp_types_of_declarations: . variable_types
   57                           | . comp_types_of_declarations OP_COMA variable_types
   58                           | . comp_types_of_declarations OP_COMA variable_types OP_BRA_L legal_array_index OP_BRA_R
   59 expr: . %empty  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_SEMI, OP_COMA, OP_DOT]
   60     | . TK_STRING
   61     | . TK_INT
   62     | . TK_REAL
   63     | . KW_TRUE
   64     | . KW_FALSE
   65     | . variable_types OP_PAR_L OP_PAR_R
   66     | . variable_types OP_PAR_L expr OP_PAR_R
   67     | . operators expr
   68     | . variable_types
   69     | . variable_types OP_BRA_L legal_array_index OP_BRA_R
   70     | . variable_types OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | . variable_types OP_BRA_L variable_types OP_BRA_R
   72     | . OP_POINTER expr
   73     | . expr OP_COMA expr
   74     | . expr OP_DOT expr
   75     | . expr OP_PLUS expr
   76     | . expr OP_MINUS expr
   77     | . expr OP_MUL expr
   78     | . expr OP_DIV expr
   79     | . expr OP_MOD expr
   80     | . expr OP_EQ expr
   81     | . expr OP_INEQ expr
   82     | . expr OP_LESS expr
   83     | . expr OP_EQLESS expr
   84     | . expr OP_MORE expr
   85     | . expr OP_EQMORE expr
   86     | . expr OP_ASSIGN expr
   87     | . expr KW_AND expr
   88     | . expr KW_OR expr
   89     | . expr KW_NOT expr
   90     | . expr OP_PLUSEQ expr
   91     | . expr OP_MINUSEQ expr
   92     | . expr OP_MULEQ expr
   93     | . expr OP_DIVEQ expr
   94     | . expr OP_MODEQ expr
   95     | . OP_PAR_L expr OP_PAR_R
   96     | . OP_BRA_L expr OP_BRA_L
   97     | . OP_SEMI
  108 operators: . OP_PLUS
  109          | . OP_MINUS
  110          | . OP_MUL
  111          | . OP_DIV
  112          | . OP_MOD
  113          | . OP_POWER
  114          | . OP_EQ
  115          | . OP_INEQ
  116          | . OP_LESS
  117          | . OP_EQLESS
  118          | . OP_MORE
  119          | . OP_EQMORE
  120          | . OP_ASSIGN
  121          | . OP_PLUSEQ
  122          | . OP_MINUSEQ
  123          | . OP_MULEQ
  124          | . OP_DIVEQ
  125          | . OP_MODEQ

    TK_STRING    shift, and go to state 23
    TK_IDENT     shift, and go to state 1
    TK_INT       shift, and go to state 24
    TK_REAL      shift, and go to state 25
    KW_HASH      shift, and go to state 2
    KW_IF        shift, and go to state 26
    KW_FALSE     shift, and go to state 27
    KW_FOR       shift, and go to state 28
    KW_BREAK     shift, and go to state 29
    KW_CONST     shift, and go to state 4
    KW_CONTINUE  shift, and go to state 30
    KW_WHILE     shift, and go to state 31
    KW_TRUE      shift, and go to state 32
    OP_PLUS      shift, and go to state 33
    OP_MINUS     shift, and go to state 34
    OP_MUL       shift, and go to state 35
    OP_DIV       shift, and go to state 36
    OP_MOD       shift, and go to state 37
    OP_POWER     shift, and go to state 38
    OP_EQ        shift, and go to state 39
    OP_INEQ      shift, and go to state 40
    OP_LESS      shift, and go to state 41
    OP_EQLESS    shift, and go to state 42
    OP_MORE      shift, and go to state 43
    OP_EQMORE    shift, and go to state 44
    OP_ASSIGN    shift, and go to state 45
    OP_PLUSEQ    shift, and go to state 46
    OP_MINUSEQ   shift, and go to state 47
    OP_MULEQ     shift, and go to state 48
    OP_DIVEQ     shift, and go to state 49
    OP_MODEQ     shift, and go to state 50
    OP_POINTER   shift, and go to state 51
    OP_PAR_L     shift, and go to state 52
    OP_SEMI      shift, and go to state 53
    OP_BRA_L     shift, and go to state 54

    OP_PLUS     [reduce using rule 59 (expr)]
    OP_MINUS    [reduce using rule 59 (expr)]
    OP_MUL      [reduce using rule 59 (expr)]
    OP_DIV      [reduce using rule 59 (expr)]
    OP_MOD      [reduce using rule 59 (expr)]
    OP_EQ       [reduce using rule 59 (expr)]
    OP_INEQ     [reduce using rule 59 (expr)]
    OP_LESS     [reduce using rule 59 (expr)]
    OP_EQLESS   [reduce using rule 59 (expr)]
    OP_MORE     [reduce using rule 59 (expr)]
    OP_EQMORE   [reduce using rule 59 (expr)]
    OP_ASSIGN   [reduce using rule 59 (expr)]
    OP_PLUSEQ   [reduce using rule 59 (expr)]
    OP_MINUSEQ  [reduce using rule 59 (expr)]
    OP_MULEQ    [reduce using rule 59 (expr)]
    OP_DIVEQ    [reduce using rule 59 (expr)]
    OP_MODEQ    [reduce using rule 59 (expr)]
    OP_SEMI     [reduce using rule 59 (expr)]
    $default    reduce using rule 59 (expr)

    main_program                go to state 374
    local_declarations          go to state 56
    var_declarations            go to state 57
    conditions                  go to state 58
    while_loop                  go to state 59
    for_loop                    go to state 60
    variable_types              go to state 61
    comp_types_of_declarations  go to state 15
    expr                        go to state 62
    operators                   go to state 63


State 373

  137 comp_var_declarations: KW_HASH TK_IDENT OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN KW_HASH TK_IDENT OP_BRA_L legal_array_index . OP_BRA_R OP_SEMI

    OP_BRA_R  shift, and go to state 375


State 374

   30 main_program: main_program . local_declarations
   31 local_declarations: . var_declarations
   32                   | . expr OP_SEMI
   33                   | . conditions KW_ENDIF OP_SEMI
   34                   | . while_loop KW_ENDWHILE OP_SEMI
   35                   | . for_loop KW_ENDFOR OP_SEMI
   36                   | . KW_BREAK OP_SEMI
   37                   | . KW_CONTINUE OP_SEMI
   38 var_declarations: . variable_types OP_ASSIGN expr OP_SEMI
   39                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN expr OP_SEMI
   40                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   41                 | . variable_types OP_ASSIGN variable_types OP_BRA_L legal_array_index OP_BRA_R OP_SEMI
   42                 | . variable_types OP_BRA_L legal_array_index OP_BRA_R OP_MEAN types OP_SEMI
   43                 | . comp_types_of_declarations OP_MEAN types OP_SEMI
   44                 | . KW_CONST comp_types_of_declarations OP_ASSIGN data_types OP_MEAN types OP_SEMI
   45                 | . KW_CONST comp_types_of_declarations OP_ASSIGN operators data_types OP_MEAN types OP_SEMI
   46 conditions: . KW_IF OP_PAR_L expr OP_PAR_R OP_MEAN main_program
   47           | . KW_IF OP_PAR_L expr OP_PAR_R OP_MEAN comp_function_code
   48           | . conditions KW_ELSE OP_MEAN main_program
   49 while_loop: . KW_WHILE OP_PAR_L expr OP_PAR_R OP_MEAN main_program
   50           | . KW_WHILE OP_PAR_L expr OP_PAR_R OP_MEAN comp_function_code
   51 for_loop: . KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_BRA_R OP_MEAN main_program
   52         | . KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_BRA_R OP_MEAN comp_function_code
   53         | . KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_MEAN expr OP_BRA_R OP_MEAN main_program
   53         | KW_FOR TK_IDENT KW_IN OP_BRA_L expr OP_MEAN expr OP_MEAN expr OP_BRA_R OP_MEAN main_program .  [KW_ENDFOR]
   54 variable_types: . TK_IDENT
   55               | . KW_HASH TK_IDENT
   56 comp_types_of_declarations: . variable_types
   57                           | . comp_types_of_declarations OP_COMA variable_types
   58                           | . comp_types_of_declarations OP_COMA variable_types OP_BRA_L legal_array_index OP_BRA_R
   59 expr: . %empty  [KW_NOT, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_EQ, OP_INEQ, OP_LESS, OP_EQLESS, OP_MORE, OP_EQMORE, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULEQ, OP_DIVEQ, OP_MODEQ, OP_SEMI, OP_COMA, OP_DOT]
   60     | . TK_STRING
   61     | . TK_INT
   62     | . TK_REAL
   63     | . KW_TRUE
   64     | . KW_FALSE
   65     | . variable_types OP_PAR_L OP_PAR_R
   66     | . variable_types OP_PAR_L expr OP_PAR_R
   67     | . operators expr
   68     | . variable_types
   69     | . variable_types OP_BRA_L legal_array_index OP_BRA_R
   70     | . variable_types OP_BRA_L KW_HASH legal_array_index OP_BRA_R
   71     | . variable_types OP_BRA_L variable_types OP_BRA_R
   72     | . OP_POINTER expr
   73     | . expr OP_COMA expr
   74     | . expr OP_DOT expr
   75     | . expr OP_PLUS expr
   76     | . expr OP_MINUS expr
   77     | . expr OP_MUL expr
   78     | . expr OP_DIV expr
   79     | . expr OP_MOD expr
   80     | . expr OP_EQ expr
   81     | . expr OP_INEQ expr
   82     | . expr OP_LESS expr
   83     | . expr OP_EQLESS expr
   84     | . expr OP_MORE expr
   85     | . expr OP_EQMORE expr
   86     | . expr OP_ASSIGN expr
   87     | . expr KW_AND expr
   88     | . expr KW_OR expr
   89     | . expr KW_NOT expr
   90     | . expr OP_PLUSEQ expr
   91     | . expr OP_MINUSEQ expr
   92     | . expr OP_MULEQ expr
   93     | . expr OP_DIVEQ expr
   94     | . expr OP_MODEQ expr
   95     | . OP_PAR_L expr OP_PAR_R
   96     | . OP_BRA_L expr OP_BRA_L
   97     | . OP_SEMI
  108 operators: . OP_PLUS
  109          | . OP_MINUS
  110          | . OP_MUL
  111          | . OP_DIV
  112          | . OP_MOD
  113          | . OP_POWER
  114          | . OP_EQ
  115          | . OP_INEQ
  116          | . OP_LESS
  117          | . OP_EQLESS
  118          | . OP_MORE
  119          | . OP_EQMORE
  120          | . OP_ASSIGN
  121          | . OP_PLUSEQ
  122          | . OP_MINUSEQ
  123          | . OP_MULEQ
  124          | . OP_DIVEQ
  125          | . OP_MODEQ

    TK_STRING    shift, and go to state 23
    TK_IDENT     shift, and go to state 1
    TK_INT       shift, and go to state 24
    TK_REAL      shift, and go to state 25
    KW_HASH      shift, and go to state 2
    KW_IF        shift, and go to state 26
    KW_FALSE     shift, and go to state 27
    KW_FOR       shift, and go to state 28
    KW_BREAK     shift, and go to state 29
    KW_CONST     shift, and go to state 4
    KW_CONTINUE  shift, and go to state 30
    KW_WHILE     shift, and go to state 31
    KW_TRUE      shift, and go to state 32
    OP_PLUS      shift, and go to state 33
    OP_MINUS     shift, and go to state 34
    OP_MUL       shift, and go to state 35
    OP_DIV       shift, and go to state 36
    OP_MOD       shift, and go to state 37
    OP_POWER     shift, and go to state 38
    OP_EQ        shift, and go to state 39
    OP_INEQ      shift, and go to state 40
    OP_LESS      shift, and go to state 41
    OP_EQLESS    shift, and go to state 42
    OP_MORE      shift, and go to state 43
    OP_EQMORE    shift, and go to state 44
    OP_ASSIGN    shift, and go to state 45
    OP_PLUSEQ    shift, and go to state 46
    OP_MINUSEQ   shift, and go to state 47
    OP_MULEQ     shift, and go to state 48
    OP_DIVEQ     shift, and go to state 49
    OP_MODEQ     shift, and go to state 50
    OP_POINTER   shift, and go to state 51
    OP_PAR_L     shift, and go to state 52
    OP_SEMI      shift, and go to state 53
    OP_BRA_L     shift, and go to state 54

    KW_ENDFOR   reduce using rule 53 (for_loop)
    OP_PLUS     [reduce using rule 59 (expr)]
    OP_MINUS    [reduce using rule 59 (expr)]
    OP_MUL      [reduce using rule 59 (expr)]
    OP_DIV      [reduce using rule 59 (expr)]
    OP_MOD      [reduce using rule 59 (expr)]
    OP_EQ       [reduce using rule 59 (expr)]
    OP_INEQ     [reduce using rule 59 (expr)]
    OP_LESS     [reduce using rule 59 (expr)]
    OP_EQLESS   [reduce using rule 59 (expr)]
    OP_MORE     [reduce using rule 59 (expr)]
    OP_EQMORE   [reduce using rule 59 (expr)]
    OP_ASSIGN   [reduce using rule 59 (expr)]
    OP_PLUSEQ   [reduce using rule 59 (expr)]
    OP_MINUSEQ  [reduce using rule 59 (expr)]
    OP_MULEQ    [reduce using rule 59 (expr)]
    OP_DIVEQ    [reduce using rule 59 (expr)]
    OP_MODEQ    [reduce using rule 59 (expr)]
    OP_SEMI     [reduce using rule 59 (expr)]
    $default    reduce using rule 59 (expr)

    local_declarations          go to state 87
    var_declarations            go to state 57
    conditions                  go to state 58
    while_loop                  go to state 59
    for_loop                    go to state 60
    variable_types              go to state 61
    comp_types_of_declarations  go to state 15
    expr                        go to state 62
    operators                   go to state 63


State 375

  137 comp_var_declarations: KW_HASH TK_IDENT OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN KW_HASH TK_IDENT OP_BRA_L legal_array_index OP_BRA_R . OP_SEMI

    OP_SEMI  shift, and go to state 376


State 376

  137 comp_var_declarations: KW_HASH TK_IDENT OP_BRA_L legal_array_index OP_BRA_R OP_ASSIGN KW_HASH TK_IDENT OP_BRA_L legal_array_index OP_BRA_R OP_SEMI .

    $default  reduce using rule 137 (comp_var_declarations)
